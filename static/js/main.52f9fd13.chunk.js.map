{"version":3,"sources":["components/TestDescriptionContent/TestDescriptionContent.module.scss","views/TestDescription/TestDescription.module.scss","views/Home/Home.module.scss","views/TranscriptSubjectTest/TranscriptSubjectTest.module.scss","views/VideoSubjectTest/VideoSubjectTest.module.scss","views/VideoSubjectTest/TestTranscriptComponent/TestTranscriptComponent.module.scss","views/SampleViewOfTopicSegmentation/SampleViewOfTopicSegmentation.module.scss","components/SliderWithInput/SliderWithInput.module.scss","views/ConceptualRecurrencePlot/ConceptualMapModal/ConceptualMapControllers/ConceptualMapControllers.module.scss","views/SubjectTestEnd/SubjectTestEnd.module.scss","data sync /^/.*/utterance_objects/.json$","views/Header/Header.module.scss","views/ConceptualRecurrencePlot/ConceptualMapModal/ConceptualMapModal.module.scss","views/ConceptualRecurrencePlot/TranscriptViewer/TranscriptViewer.module.scss","components/ParticipantTooltip/ParticipantTooltip.module.scss","views/FunctionComponentTemplate/FunctionComponentTemplate.module.scss","views/ClassComponentTemplate/ClassComponentTemplate.module.scss","views/TranscriptViewerM/TranscriptViewerM.module.scss","views/VideoSubjectTest/VideoPlayer/VideoPlayer.module.scss","data sync /^/.*/stopword_dict/.json$","data sync /^/.*/concept_matrix/.json$","data sync /^/.*/keyterm_objects/.json$","data sync /^/.*/similarity_matrix/.json$","data sync /^/.*/term_list/.json$","data sync /^/.*/term_utterance_boolean_matrix/.json$","data sync /^/.*/frequency_vector/.json$","data sync /^/.*/sentenceindex_lexicalchains_dict/.json$","data sync /^/.*/evaluation_results/merged_by_close_sentence/.json$","data/test_description_samples sync /^/.*/.json$","common_functions/makeParticipants.ts","views/Timeline/Timeline.tsx","views/ConceptualRecurrencePlot/Drawers/UncertainIconDrawer.ts","views/ConceptualRecurrencePlot/Drawers/SimilarityBlocksDrawer.ts","common_functions/hexToRgb.ts","views/ConceptualRecurrencePlot/Drawers/ParticipantBlocksDrawer.ts","common_functions/findTopValueIndexes.ts","views/ConceptualRecurrencePlot/ConceptualMapModal/TermCountDictOfEGMaker.ts","views/ConceptualRecurrencePlot/Drawers/TopicGroupsDrawer.ts","views/ConceptualRecurrencePlot/DataStructureMaker/extractTermsFromEngagementGroup.ts","views/ConceptualRecurrencePlot/Drawers/InsistenceMarkersDrawer.ts","views/ConceptualRecurrencePlot/Drawers/RefutationIconDrawer.ts","views/ConceptualRecurrencePlot/Drawers/InsistenceIconDrawer.ts","views/ConceptualRecurrencePlot/Drawers/D3Drawer.ts","views/ConceptualRecurrencePlot/ConceptualMapModal/ConceptualMapDrawerInternalFunctions.ts","views/ConceptualRecurrencePlot/ConceptualMapModal/ConceptualMapDrawer.ts","views/ConceptualRecurrencePlot/ConceptualMapModal/OccurrenceMaker.ts","constants/constants.ts","views/ConceptualRecurrencePlot/ConceptualMapModal/GraphDataStructureMaker.ts","components/SliderWithInput/SliderWithInput.tsx","views/ConceptualRecurrencePlot/ConceptualMapModal/ConceptualMapControllers/ConceptualMapControllers.tsx","views/ConceptualRecurrencePlot/ConceptualMapModal/ConceptualMapModal.tsx","views/ConceptualRecurrencePlot/TranscriptViewer/TranscriptViewer.tsx","views/ConceptualRecurrencePlot/DataStructureMaker/make1EngagementGroup.ts","views/ConceptualRecurrencePlot/DataStructureMaker/makeManualEGs.ts","views/ConceptualRecurrencePlot/DataStructureMaker/UtteranceObjectsForDrawingManager.ts","views/ConceptualRecurrencePlot/DataStructureMaker/SimilarityBlockManager.ts","views/ConceptualRecurrencePlot/DataStructureMaker/DataStructureManager.ts","views/ConceptualRecurrencePlot/DataImporter.ts","views/ConceptualRecurrencePlot/DataStructureMaker/CombinedEGsMaker.ts","components/ParticipantTooltip/ParticipantTooltip.tsx","views/Header/Header.tsx","views/ConceptualRecurrencePlot/ConceptualRecurrencePlot.tsx","redux/actionTypes.ts","views/Home/Home.tsx","views/FunctionComponentTemplate/FunctionComponentTemplate.tsx","views/ClassComponentTemplate/ClassComponentTemplate.tsx","views/TranscriptViewerM/TranscriptViewerM.tsx","views/TranscriptSubjectTest/TestSubjectsFunctions.ts","views/TranscriptSubjectTest/TranscriptSubjectTest.tsx","components/BasicModal/BasicModal.tsx","views/VideoSubjectTest/VideoPlayer/VideoPlayer.tsx","components/TestDescriptionContent/TestDescriptionContent.tsx","views/TestDescription/TestDescription.tsx","views/VideoSubjectTest/TestTranscriptComponent/TestTranscriptComponent.tsx","views/VideoSubjectTest/DescriptionModal/DescriptionModal.tsx","views/VideoSubjectTest/VideoSubjectTest.tsx","views/SubjectTestEnd/SubjectTestEnd.tsx","views/SampleViewOfTopicSegmentation/SampleViewOfTopicSegmentation.tsx","App.tsx","serviceWorker.ts","redux/reducers/standardSimilarityScoreReducer.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","makeParticipants","debateName","debateUtterances","nameDictionary","_","forEach","utteranceObject","name","names","values","sort","console","log","participants","colorDictionary","0","1","2","3","4","index","team","color","5","participantPatternDictionary","participant","patterns","pattern","isMine","length","utterance","push","makeParticipantPatternDictionary","agendas","startLength","topicInfo","Timeline","props","timelineRef","React","createRef","className","ref","this","timelineDiv","d3","svgSelection","append","attr","selectAll","data","enter","d","i","text","totalLength","sumBy","participantNames","participantName","participantIndex","indexOf","pastLength","findPastLength","style","topicGSelection","Component","UncertainIconDrawer","utteranceObjectsForDrawing","_visible","_similarityBlock","uncertainIconGSlection","colUtteranceObject","columnUtteranceIndex","transformProperty","beginningPointOfXY","width","similarityBlock","SimilarityBlocksDrawer","similarityBlocks","similarityBlockGroup","participantDict","conceptSimilarityRectGSelection","_coloringSelfSimilarities","_showEngagementPoint","_coloringRebuttal","_standardHighPointOfSimilarityScore","_clickListener","standardHighPointOfSimilarityScore","mostHighSimilarityBlock","maxBy","weight","similarity","similarityRectGSelectionDataBound","visible","fillColorOfSimilarityBlock","engagementPoint","conceptSimilarityMatrix","limitConstant","coloringSelfSimilarities","coloringRebuttal","opacity","weightedSimilarity","rowUtteranceObject","rowUtteranceIndex","other","rgb","hex","replace","m","r","g","b","result","exec","parseInt","hexToRgb","refutation","beginningPointOfX","beginningPointOfY","height","on","mouseEvent","stopPropagation","mainKeytermObjects","mainKeytermObject","exit","remove","showEngagementPoint","mouseoverListener","ParticipantBlocksDrawer","conceptSimilarityBlocks","conceptMatrixTransposed","keytermObjects","participantRectGSlection","selectedParticipants","_mouseoverListener","_mouseoutListener","participantRectGSlectionDataBound","join","call","selection","u","utteranceObjectForDrawing","bind","selectedParticipant","rowParticipantName","colParticipantName","participant1","participant2","clickListener","mouseoutListener","findTopValueIndexes","array","numOfTop","sortedArray","orderBy","topValueIndexes","numberOfSame","indexWanted","TermCountDictOfEGMaker","utteranceObjectsOfEG","termType","termCountDictOfEG","termBooleanCountDictOfEG","termCountDetailDictOfEG","termBooleanCountDetailDictOfEG","defaultParticipantNameCountDict","chain","count","sentiment","value","sentenceObjects","sentenceObject","termCountDict","singleTermCountDict","compoundTermCountDict","term","cloneDeep","TopicGroupsDrawer","debateDataSet","dataStructureSet","topicGuideRectGSelection","topicGuideTextGSelection","_topicGroups","_topicGroupTitles","_showTopicGroupTitle","_showTopicGroup","_guideColor","onTitleClicked","topicGroups","topicGroupTitles","showTopicGroup","showTopicGroupTitle","guideColor","showEngagementGroup","eg","mostLeftTopBlock","lastHorizontalLine","mostRightBottomBlock","arg","highFrequencyTerms","engagementGroup","utteranceObjects","rowSimilarityBlocks","utteranceIndex","getTermCountDictOfEG","termCountObjectsOfEG","sortedTermCountObjectsOfEG","termCountObject","numOfFrequencyTerms","extractFrequencyTermsFromEG","engagementGroupIndex","extractedTerms","termUtteranceBooleanMatrixTransposed","termList","grouptermCountDict","verticalSimilarityBlocks","termBooleans","termBoolean","termIndex","termsOfGroup","extractTermsFromEngagementGroup","InsistenceMarkersDrawer","insistenceMarkerGSlection","hasRefutation","rowIndex","insistence","RefutationIconDrawer","refutationIconGSlection","translateProperty","InsistenceIconDrawer","insistenceIconGSlection","D3Drawer","conceptRecurrencePlotDiv","svgGSelection","participantBlocksDrawer","insistenceMarkersDrawer","refutationIconDrawer","insistenceIconDrawer","uncertainIconDrawer","similarityBlocksDrawer","topicGroupsDrawer","manualSmallTGsDrawer","manualMiddleTGsDrawer","manualBigTGsDrawer","manualPeopleTGsDrawer","lcsegEGsDrawer","svgWidth","svgHeight","_zoomListener","node","clientWidth","clientHeight","select","event","transform","utteranceObjectsForDrawingManager","similarityBlockManager","update","emptySelectedParticipants","lastUtteranceObjectForDrawing","minusWidth","adjustedWidth","adjustedHeight","element","document","createElement","zoomTransform","translate","warn","zoomListener","SvgGSelectionsMaker","conceptualMapDivSelection","makePieData","ConceptualMapDrawer","coneptualMapDivClassName","_participantDict","linksGSelection","nodesGSelection","nodePiesGSelection","circlesOfNodePiesGSelection","nodeTextsGSelection","_nodeLinkDict","_nodeSizeMultiplier","_sentimentMarkerVisible","gradient","tinygradient","nodeLinkDict","nodeSizeMultiplier","sentimentMarkerVisible","nodes","links","svgGSelectionsMaker","appendSvgSelection","appendSvgGSelection","appendLinksGSelection","appendNodePiesGSelection","appendCirclesOfNodePiesGSelection","appendNodesGSelection","appendTextsGSelection","simulation","force","makeSimulation","drag","active","alphaTarget","restart","subject","fx","x","fy","y","Math","sqrt","that","each","nodeDatum","participantCounts","innerRadius","outerRadius","arcMaker","makeArcDAttribute","arcDatum","ratios","participantCount","totalCount","reduce","reduced","frontCount","j","distance","cos","PI","sin","source","target","OccurrenceMaker","utteranceOjbectsOfEG","termListOfEG","termCountDictType","sentenceWindow","_occurrenceVector","_cooccurrenceMatrix","occurrenceDict","termCountDictsOfWS","windowSentenceElements","utteranceOjbect","termCountDictOfWS","windowSentenceElement","shift","sentence","search","math","term1","term1Index","term2","term2Index","pythonFlaskAddress","keyDict","aiopen","apiHostAddressDictionary","nodeExpress","pythonFlask","GraphDataStructureMaker","cooccurrenceMatrixOfEG","startIndex","endIndex","filter","termCountDictOfEGMaker","getTermBooleanCountDictOfEG","getTermCountDetailDictOfEG","getTermBooleanCountDetailDictOfEG","makeTermListOfEG","frequencyVectorOfEG","makeFrequencyVectorOfEG","booleanFrequencyVectorOfEG","occurrenceMaker","cooccurrenceMatrix","makeNodes","standardCooccurrenceToGenerateLinks","maxOfLinksPerNode","isNodeNotHavingLinksShown","makeLinks","filterNodes","nodeDict","keyBy","findIndex","link","standardHighCount","Promise","reject","axios","post","then","response","catch","reason","group","booleanCount","participantBooleanCounts","standardHighCooccurrence","maxOflinksPerNode","linkCandidateDict","sourceTerm","sourceTermIndex","selectedTargetObjects","cooccurrenceVectorOfATerm","targetObjects","targetObject","filteredTargetObjects","selectedTargetObject","targetTerm","linkId","filteredLinkDict","filteredLinkCandidates","linkDatum","SliderWithInput","onChange","changedValue","onChangeListener","state","styles","sliderContainer","slider","min","max","step","trackStyle","backgroundColor","trackColor","handleStyle","border","marginTop","sliderWidth","size","inputNumber","ConceptualMapControllers","conceptualMapControllers","conceptualMapDrawer","setNodeSizeMultiplier","updateGraph","setState","maxCooccurrence","standardTermCount","nodesAndLinks","graphDataStructureMaker","generateNodesAndLinks","showNodeNotHavingLinks","setGraphData","standardTermCountSliderListener","maxOfLinksPerNodeSliderListener","checkbox","defaultChecked","checked","showNodeNotHavingLinksCheckboxListener","marginBottom","forwardRef","modalRef","useRef","useState","modalVisible","setModalVisible","modalTitle","setModalTitle","setMaxCooccurrence","standardTermCountToGenerateNode","setStandardTermCountToGenerateNode","setMaxOfLinksPerNode","setShowNodeNotHavingLinks","setConceptualMapDrawer","setGraphDataStructureMaker","useEffect","modalContentWidth","modalContentHeight","setParticipantDict","useImperativeHandle","openModal","removeDrawing","getCooccurrenceMatrixOfEG","ceiledMedian","ceil","cooccurrenceVector","title","bodyStyle","onCancel","maskClosable","conceptualMapModalContent","TranscriptViewer","transcriptViewer","dataStructureMaker","key","make1EngagementGroup","conceptSimilarityGroup","startRowIndex","endRowIndex","slice","rowSimilarityLine","makeManualTGs","totalSimilarityBlockGroup","startRowIndexesForSplit","manualTGs","topicGroup","make1TopicGroup","UtteranceObjectsForDrawingManager","_utteranceObjectsForDrawing","_positiveSumStandard","_sentenceSentimentStandard","_columnLongStandard","getPositiveOrNot","positiveSumStandard","columnLongStandard","sentenceSentimentStandard","newUtteranceObject","p","applyPositive","require","SimilarityBlockManager","_similarityBlocks","_similarityBlockGroup","_selfConsistencyWeight","_otherConsistencyWeight","_refutationWeight","_insistenceWeight","_negativeSumStandard","_colUtteranceLongStandard","_hostWeight","_hostLongStandard","utteranceRowIndex","utteranceColIndex","rowUtteranceConcept","colUtteranceConcept","partsOfSimilarity","keytermScore1","similarityScore","sum","topValueIndex","conceptSimilarityBlock","applyRefutation","negativeSumStandard","colUtteranceLongStandard","filtered","rowSimilarityBlock","utteranceIndexOfrowSimilarityBlock","isFilter","utteranceOjbect1","utteranceOjbect2","team1","team2","selfConsistencyWeight","applyWeight","otherConsistencyWeight","refutationWeight","insistenceWeight","hostWeight","hostLongStandard","DataStructureManager","_dataStructureSet","_datasetOfManualEGs","maxSimilarityScore","utteranceIndexSentenceIndexTotalSentenceIndexDict","totalSentenceIndex","sentenceIndex","manualSmallEGs","manualMiddleEGs","manualBigEGs","manualSmallEGTitles","manualMiddleEGTitles","manualBigEGTitles","DataImporter","_debateDataset","_evaluationDataSet","stopwordDict","conceptMatrix","similarityMatrix","termUtteranceBooleanMatrix","frequencyVector","sentenceIndexLexicalChainsDict","sentenceIndexesForSegmentsOfPeople","CombinedEGsMaker","minEngagementGroupSize","_standardSemanticConsistency","_groupSimilaritiesWeight","_lineSimilaritiesWeight","_pointSimilaritiesWeight","segmentCounting","trySplit2EGs","numOfSegments","choosedDataSet","findNew2TopicGroups","oldTopicGroup","concat","new2TopicGroups","topicGroupsCandidatesOfEachTop","semanticConsistenciesOfEachTop","dataSetOfTopicGroupCandidates","getDataSetOfTopicGroupCandidates","dataSetOfTopTopicGroupsCandidate","topicGroupsCandidates","semanticConsistencies","maxSemanticConsistency","indexOfMax","semanticConsistency","findTopTopicGroupsCandidate","maxValue","lastRowBlocks","engagementGroup1","engagementGroup2","getSumOfSimilarities","groupSimilaritiesWeight","borderSimilaritiesWeight","pointSimilaritiesWeight","getNumberOfSimilartyBlocks","isNaN","egCandidate","standardSemanticConsistency","engagementGroups","engagementGroupsCandidates","engagementGroupsCandidate","splittdEGs1","splittdEGs2","colIndex","groupLinePointWeight","lineSimilaritiesWeight","ParticipantTooltip","setVisible","position","left","top","k","debateDataset","mainKeytermsString","keytermObject","content","onVisibleChange","overlayClassName","popover","getPosition","getWidth","onClick","d3Drawer","click","Header","mainLink","navi","ConceptualRecurrencePlot","query","URLSearchParams","useLocation","debateNameOfQuery","get","termTypeOfQuery","setDebateDataset","dataStructureManager","setDataStructureManager","setEvaluationDataSet","combinedEGsMaker","setCombinedEGsMaker","setD3Drawer","conceptualMapModalRef","standardSimilarityScore","useSelector","standardSimilarityScoreReducer","dispatch","useDispatch","mouseoveredUtterance","setMouseoveredUtterance","setTransform","tooltipVisible","setTooltipVisible","dataImporter","type","payload","evaluationDataSet","datasetOfManualEGs","makeByNumOfSegments","mouseoutLisener","extractedKeytermObjects","sumOfKeytermScores","keytermScores","extractKeytermsFromEngagementGroup","current","centerConceptualRecurrentPlot","Home","setTermType","home","serviceTitle","button","href","FunctionComponentTemplate","component","ClassComponentTemplate","utteranceOjbects","TranscriptViewerM","aaa","bbb","makeBodyTextBackgroundColor","currentSentenceIndex","sentenceIndexesOfSegments","sentenceIndexOfSegment","makeBodyTextBackgroundColorInMinimap","submitTestResult","subjectRecordInTesting","error","getSentenceDataSetAtViewport","bodyTextContainerRef","scrollTop","$","window","windowHeight","$spans","firstSentenceInViewport","firstSentenceOverViewport","span","spanIndex","$span","offset","is","findSameSentenceAndApplyScrollTopAtMinimap","minimapRef","firstSentence","lastSentence","$minimapSpans","firstSentenceTop","firstSentenceIndex","Number","MAX_VALUE","lastSentenceTop","movingTopInMinimap","minimapSpan","minimapSpanIndex","$minimapSpan","applyScrollTopAtTranscript","videoCurrentSecondTime","totalSentenceObjects","secondTimes","vrewTime","splittedTime","split","hour","minute","second","seconds","vrewTimeToSeconds","time","diffs","secondTime","POSITIVE_INFINITY","minIndex","diff","$bodyTextContainer","$theSpan","children","pastBackgroundColor","css","stop","animate","TranscriptSubjectTest","locationState","setUtteranceObjects","setTotalSentenceObjects","setSentenceIndexesOfSegments","checkboxes","setCheckboxes","setUtteranceIndexSentenceIndexTotalSentenceIndexDict","minimapViewportTop","setMinimapViewportTop","setMinimapViewportHeight","Array","fill","onScroll","dataSetOfSentence","dataSetOfSentenceInMinimap","minimapViewportHeight","simpleGuideContainer","guideText","rel","bodyContainer","flex","bodyTextContainer","checkboxIndex","marginRight","display","justifyContent","buttonsContainerToSubmit","minimap","segmentCountStatus","okListener","confirmLoading","setConfirmLoading","modalText","setModalText","loadingOn","onOk","promise","undefined","videoJsPlayer","setVideoJsPlayer","componentRef","videoRef","videoJsOptions","autoplay","controls","sources","src","playbackRates","resizeListener","videojs","isPlaying","shiftOn","tech","off","currentPlaybackRate","playbackRate","pause","play","currentTime","volume","addEventListener","dispose","removeEventListener","getVideoCurrentSecondTime","data-vjs-palyer","TestDescription","videoPlayerRef","bodyContentZone","subtitle","level","lastContentText","Option","Select","DescriptionForManualTopicSegmentation","participationCodeSet","history","useHistory","participationCodeOfQuery","basicModalRef","ageGroup","setAgeGroup","gender","setGender","major","setMajor","participationCode","setParticipationCode","titleContainer","TestDescriptionContent","previousStartStage","subjectInfoInputContainer","lineHeight","textAlign","disabled","startContainer","pathname","guideContainer","alignItems","placement","toString","transcriptContainer","debounce","lastSentenceIndexInUtterance","modalHeight","setModalHeight","innerHeight","dispatchEvent","Event","overflow","VideoSubjectTest","leftPartRef","transcriptWithCheckboxRef","descriptionModalRef","debateOriginalTitle","setDebateOriginalTitle","leftPart","headline","shape","questionButton","icon","faQuestion","questionIcon","padding","borderColor","xmlns","rightPart","SubjectTestEnd","SampleViewOfTopicSegmentation","정영진","박연미","사회자","이지만","김범중","omitting","App","path","zxcvzxcv","Boolean","location","hostname","match","initialState","action","combinedReducers","combineReducers","store","createStore","rootReducer","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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,wBACdhE,EACAgH,EAAc/C,eACdpD,GAEIkD,EACJ+H,EAAuBnL,iBACnBkB,EACJiK,EAAuBlL,qBAEnB+d,EAA6B1iB,IAAEqF,MACnCyC,GACA,SAACsZ,GAAD,OAA4BA,EAAuB7b,cAClDA,WASGod,EAAuG,GACzGC,EAA6B,EACjC5iB,IAAEC,QACA8K,EAAcuB,kBACd,SAACpM,EAAiBsM,GAChBmW,EAAkDnW,GAAkB,GACpExM,IAAEC,QACAC,EAAgBqK,iBAChB,SAACC,EAAgBqY,GACfF,EAAkDnW,GAChDqW,GACED,EACJA,UAOR,IAAIE,EAAwC,GACxCC,EAAyC,GACzCC,EAAsC,GACtCC,EAAgC,GAChCC,EAAiC,GACjCC,EAA8B,GACf,6BAAftjB,GACFijB,EAAiBjE,GAAcjZ,EAAyB,CACtD,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,MAEFmd,EAAkBlE,GAAcjZ,EAAyB,CACvD,EACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,MAEFod,EAAenE,GAAcjZ,EAAyB,CACpD,EACA,GACA,GACA,GACA,IACA,MAEFqd,EH1HG,CACL,+FACA,4DACA,mHACA,wEACA,uHACA,+JACA,qHACA,sPACA,+CACA,6EACA,4JACA,qHG+GEC,EH1GG,CACL,+FACA,4DACA,wEACA,4IACA,qHACA,sPACA,+CACA,kGACA,qIGkGEC,EH7FG,CACL,+FACA,4DACA,wEACA,uDACA,kGACA,sIGwF0B,oCAAftjB,GACTijB,EAAiBjE,GAAcjZ,EAAyB,CACtD,EACA,GACA,GACA,GACA,GACA,GACA,GACA,KAqBFqd,EH3JG,CACL,+FACA,4DACA,mHACA,wEACA,uHACA,+JACA,qHACA,sPACA,+CACA,6EACA,4JACA,sHGkJ0B,6BAAfpjB,GACTmjB,EAAenE,GAAcjZ,EAAyB,CACpD,EACA,GACA,GACA,IACA,IACA,IACA,IACA,MAEFud,EH/HG,CACL,mHACA,4JACA,oGACA,8GACA,kFACA,6IACA,8GACA,+IGwH0B,uBAAftjB,GACTmjB,EAAenE,GAA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","file":"static/js/main.52f9fd13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"TestDescriptionContent_component__1oXGe\",\"bodyContentZone\":\"TestDescriptionContent_bodyContentZone__2oNyL\",\"subtitle\":\"TestDescriptionContent_subtitle__16W7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"TestDescription_component__3se9w\",\"titleContainer\":\"TestDescription_titleContainer__1SvYq\",\"title\":\"TestDescription_title__1kGTm\",\"previousStartStage\":\"TestDescription_previousStartStage__1ppvP\",\"subjectInfoInputContainer\":\"TestDescription_subjectInfoInputContainer__129ra\",\"select\":\"TestDescription_select__23tnH\",\"startContainer\":\"TestDescription_startContainer__1JKXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__15UEE\",\"serviceTitle\":\"Home_serviceTitle__GyHGU\",\"checkbox\":\"Home_checkbox__2E5av\",\"links\":\"Home_links__2KVL_\",\"button\":\"Home_button__2wP6N\",\"apiTestTitle\":\"Home_apiTestTitle__19ZNB\",\"apiButtons\":\"Home_apiButtons__3LpSt\",\"apiButton\":\"Home_apiButton__S4zmc\",\"evaluationTitle\":\"Home_evaluationTitle__3lv7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"TranscriptSubjectTest_component__2G1gE\",\"simpleGuideContainer\":\"TranscriptSubjectTest_simpleGuideContainer__m0_gQ\",\"guideText\":\"TranscriptSubjectTest_guideText__2-yez\",\"bodyContainer\":\"TranscriptSubjectTest_bodyContainer__1lKCC\",\"bodyTextContainer\":\"TranscriptSubjectTest_bodyTextContainer__3dEaZ\",\"buttonsContainerToSubmit\":\"TranscriptSubjectTest_buttonsContainerToSubmit__1reTC\",\"minimap\":\"TranscriptSubjectTest_minimap__1lxJ2\",\"segmentCountStatus\":\"TranscriptSubjectTest_segmentCountStatus__2eu8n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"VideoSubjectTest_component__UXPj9\",\"leftPart\":\"VideoSubjectTest_leftPart__39X4k\",\"headline\":\"VideoSubjectTest_headline__2x5lm\",\"title\":\"VideoSubjectTest_title__3AsoX\",\"questionButton\":\"VideoSubjectTest_questionButton__1K2dy\",\"rightPart\":\"VideoSubjectTest_rightPart__18Wnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"TestTranscriptComponent_component__1itri\",\"guideContainer\":\"TestTranscriptComponent_guideContainer__1GaJe\",\"guideText\":\"TestTranscriptComponent_guideText__1WQFG\",\"transcriptContainer\":\"TestTranscriptComponent_transcriptContainer__20-KY\",\"bodyTextContainer\":\"TestTranscriptComponent_bodyTextContainer__EDjEI\",\"minimap\":\"TestTranscriptComponent_minimap__3t2wh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"SampleViewOfTopicSegmentation_component__304_6\",\"bodyTextContainer\":\"SampleViewOfTopicSegmentation_bodyTextContainer__8HBTZ\",\"omitting\":\"SampleViewOfTopicSegmentation_omitting__VdW13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderContainer\":\"SliderWithInput_sliderContainer__2Ag_U\",\"slider\":\"SliderWithInput_slider__2HYZb\",\"inputNumber\":\"SliderWithInput_inputNumber__3ts3d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conceptualMapControllers\":\"ConceptualMapControllers_conceptualMapControllers__3mAv1\",\"checkbox\":\"ConceptualMapControllers_checkbox__5UhE1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"SubjectTestEnd_component__2AWnX\",\"text\":\"SubjectTestEnd_text__3vfkE\"};","var map = {\n\t\"./sample/utterance_objects.json\": 245,\n\t\"./기본소득/utterance_objects.json\": 127,\n\t\"./기본소득clipped/utterance_objects.json\": 455,\n\t\"./모병제/utterance_objects.json\": 456,\n\t\"./모병제clipped/utterance_objects.json\": 457,\n\t\"./정년연장/utterance_objects.json\": 458,\n\t\"./정시확대/utterance_objects.json\": 459,\n\t\"./정시확대clipped/utterance_objects.json\": 460,\n\t\"./지방소멸/utterance_objects.json\": 461,\n\t\"./집값/utterance_objects.json\": 462\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 185;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainLink\":\"Header_mainLink__1wpQX\",\"navi\":\"Header_navi__pmLd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conceptualMapModalContent\":\"ConceptualMapModal_conceptualMapModalContent__1RpHH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transcriptViewer\":\"TranscriptViewer_transcriptViewer__1EGvM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popover\":\"ParticipantTooltip_popover__EHHOh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"FunctionComponentTemplate_component__2M3yj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ClassComponentTemplate_component__AOSUH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"TranscriptViewerM_component__1-vCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"VideoPlayer_component__daVle\"};","var map = {\n\t\"./sample/stopword_dict.json\": 464,\n\t\"./기본소득/stopword_dict.json\": 465,\n\t\"./기본소득clipped/stopword_dict.json\": 466,\n\t\"./모병제/stopword_dict.json\": 467,\n\t\"./모병제clipped/stopword_dict.json\": 468,\n\t\"./정년연장/stopword_dict.json\": 469,\n\t\"./정시확대/stopword_dict.json\": 470,\n\t\"./정시확대clipped/stopword_dict.json\": 471,\n\t\"./지방소멸/stopword_dict.json\": 472,\n\t\"./집값/stopword_dict.json\": 473\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 463;","var map = {\n\t\"./sample/compound_term/concept_matrix.json\": 475,\n\t\"./sample/single_term/concept_matrix.json\": 476,\n\t\"./기본소득/compound_term/concept_matrix.json\": 477,\n\t\"./기본소득/single_term/concept_matrix.json\": 478,\n\t\"./기본소득clipped/compound_term/concept_matrix.json\": 479,\n\t\"./기본소득clipped/single_term/concept_matrix.json\": 480,\n\t\"./모병제/compound_term/concept_matrix.json\": 481,\n\t\"./모병제/single_term/concept_matrix.json\": 482,\n\t\"./모병제clipped/compound_term/concept_matrix.json\": 483,\n\t\"./모병제clipped/single_term/concept_matrix.json\": 484,\n\t\"./정시확대/compound_term/concept_matrix.json\": 485,\n\t\"./정시확대/single_term/concept_matrix.json\": 486,\n\t\"./정시확대clipped/compound_term/concept_matrix.json\": 487,\n\t\"./정시확대clipped/single_term/concept_matrix.json\": 488\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 474;","var map = {\n\t\"./sample/compound_term/keyterm_objects.json\": 490,\n\t\"./sample/single_term/keyterm_objects.json\": 491,\n\t\"./기본소득/compound_term/keyterm_objects.json\": 492,\n\t\"./기본소득/single_term/keyterm_objects.json\": 493,\n\t\"./기본소득clipped/compound_term/keyterm_objects.json\": 494,\n\t\"./기본소득clipped/single_term/keyterm_objects.json\": 495,\n\t\"./모병제/compound_term/keyterm_objects.json\": 496,\n\t\"./모병제/single_term/keyterm_objects.json\": 497,\n\t\"./모병제clipped/compound_term/keyterm_objects.json\": 498,\n\t\"./모병제clipped/single_term/keyterm_objects.json\": 499,\n\t\"./정년연장/compound_term/keyterm_objects.json\": 500,\n\t\"./정년연장/single_term/keyterm_objects.json\": 501,\n\t\"./정시확대/compound_term/keyterm_objects.json\": 502,\n\t\"./정시확대/single_term/keyterm_objects.json\": 503,\n\t\"./정시확대clipped/compound_term/keyterm_objects.json\": 504,\n\t\"./정시확대clipped/single_term/keyterm_objects.json\": 505,\n\t\"./지방소멸/keyterm_objects.json\": 506,\n\t\"./집값/compound_term/keyterm_objects.json\": 507,\n\t\"./집값/single_term/keyterm_objects.json\": 508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 489;","var map = {\n\t\"./sample/compound_term/similarity_matrix.json\": 510,\n\t\"./sample/single_term/similarity_matrix.json\": 511,\n\t\"./기본소득/compound_term/similarity_matrix.json\": 512,\n\t\"./기본소득/single_term/similarity_matrix.json\": 513,\n\t\"./기본소득clipped/compound_term/similarity_matrix.json\": 514,\n\t\"./기본소득clipped/single_term/similarity_matrix.json\": 515,\n\t\"./모병제/compound_term/similarity_matrix.json\": 516,\n\t\"./모병제/single_term/similarity_matrix.json\": 517,\n\t\"./모병제clipped/compound_term/similarity_matrix.json\": 518,\n\t\"./모병제clipped/single_term/similarity_matrix.json\": 519,\n\t\"./정시확대/compound_term/similarity_matrix.json\": 520,\n\t\"./정시확대/single_term/similarity_matrix.json\": 521,\n\t\"./정시확대clipped/compound_term/similarity_matrix.json\": 522,\n\t\"./정시확대clipped/single_term/similarity_matrix.json\": 523\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 509;","var map = {\n\t\"./sample/compound_term/term_list.json\": 525,\n\t\"./sample/single_term/term_list.json\": 526,\n\t\"./기본소득/compound_term/term_list.json\": 527,\n\t\"./기본소득/single_term/term_list.json\": 528,\n\t\"./기본소득clipped/compound_term/term_list.json\": 529,\n\t\"./기본소득clipped/single_term/term_list.json\": 530,\n\t\"./모병제/compound_term/term_list.json\": 531,\n\t\"./모병제/single_term/term_list.json\": 532,\n\t\"./모병제clipped/compound_term/term_list.json\": 533,\n\t\"./모병제clipped/single_term/term_list.json\": 534,\n\t\"./정년연장/compound_term/term_list.json\": 535,\n\t\"./정년연장/single_term/term_list.json\": 536,\n\t\"./정시확대/compound_term/term_list.json\": 537,\n\t\"./정시확대/single_term/term_list.json\": 538,\n\t\"./정시확대clipped/compound_term/term_list.json\": 539,\n\t\"./정시확대clipped/single_term/term_list.json\": 540,\n\t\"./지방소멸/term_list.json\": 541,\n\t\"./집값/compound_term/term_list.json\": 542,\n\t\"./집값/single_term/term_list.json\": 543\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 524;","var map = {\n\t\"./sample/compound_term/term_utterance_boolean_matrix.json\": 545,\n\t\"./sample/single_term/term_utterance_boolean_matrix.json\": 546,\n\t\"./기본소득/compound_term/term_utterance_boolean_matrix.json\": 547,\n\t\"./기본소득/single_term/term_utterance_boolean_matrix.json\": 548,\n\t\"./기본소득clipped/compound_term/term_utterance_boolean_matrix.json\": 549,\n\t\"./기본소득clipped/single_term/term_utterance_boolean_matrix.json\": 550,\n\t\"./모병제/compound_term/term_utterance_boolean_matrix.json\": 551,\n\t\"./모병제/single_term/term_utterance_boolean_matrix.json\": 552,\n\t\"./모병제clipped/compound_term/term_utterance_boolean_matrix.json\": 553,\n\t\"./모병제clipped/single_term/term_utterance_boolean_matrix.json\": 554,\n\t\"./정시확대/compound_term/term_utterance_boolean_matrix.json\": 555,\n\t\"./정시확대/single_term/term_utterance_boolean_matrix.json\": 556,\n\t\"./정시확대clipped/compound_term/term_utterance_boolean_matrix.json\": 557,\n\t\"./정시확대clipped/single_term/term_utterance_boolean_matrix.json\": 558,\n\t\"./지방소멸/term_utterance_boolean_matrix.json\": 559\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 544;","var map = {\n\t\"./sample/compound_term/frequency_vector.json\": 561,\n\t\"./sample/single_term/frequency_vector.json\": 562,\n\t\"./기본소득/compound_term/frequency_vector.json\": 563,\n\t\"./기본소득/single_term/frequency_vector.json\": 564,\n\t\"./기본소득clipped/compound_term/frequency_vector.json\": 565,\n\t\"./기본소득clipped/single_term/frequency_vector.json\": 566,\n\t\"./모병제/compound_term/frequency_vector.json\": 567,\n\t\"./모병제/single_term/frequency_vector.json\": 568,\n\t\"./모병제clipped/compound_term/frequency_vector.json\": 569,\n\t\"./모병제clipped/single_term/frequency_vector.json\": 570,\n\t\"./정년연장/compound_term/frequency_vector.json\": 571,\n\t\"./정년연장/single_term/frequency_vector.json\": 572,\n\t\"./정시확대/compound_term/frequency_vector.json\": 573,\n\t\"./정시확대/single_term/frequency_vector.json\": 574,\n\t\"./정시확대clipped/compound_term/frequency_vector.json\": 575,\n\t\"./정시확대clipped/single_term/frequency_vector.json\": 576,\n\t\"./지방소멸/frequency_vector.json\": 577,\n\t\"./집값/compound_term/frequency_vector.json\": 578,\n\t\"./집값/single_term/frequency_vector.json\": 579\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 560;","var map = {\n\t\"./sample/compound_term/sentenceindex_lexicalchains_dict.json\": 581,\n\t\"./sample/single_term/sentenceindex_lexicalchains_dict.json\": 582,\n\t\"./기본소득/compound_term/sentenceindex_lexicalchains_dict.json\": 583,\n\t\"./기본소득/single_term/sentenceindex_lexicalchains_dict.json\": 584,\n\t\"./기본소득clipped/compound_term/sentenceindex_lexicalchains_dict.json\": 585,\n\t\"./기본소득clipped/single_term/sentenceindex_lexicalchains_dict.json\": 586,\n\t\"./모병제/compound_term/sentenceindex_lexicalchains_dict.json\": 587,\n\t\"./모병제/single_term/sentenceindex_lexicalchains_dict.json\": 588,\n\t\"./모병제clipped/compound_term/sentenceindex_lexicalchains_dict.json\": 589,\n\t\"./모병제clipped/single_term/sentenceindex_lexicalchains_dict.json\": 590,\n\t\"./정시확대/compound_term/sentenceindex_lexicalchains_dict.json\": 591,\n\t\"./정시확대/single_term/sentenceindex_lexicalchains_dict.json\": 592,\n\t\"./정시확대clipped/compound_term/sentenceindex_lexicalchains_dict.json\": 593,\n\t\"./정시확대clipped/single_term/sentenceindex_lexicalchains_dict.json\": 594\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 580;","var map = {\n\t\"./기본소득/evaluation_results/merged_by_close_sentence.json\": 596,\n\t\"./기본소득clipped/evaluation_results/merged_by_close_sentence.json\": 597,\n\t\"./모병제/evaluation_results/merged_by_close_sentence.json\": 598,\n\t\"./모병제clipped/evaluation_results/merged_by_close_sentence.json\": 599,\n\t\"./정시확대/evaluation_results/merged_by_close_sentence.json\": 600,\n\t\"./정시확대clipped/evaluation_results/merged_by_close_sentence.json\": 601\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 595;","var map = {\n\t\"./sample_1.json\": 712,\n\t\"./sample_2.json\": 713,\n\t\"./sample_3.json\": 714,\n\t\"./sample_4.json\": 715\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 711;","import _ from \"lodash\";\r\nimport { UtteranceObject } from \"../interfaces/DebateDataInterface\";\r\nimport { DebateName } from \"../views/ConceptualRecurrencePlot/DataImporter\";\r\n\r\nexport interface Participant {\r\n  name: string;\r\n  color: string;\r\n  team: number;\r\n}\r\n\r\nexport interface ParticipantDict {\r\n  [participant: string]: Participant;\r\n}\r\n\r\n/**\r\n * make participants information inclduing name, color\r\n * @param debateUtterances\r\n */\r\nexport function makeParticipants(\r\n  debateName: DebateName,\r\n  debateUtterances: UtteranceObject[]\r\n): Participant[] {\r\n  const nameDictionary: { [name: string]: string } = {};\r\n  // arrange participants\r\n  _.forEach(debateUtterances, (utteranceObject) => {\r\n    nameDictionary[utteranceObject.name] = utteranceObject.name;\r\n  });\r\n  const names: string[] = _.values(nameDictionary).sort();\r\n  console.log(\"names\", names);\r\n\r\n  let participants: Participant[] = [];\r\n  if (debateName === \"sample\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"#C941AF\",\r\n      1: \"#C98E41\",\r\n      2: \"#4161C9\",\r\n      3: \"#41C9C9\",\r\n      4: \"#333333\",\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = 2;\r\n          break;\r\n        case 1:\r\n          team = 1;\r\n          break;\r\n        case 2:\r\n          team = 1;\r\n          break;\r\n        case 3:\r\n          team = 2;\r\n          break;\r\n        case 4:\r\n          team = -1;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  } else if (debateName === \"기본소득\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"hsl(10, 0%, 50%)\", // 시청자\r\n      1: \"#FF0000\",\r\n      2: \"#00FF00\",\r\n      3: \"#3CB043\",\r\n      4: \"#A020F0\",\r\n      5: \"#333333\",\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = -1;\r\n          break;\r\n        case 1:\r\n          team = 2;\r\n          break;\r\n        case 2:\r\n          team = 2;\r\n          break;\r\n        case 3:\r\n          team = 1;\r\n          break;\r\n        case 4:\r\n          team = 1;\r\n          break;\r\n        case 5:\r\n          team = -2;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  } else if (debateName === \"기본소득clipped\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"#FF0000\",\r\n      1: \"#00FF00\",\r\n      2: \"#3CB043\",\r\n      3: \"#A020F0\",\r\n      4: \"#333333\",\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = 2;\r\n          break;\r\n        case 1:\r\n          team = 2;\r\n          break;\r\n        case 2:\r\n          team = 1;\r\n          break;\r\n        case 3:\r\n          team = 1;\r\n          break;\r\n        case 4:\r\n          team = -2;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  } else if (debateName === \"정시확대\" || debateName === \"정시확대clipped\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"#FF0000\",\r\n      1: \"#00FF00\",\r\n      2: \"#3CB043\",\r\n      3: \"#A020F0\",\r\n      4: \"#333333\",\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = 1;\r\n          break;\r\n        case 1:\r\n          team = 2;\r\n          break;\r\n        case 2:\r\n          team = 1;\r\n          break;\r\n        case 3:\r\n          team = 2;\r\n          break;\r\n        case 4:\r\n          team = -2;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  } else if (debateName === \"모병제\" || debateName === \"모병제clipped\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"#FF0000\",\r\n      1: \"#00FF00\",\r\n      2: \"#3CB043\",\r\n      3: \"#A020F0\",\r\n      4: \"#333333\",\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = 1;\r\n          break;\r\n        case 1:\r\n          team = 2;\r\n          break;\r\n        case 2:\r\n          team = 2;\r\n          break;\r\n        case 3:\r\n          team = 1;\r\n          break;\r\n        case 4:\r\n          team = -2;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  } else if (debateName === \"집값\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"#000000\", // 김수지\r\n      1: \"#C941AF\", // 김현아\r\n      2: \"#C98E41\", // 송석준\r\n      3: \"#41C9C9\", // 진성준\r\n      4: \"#333333\", // 진행자\r\n      5: \"#4161C9\", // 최배근\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = -1;\r\n          break;\r\n        case 1:\r\n          team = 2;\r\n          break;\r\n        case 2:\r\n          team = 2;\r\n          break;\r\n        case 3:\r\n          team = 1;\r\n          break;\r\n        case 4:\r\n          team = -2;\r\n          break;\r\n        case 5:\r\n          team = 1;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  } else if (debateName === \"정년연장\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"#41C9C9\", // 김범중\r\n      1: \"#4161C9\", // 박연미\r\n      2: \"#C98E41\", // 이지만\r\n      3: \"#C941AF\", // 정영진\r\n      4: \"#333333\", // 진행자\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = 2;\r\n          break;\r\n        case 1:\r\n          team = 2;\r\n          break;\r\n        case 2:\r\n          team = 1;\r\n          break;\r\n        case 3:\r\n          team = 1;\r\n          break;\r\n        case 4:\r\n          team = -2;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  }\r\n\r\n  // console.log(\"participants\", participants);\r\n\r\n  return participants;\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\n// import Button from \"react-bootstrap/esm/Button\";\r\nimport \"./Timeline.scss\";\r\nimport * as d3 from \"d3\";\r\nimport _ from \"lodash\";\r\n\r\nimport debateUtterances from \"../../data/기본소득/utterance_objects.json\";\r\nimport { UtteranceObject } from \"../../interfaces/DebateDataInterface\";\r\nimport {\r\n  makeParticipants,\r\n  Participant,\r\n} from \"../../common_functions/makeParticipants\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\ninterface Pattern {\r\n  name: string;\r\n  isMine: boolean;\r\n  length: number;\r\n  utterance: string;\r\n}\r\n\r\nfunction makeParticipantPatternDictionary(\r\n  debateUtterances: UtteranceObject[],\r\n  participants: Participant[]\r\n) {\r\n  const participantPatternDictionary: {\r\n    [particiapnt: string]: Pattern[];\r\n  } = {};\r\n\r\n  _.forEach(participants, (participant) => {\r\n    const patterns: Pattern[] = [];\r\n    let pattern: Pattern = {\r\n      name: participant.name,\r\n      isMine: false,\r\n      length: 0,\r\n      utterance: \"\",\r\n    };\r\n    _.forEach(debateUtterances, (utterance, index) => {\r\n      if (participant.name === utterance.name) {\r\n        patterns.push(pattern);\r\n\r\n        pattern = {\r\n          name: participant.name,\r\n          isMine: true,\r\n          length: 0,\r\n          utterance: \"\",\r\n        };\r\n        pattern.length += utterance.utterance.length;\r\n        pattern.utterance = utterance.utterance;\r\n        patterns.push(pattern);\r\n\r\n        pattern = {\r\n          name: participant.name,\r\n          isMine: false,\r\n          length: 0,\r\n          utterance: \"\",\r\n        };\r\n      } else {\r\n        pattern.length += utterance.utterance.length;\r\n        if (index === debateUtterances.length - 1) {\r\n          patterns.push(pattern);\r\n        }\r\n      }\r\n    });\r\n\r\n    participantPatternDictionary[participant.name] = patterns;\r\n  });\r\n\r\n  return participantPatternDictionary;\r\n}\r\n\r\nfunction findPastLength(patterns: Pattern[], index: number): number {\r\n  let pastLength: number = 0;\r\n  for (let i = 0; i < index; i++) {\r\n    pastLength += patterns[i].length;\r\n  }\r\n\r\n  return pastLength;\r\n}\r\n//@ts-ignore\r\nconst participants = makeParticipants(\"기본소득\", debateUtterances);\r\n// console.log(\"participants\", participants);\r\n\r\nconst participantPatternDictionary = makeParticipantPatternDictionary(\r\n  //@ts-ignore\r\n  debateUtterances,\r\n  participants\r\n);\r\n// console.log(\"participantPatternDictionary\", participantPatternDictionary);\r\n\r\nconst agendas: {\r\n  startLength: number;\r\n  topicInfo: string;\r\n}[] = [\r\n  {\r\n    startLength: 500,\r\n    topicInfo: \"찬반 of '긴급재난지원금 경제적 효과'\",\r\n  },\r\n  {\r\n    startLength: 4120,\r\n    topicInfo: \"기본소득 정의 및 평가\",\r\n  },\r\n  {\r\n    startLength: 8340,\r\n    topicInfo: \"보수진영에서 기본소득이 이슈화된 이유는?\",\r\n  },\r\n  {\r\n    startLength: 8850,\r\n    topicInfo: \"안심소득 소개 및 이해과정\",\r\n  },\r\n  {\r\n    startLength: 10600,\r\n    topicInfo: \"찬반(증세 및 조세저항) of '안심소득 vs 기본소득'\",\r\n  },\r\n  {\r\n    startLength: 13280,\r\n    topicInfo:\r\n      \"찬반(증세,경제 효과) of '안심소득 vs 기본소득' in '이재명 vs 오세훈'\",\r\n  },\r\n  {\r\n    startLength: 15670,\r\n    topicInfo: \"현실적 방안인지 찬반 of '안심소득 vs 기본소득'\",\r\n    // '근로유인, 소득격차줄임, 복지차원'에 대한 관점으로도 논의해야 함 => 증세없이 안심소득으로 위의 사안들을 해결 가능함 => 안심소득이 현실적이다.\r\n  },\r\n  {\r\n    startLength: 19600,\r\n    topicInfo:\r\n      \"기본소득, 안심소득의 '기존 복지 제도 통합'에 대해 서로들 오해하고 있음 => 서로 의견 주고 받음..\",\r\n  },\r\n  {\r\n    startLength: 22865,\r\n    topicInfo: \"시청자 의견 소개\",\r\n  },\r\n  {\r\n    startLength: 24020,\r\n    topicInfo: \"기본소득의 실현가능성 찬반\",\r\n  },\r\n  {\r\n    startLength: 29150,\r\n    topicInfo: \"'미래의 노동공급과 생존'에 대한 서로 다른 복지정책의 접근\",\r\n  },\r\n  {\r\n    startLength: 30600,\r\n    topicInfo: \"기본소득의 근로의욕 반대 의견 및 팩트체크\",\r\n  },\r\n];\r\n\r\nclass Timeline extends React.Component {\r\n  private timelineRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.timelineRef = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"timeline\" ref={this.timelineRef}>\r\n        <div>Timeline</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    const timelineDiv = d3.select(\".timeline\");\r\n\r\n    // const clientWidth: number = this.timelineRef.current?.clientWidth as number;\r\n    const clientWidth: number = 7000;\r\n\r\n    const svgSelection = timelineDiv\r\n      .append(\"svg\")\r\n      .attr(\"width\", clientWidth)\r\n      .attr(\"height\", 600);\r\n\r\n    // draw names of participants\r\n    const nameTextGSelection = svgSelection\r\n      .append(\"g\")\r\n      .attr(\"class\", \"name-text-g\");\r\n    nameTextGSelection\r\n      .selectAll(\"text\")\r\n      .data(participants)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", () => 30)\r\n      .attr(\"y\", (d, i) => 30 * i + 30)\r\n      .text((d) => d.name);\r\n\r\n    // draw rect of participant pattern\r\n    const totalLength: number = _.sumBy(\r\n      debateUtterances,\r\n      (utteranceObject) => utteranceObject.utterance.length\r\n    );\r\n    const participantNames: string[] = _.map(\r\n      participants,\r\n      (participant) => participant.name\r\n    ).sort();\r\n\r\n    _.forEach(participantPatternDictionary, (patterns, participantName) => {\r\n      const participantIndex: number = participantNames.indexOf(\r\n        participantName\r\n      );\r\n\r\n      // console.log(\"participantIndex\", participantIndex, patterns);\r\n      const rectGSelection = svgSelection.append(\"g\");\r\n      rectGSelection\r\n        .selectAll(\"rect\")\r\n        .data(patterns)\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\r\n          \"x\",\r\n          (d, i) => (findPastLength(patterns, i) / totalLength) * clientWidth\r\n        )\r\n        .attr(\"y\", 30 + 30 * participantIndex)\r\n        .attr(\"width\", (d) => (d.length / totalLength) * clientWidth)\r\n        .attr(\"height\", 10)\r\n        .style(\"fill\", (d) =>\r\n          d.isMine ? participants[participantIndex].color : \"#cccccc\"\r\n        )\r\n        .append(\"title\")\r\n        .text((d) => (d.isMine ? d.name + \": \" + d.utterance : \"\"));\r\n    });\r\n\r\n    // draw line of manual topic\r\n    const topiclineGSelection = svgSelection.append(\"g\");\r\n    topiclineGSelection\r\n      .selectAll(\"line\")\r\n      .data(agendas) // length of characters\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d) => (d.startLength / totalLength) * clientWidth)\r\n      .attr(\"y1\", 10)\r\n      .attr(\"x2\", (d) => (d.startLength / totalLength) * clientWidth)\r\n      .attr(\"y2\", 220)\r\n      .style(\"stroke\", \"black\")\r\n      .style(\"stroke-width\", 3)\r\n      .append(\"title\")\r\n      .text((d) => d.topicInfo);\r\n\r\n    // draw topic text\r\n    const topicGSelection = svgSelection.append(\"g\");\r\n    console.log(topicGSelection);\r\n    topicGSelection\r\n      .selectAll(\"text\")\r\n      .data(agendas)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", (d, i) =>\r\n        i + 1 < agendas.length\r\n          ? ((d.startLength + agendas[i + 1].startLength) / 2 / totalLength) *\r\n            clientWidth\r\n          : ((d.startLength + totalLength) / 2 / totalLength) * clientWidth\r\n      )\r\n      .attr(\"y\", 240)\r\n      .text((d) => d.topicInfo)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .style(\"font-size\", 13);\r\n  }\r\n}\r\n\r\n// export default Timeline;\r\n\r\n// eslint-disable-next-line react/display-name\r\nexport default () => {\r\n  // console.log(useLocation());\r\n  // console.log(new URLSearchParams(useLocation().search).get(\"data\"));\r\n  return <Timeline></Timeline>;\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\nexport class UncertainIconDrawer {\r\n  private _visible: boolean = false;\r\n  private _similarityBlock: SimilarityBlock | null = null;\r\n\r\n  private readonly uncertainIconGSlection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    this.uncertainIconGSlection = svgSelection\r\n      .append(\"g\")\r\n      .style(\"visibility\", \"hidden\");\r\n\r\n    this.uncertainIconGSlection\r\n      .append(\"path\")\r\n      .attr(\r\n        \"d\",\r\n        \"M285,627.1c28.7,0,56.1-0.4,83.5,0.1c19.8,0.4,34.7,9.5,42.7,28.1c7.6,17.7,4.4,34.1-8,48.5c-3.9,4.5-9.1,8-13.8,11.9\\\r\n\tc14.5,32.4,11.1,46.8-16.5,69.5c15,31.2,11.8,47.4-13.7,69.4c2.7,7.5,6.7,14.6,7.9,22.3c4.7,28.9-15.8,53.4-45.6,53.6\\\r\n\tc-59,0.5-117.9,0.1-176.9,0c-16.2,0-30.2-6.1-42.4-17.5c-9.6,11.2-20.7,18.6-35.6,18.6c-23.7,0-42.3-17.1-42.6-41.4\\\r\n\tc-0.6-43.5-0.3-87-0.3-130.5c0-29,0-58,0.1-87c0.1-23.9,11.2-40.5,30.6-45.8c20.5-5.6,37.8,2.4,50.6,23.5c0.3,0.6,1,0.9,2.8,2.5\\\r\n\tc18.9-19.2,40.8-32.7,70.2-24.4c0.4-5,0.8-7.8,0.8-10.6c0-49.7-0.1-99.3,0.2-149c0-7.3-1.8-10.4-9.3-12.6\\\r\n\tC60.1,424.3-7.9,325.2,0.7,210.6C8.6,106.1,95.2,15.1,199.1,2C329-14.3,440.9,69.6,461.8,198.9c18,111.6-53.7,224.4-163.5,256\\\r\n\tc-10.6,3-13.8,7.1-13.6,18.3C285.4,523.8,285,574.5,285,627.1z M232.8,443.1c115.5-0.3,209.8-94.9,209.7-210.6\\\r\n\tc0-117.2-94.2-211.2-211.2-211.1C115.6,21.7,21.4,116.2,21.8,231.8C22.3,349.5,116,443.5,232.8,443.1z M261.4,648.8\\\r\n\tc-34.7,0-69.4-0.1-104.1,0.2c-4.7,0-10.2,1.2-14,3.8c-9.9,6.6-19.4,13.9-28.4,21.7c-3,2.6-5.6,7.6-5.6,11.6\\\r\n\tc-0.4,60.9-0.4,121.8-0.2,182.6c0.1,27.2,13,39.9,39.9,40.1c30.4,0.2,60.7,0.1,91.1,0c27.5,0,55,0.3,82.4-0.4\\\r\n\tc14.8-0.4,23.8-10.6,23.7-24.3c-0.2-13.2-9.1-22.6-23.3-23.7c-7.2-0.6-14.5-0.5-21.7-0.4c-7.9,0.2-15.6-0.9-15.7-10.5\\\r\n\tc0-10.2,8-11.4,16.3-11.3c11.9,0.1,23.9,0.4,35.8-0.2c13.2-0.6,22.9-11.5,22.5-24.5c-0.3-12.4-10-22.7-22.7-23.4\\\r\n\tc-7.9-0.5-15.9-0.2-23.9-0.2c-7.5,0-13.2-2.9-13.2-11c0.1-8.1,5.7-10.9,13.3-10.8c12.3,0.1,24.6,0.3,36.9-0.1\\\r\n\tc14.5-0.5,25.6-11.3,25.5-24.4c0-12.8-10.3-23-24.7-23.8c-8.7-0.5-17.3-0.2-26-0.3c-7.4-0.1-14.3-1.6-14.5-10.8\\\r\n\tc-0.2-9.3,6.4-11,14-11c14.5,0,28.9,0.4,43.4-0.2c16.5-0.6,27.8-14.3,24.5-28.9c-2.7-12.4-12.6-19.8-27.4-19.8\\\r\n\tC330.8,648.7,296.1,648.8,261.4,648.8z M45.6,779c0,35.5-0.1,71,0,106.4c0,15.7,8,24.6,21.2,24.4c12.6-0.2,20.3-9.3,20.3-24.3\\\r\n\tc0.1-71,0-141.9,0-212.9c0-16.1-8.4-26-21.5-25.7c-12.6,0.3-20.1,9.7-20.1,25.6C45.6,708.1,45.6,743.5,45.6,779z M201.3,626.4\\\r\n\tc21.1,0,41.1,0,61.4,0c0-54.5,0-108.3,0-162.2c-20.7,0-40.7,0-61.4,0C201.3,517.9,201.3,571.7,201.3,626.4z\"\r\n      );\r\n\r\n    this.uncertainIconGSlection\r\n      .append(\"path\")\r\n      .attr(\r\n        \"d\",\r\n        \"M261.4,649.4c34.7,0,69.4-0.1,104.1,0c14.8,0.1,24.6,7.4,27.4,19.8c3.2,14.6-8,28.3-24.5,28.9\\\r\n\tc-14.4,0.5-28.9,0.2-43.4,0.2c-7.6,0-14.2,1.7-14,10.9s7.1,10.7,14.5,10.8c8.7,0.1,17.4-0.2,26,0.3c14.3,0.8,24.6,10.9,24.7,23.7\\\r\n\tc0,13-11,23.9-25.5,24.3c-12.3,0.4-24.6,0.2-36.9,0.1c-7.6-0.1-13.2,2.7-13.3,10.8c-0.1,8.1,5.7,11,13.2,11c8,0,15.9-0.2,23.9,0.2\\\r\n\tc12.6,0.7,22.4,11,22.7,23.3c0.3,12.9-9.3,23.8-22.5,24.5c-11.9,0.6-23.9,0.3-35.8,0.2c-8.3-0.1-16.3,1.1-16.3,11.3\\\r\n\tc0,9.6,7.8,10.7,15.7,10.5c7.2-0.2,14.5-0.2,21.7,0.4c14.2,1.1,23.1,10.5,23.3,23.7c0.2,13.7-8.9,23.9-23.7,24.3\\\r\n\tc-27.5,0.7-55,0.4-82.4,0.4c-30.4,0-60.7,0.1-91.1,0c-27-0.2-39.8-12.9-39.9-40c-0.2-60.7-0.2-121.5,0.2-182.2\\\r\n\tc0-3.9,2.6-8.9,5.6-11.5c9-7.8,18.5-15.1,28.4-21.7c3.9-2.6,9.3-3.7,14-3.8C192,649.3,226.7,649.4,261.4,649.4z\"\r\n      )\r\n      .style(\"fill\", \"#FFFFFF\");\r\n\r\n    this.uncertainIconGSlection\r\n      .append(\"path\")\r\n      .attr(\r\n        \"d\",\r\n        \"M45.6,779.3c0-35.4,0-70.8,0-106.2c0-15.9,7.5-25.3,20.1-25.6c13-0.3,21.4,9.6,21.5,25.6\\\r\n\tc0.1,70.8,0.1,141.6,0,212.4c0,15-7.7,24-20.3,24.3c-13.2,0.2-21.2-8.7-21.2-24.3C45.5,850.2,45.6,814.7,45.6,779.3z\"\r\n      )\r\n      .style(\"fill\", \"#FFFFFF\");\r\n\r\n    this.uncertainIconGSlection\r\n      .append(\"path\")\r\n      .attr(\r\n        \"d\",\r\n        \"M201.3,627c0-54.5,0-108.2,0-161.8c20.7,0,40.8,0,61.4,0c0,53.7,0,107.4,0,161.8C242.4,627,222.3,627,201.3,627z\"\r\n      )\r\n      .style(\"fill\", \"#FFFFFF\");\r\n\r\n    this.uncertainIconGSlection\r\n      .append(\"text\")\r\n      .attr(\"transform\", \"matrix(1 0 0 1 87.9887 247.1015)\")\r\n      .style(\"font-family\", \"ArialMT\")\r\n      .style(\"font-size\", \"345.7846px\")\r\n      .text(\"...\");\r\n  }\r\n\r\n  public update() {\r\n    if (this._similarityBlock !== null) {\r\n      const colUtteranceObject = this.utteranceObjectsForDrawing[\r\n        this._similarityBlock.columnUtteranceIndex\r\n      ];\r\n      const transformProperty = `translate(${\r\n        colUtteranceObject.beginningPointOfXY +\r\n        colUtteranceObject.width / 2 -\r\n        2.5\r\n      }, ${colUtteranceObject.beginningPointOfXY - 10} ) scale(0.01, 0.01)`;\r\n\r\n      this.uncertainIconGSlection\r\n        .attr(\"transform\", transformProperty)\r\n        .style(\"visibility\", \"visible\");\r\n    } else {\r\n      this.uncertainIconGSlection.style(\"visibility\", \"hidden\");\r\n    }\r\n  }\r\n\r\n  public set similarityBlock(similarityBlock: SimilarityBlock | null) {\r\n    this._similarityBlock = similarityBlock;\r\n  }\r\n\r\n  // public set visible(visible: boolean) {\r\n  //   this._visible = visible;\r\n  // }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport { hexToRgb } from \"../../../common_functions/hexToRgb\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport { SentenceObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { UtteranceObjectForDrawing } from \"../interfaces\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\n\r\nexport type ColoringSelfSimilarities =\r\n  | \"none\"\r\n  | \"oneColor\"\r\n  | \"participantColors\";\r\nexport class SimilarityBlocksDrawer {\r\n  private readonly conceptSimilarityRectGSelection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  private _coloringSelfSimilarities: ColoringSelfSimilarities = \"none\";\r\n  private _showEngagementPoint: boolean = false;\r\n  private _coloringRebuttal: boolean = false;\r\n  private _standardHighPointOfSimilarityScore!: number;\r\n  private _clickListener:\r\n    | ((e: MouseEvent, d: SimilarityBlock) => void)\r\n    | null = null;\r\n\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    private readonly similarityBlocks: SimilarityBlock[],\r\n    private readonly similarityBlockGroup: SimilarityBlock[][],\r\n    private readonly participantDict: ParticipantDict,\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    //\r\n    this.conceptSimilarityRectGSelection = svgSelection.append(\"g\");\r\n  }\r\n\r\n  public set standardHighPointOfSimilarityScore(\r\n    standardHighPointOfSimilarityScore: number\r\n  ) {\r\n    this._standardHighPointOfSimilarityScore = standardHighPointOfSimilarityScore;\r\n  }\r\n\r\n  public applyColorRatioSettingByTopSimilarityBlock() {\r\n    const mostHighSimilarityBlock = _.maxBy(\r\n      this.similarityBlocks,\r\n      (similarityBlock) => similarityBlock.weight * similarityBlock.similarity\r\n    )!;\r\n    this._standardHighPointOfSimilarityScore =\r\n      mostHighSimilarityBlock.weight * mostHighSimilarityBlock.similarity;\r\n  }\r\n\r\n  public update() {\r\n    const similarityRectGSelectionDataBound = this.conceptSimilarityRectGSelection\r\n      .selectAll<SVGRectElement, unknown>(\"rect\")\r\n      .data(this.similarityBlocks)\r\n      .style(\"fill\", (d) => {\r\n        return d.visible\r\n          ? fillColorOfSimilarityBlock(\r\n              d,\r\n              this.utteranceObjectsForDrawing,\r\n              this.similarityBlockGroup,\r\n              this.participantDict,\r\n              this._standardHighPointOfSimilarityScore,\r\n              this._coloringSelfSimilarities,\r\n              this._coloringRebuttal\r\n            )\r\n          : \"none\";\r\n      })\r\n      .style(\"stroke-width\", 3)\r\n      .style(\"stroke\", (d) =>\r\n        this._showEngagementPoint && d.engagementPoint ? \"rgb(0, 0, 255)\" : null\r\n      );\r\n\r\n    similarityRectGSelectionDataBound\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d) => d.beginningPointOfX)\r\n      .attr(\"y\", (d) => d.beginningPointOfY)\r\n      .attr(\"width\", (d) => d.width)\r\n      .attr(\"height\", (d) => d.height)\r\n      .style(\"fill\", (d) => {\r\n        return d.visible\r\n          ? fillColorOfSimilarityBlock(\r\n              d,\r\n              this.utteranceObjectsForDrawing,\r\n              this.similarityBlockGroup,\r\n              this.participantDict,\r\n              this._standardHighPointOfSimilarityScore,\r\n              this._coloringSelfSimilarities,\r\n              this._coloringRebuttal\r\n            )\r\n          : \"none\";\r\n      })\r\n      .style(\"stroke-width\", 3)\r\n      .style(\"stroke\", (d) =>\r\n        this._showEngagementPoint && d.engagementPoint ? \"rgb(0, 0, 255)\" : null\r\n      )\r\n      .on(\"click\", (e, d) => {\r\n        const mouseEvent = (e as unknown) as MouseEvent;\r\n        mouseEvent.stopPropagation();\r\n        const similarityBlock = (d as unknown) as SimilarityBlock;\r\n\r\n        if (this._clickListener) {\r\n          this._clickListener(mouseEvent, similarityBlock);\r\n        }\r\n      })\r\n      .append(\"title\")\r\n      .text(\r\n        (d) =>\r\n          `rowUtteranceIndex: ${d.rowUtteranceIndex},\\ncolUtteranceIndex: ${\r\n            d.columnUtteranceIndex\r\n          },\\nsimilarity_score: ${d.similarity},\\nmain_keyterms: ${_.map(\r\n            d.mainKeytermObjects,\r\n            (mainKeytermObject) => `${mainKeytermObject.name}`\r\n          )}`\r\n      );\r\n\r\n    similarityRectGSelectionDataBound.exit().remove();\r\n\r\n    function fillColorOfSimilarityBlock(\r\n      similarityBlock: SimilarityBlock,\r\n      utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n      conceptSimilarityMatrix: SimilarityBlock[][],\r\n      participantDict: ParticipantDict,\r\n      limitConstant: number,\r\n      coloringSelfSimilarities: ColoringSelfSimilarities,\r\n      coloringRebuttal: boolean\r\n    ): string {\r\n      let opacity: number = 0;\r\n\r\n      // Adjust Opacity\r\n      const weightedSimilarity =\r\n        similarityBlock.weight * similarityBlock.similarity;\r\n      if (weightedSimilarity > limitConstant) {\r\n        opacity = 1;\r\n      } else {\r\n        opacity = weightedSimilarity / limitConstant;\r\n      }\r\n      // 1123 투명도 조절하기.\r\n      let color = `rgba(150, 100, 100, 0.25)`;\r\n      // let color = `rgba(0, 0, 0, ${opacity})`;\r\n\r\n      const rowUtteranceObject =\r\n        utteranceObjectsForDrawing[similarityBlock.rowUtteranceIndex];\r\n      const colUtteranceObject =\r\n        utteranceObjectsForDrawing[similarityBlock.columnUtteranceIndex];\r\n\r\n      // Update Coloring Self Similarities\r\n      if (!similarityBlock.other) {\r\n        switch (coloringSelfSimilarities) {\r\n          case \"oneColor\":\r\n            color = `rgba(198, 66, 66, ${opacity})`;\r\n            break;\r\n          case \"participantColors\":\r\n            // eslint-disable-next-line no-case-declarations\r\n            const rgb = hexToRgb(\r\n              participantDict[rowUtteranceObject.name].color\r\n            );\r\n            color = `rgba(${rgb!.r}, ${rgb!.g}, ${rgb!.b}, ${opacity})`;\r\n            break;\r\n        }\r\n      }\r\n\r\n      // Update Coloring Rebuttal\r\n      if (coloringRebuttal && similarityBlock.refutation) {\r\n        color = `rgba(198, 66, 66, ${opacity})`;\r\n      }\r\n\r\n      return color;\r\n    }\r\n  }\r\n\r\n  public set coloringSelfSimilarities(\r\n    coloringSelfSimilarities: ColoringSelfSimilarities\r\n  ) {\r\n    this._coloringSelfSimilarities = coloringSelfSimilarities;\r\n  }\r\n\r\n  public set showEngagementPoint(showEngagementPoint: boolean) {\r\n    this._showEngagementPoint = showEngagementPoint;\r\n    console.log(\"setter inner\", this._showEngagementPoint);\r\n  }\r\n\r\n  public set coloringRebuttal(coloringRebuttal: boolean) {\r\n    this._coloringRebuttal = coloringRebuttal;\r\n  }\r\n\r\n  public set clickListener(\r\n    mouseoverListener: (e: MouseEvent, d: SimilarityBlock) => void\r\n  ) {\r\n    this._clickListener = mouseoverListener;\r\n  }\r\n}\r\n","export function hexToRgb(hex: string) {\r\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n    return r + r + g + g + b + b;\r\n  });\r\n\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n      }\r\n    : null;\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { ParticipantDict } from \"./../../../common_functions/makeParticipants\";\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\nimport { Participant } from \"../../../common_functions/makeParticipants\";\r\nimport _ from \"lodash\";\r\nimport { KeytermObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { findTopValueIndexes } from \"../../../common_functions/findTopValueIndexes\";\r\n\r\nexport class ParticipantBlocksDrawer {\r\n  private readonly participantRectGSlection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  private selectedParticipants: Participant[] = [];\r\n  private _clickListener: null | (() => void) = null;\r\n  private _mouseoverListener:\r\n    | null\r\n    | ((\r\n        mouseEvent: MouseEvent,\r\n        utteranceObjectForDrawing: UtteranceObjectForDrawing\r\n      ) => void) = null;\r\n  private _mouseoutListener: null | (() => void) = null;\r\n\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    private readonly participantDict: ParticipantDict,\r\n    private readonly conceptSimilarityBlocks: SimilarityBlock[],\r\n    private readonly conceptMatrixTransposed: number[][],\r\n    private readonly keytermObjects: KeytermObject[],\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    this.participantRectGSlection = svgSelection.append(\"g\");\r\n  }\r\n\r\n  public update() {\r\n    const participantRectGSlectionDataBound = this.participantRectGSlection\r\n      .selectAll<SVGRectElement, UtteranceObjectForDrawing>(\"rect\")\r\n      .data(this.utteranceObjectsForDrawing)\r\n      .join(\"rect\");\r\n\r\n    participantRectGSlectionDataBound.call(\r\n      setAttributes.bind(\r\n        this,\r\n        participantRectGSlectionDataBound,\r\n        this.participantDict,\r\n        this.conceptMatrixTransposed,\r\n        this.keytermObjects\r\n      )\r\n    );\r\n\r\n    function setAttributes(\r\n      this: ParticipantBlocksDrawer,\r\n      selection: d3.Selection<\r\n        SVGRectElement,\r\n        UtteranceObjectForDrawing,\r\n        SVGGElement,\r\n        unknown\r\n      >,\r\n      participantDict: { [participant: string]: Participant },\r\n      conceptMatrixTransposed: number[][],\r\n      keytermObjects: KeytermObject[]\r\n    ) {\r\n      selection\r\n        .attr(\"x\", (d) => d.beginningPointOfXY)\r\n        .attr(\"y\", (d) => d.beginningPointOfXY)\r\n        .attr(\"width\", (d) => d.width)\r\n        .attr(\"height\", (d) => d.width)\r\n        .style(\"fill\", (d) => participantDict[d.name].color)\r\n        // .on(\"click\", (e, u) => {\r\n        //   const mouseEvent = (e as unknown) as MouseEvent;\r\n        //   mouseEvent.stopPropagation();\r\n        //   const selectedParticipant = (u as unknown) as UtteranceObjectForDrawing;\r\n        //   this.click(mouseEvent, selectedParticipant);\r\n        // })\r\n        .on(\"mouseover\", (e, u) => {\r\n          const mouseEvent = (e as unknown) as MouseEvent;\r\n          mouseEvent.stopPropagation();\r\n          const utteranceObjectForDrawing = (u as unknown) as UtteranceObjectForDrawing;\r\n\r\n          // TODO adjust transcript-view\r\n          if (this._mouseoverListener) {\r\n            this._mouseoverListener(mouseEvent, utteranceObjectForDrawing);\r\n          }\r\n        })\r\n        .on(\"mouseout\", (e, u) => {\r\n          if (this._mouseoutListener) {\r\n            this._mouseoutListener();\r\n          }\r\n        });\r\n      // TODO\r\n      // .append(\"title\")\r\n      // .text((d, i) => {\r\n      //   const conceptVectorOfUtterance = conceptMatrixTransposed[i];\r\n\r\n      //   const topValueIndexes = findTopValueIndexes(\r\n      //     conceptVectorOfUtterance,\r\n      //     3\r\n      //   );\r\n      //   const mainKeytermObjects = _.map(\r\n      //     topValueIndexes,\r\n      //     (topValueIndex) => keytermObjects[topValueIndex]\r\n      //   );\r\n\r\n      //   const mainKeytermsString = _.reduce(\r\n      //     mainKeytermObjects,\r\n      //     (result, keytermObject) => {\r\n      //       return `${result} ${keytermObject.name}`;\r\n      //     },\r\n      //     \"\"\r\n      //   );\r\n\r\n      //   return `main_keyterms:${mainKeytermsString}\\n${d.name} : ${d.utterance}`;\r\n      // });\r\n    }\r\n  }\r\n\r\n  public click(\r\n    e: MouseEvent | React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    u: UtteranceObjectForDrawing\r\n  ) {\r\n    const mouseEvent = e;\r\n    mouseEvent.stopPropagation();\r\n    const selectedParticipant = u;\r\n\r\n    this.selectedParticipants.push(\r\n      this.participantDict[selectedParticipant.name]\r\n    );\r\n\r\n    console.log(\"this.selectedParticipants\", this.selectedParticipants);\r\n\r\n    if (this.selectedParticipants.length === 1) {\r\n      // remain same participant's similairity_block. remove other participant's similarity_block\r\n      _.forEach(this.conceptSimilarityBlocks, (similarityBlock) => {\r\n        const rowParticipantName = this.utteranceObjectsForDrawing[\r\n          similarityBlock.rowUtteranceIndex\r\n        ].name;\r\n        const colParticipantName = this.utteranceObjectsForDrawing[\r\n          similarityBlock.columnUtteranceIndex\r\n        ].name;\r\n        if (\r\n          selectedParticipant.name === rowParticipantName ||\r\n          selectedParticipant.name === colParticipantName\r\n        ) {\r\n          similarityBlock.visible = true;\r\n        } else {\r\n          similarityBlock.visible = false;\r\n        }\r\n      });\r\n    } else if (this.selectedParticipants.length === 2) {\r\n      //\r\n      const participant1 = this.selectedParticipants[0];\r\n      const participant2 = this.selectedParticipants[1];\r\n\r\n      _.forEach(this.conceptSimilarityBlocks, (similarityBlock) => {\r\n        const rowParticipantName = this.utteranceObjectsForDrawing[\r\n          similarityBlock.rowUtteranceIndex\r\n        ].name;\r\n        const colParticipantName = this.utteranceObjectsForDrawing[\r\n          similarityBlock.columnUtteranceIndex\r\n        ].name;\r\n        if (\r\n          (rowParticipantName === participant1.name &&\r\n            colParticipantName === participant2.name) ||\r\n          (rowParticipantName === participant2.name &&\r\n            colParticipantName === participant1.name) ||\r\n          (rowParticipantName === participant1.name &&\r\n            colParticipantName === participant1.name) ||\r\n          (rowParticipantName === participant2.name &&\r\n            colParticipantName === participant2.name)\r\n        ) {\r\n          similarityBlock.visible = true;\r\n        } else {\r\n          similarityBlock.visible = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    // drawSimilarityBlocks\r\n    if (this._clickListener) {\r\n      this._clickListener();\r\n    }\r\n  }\r\n\r\n  public emptySelectedParticipants() {\r\n    this.selectedParticipants = [];\r\n  }\r\n\r\n  public set clickListener(clickListener: () => void) {\r\n    this._clickListener = clickListener;\r\n  }\r\n\r\n  public set mouseoverListener(\r\n    mouseoverListener: (\r\n      mouseEvent: MouseEvent,\r\n      utteranceObjectForDrawing: UtteranceObjectForDrawing\r\n    ) => void\r\n  ) {\r\n    this._mouseoverListener = mouseoverListener;\r\n  }\r\n\r\n  public set mouseoutLisener(mouseoutListener: () => void) {\r\n    this._mouseoutListener = mouseoutListener;\r\n  }\r\n}\r\n","import _ from \"lodash\";\r\n\r\n/**\r\n * Find top value indexes from number array\r\n * @param array\r\n * @param numOfTop\r\n */\r\nexport function findTopValueIndexes(\r\n  array: Array<number>,\r\n  numOfTop: number\r\n): number[] {\r\n  const sortedArray = _.orderBy(array, [], [\"desc\"]);\r\n  // console.log(\"sortedArray\", sortedArray);\r\n\r\n  const topValueIndexes: number[] = [];\r\n\r\n  let i = 0;\r\n  let numberOfSame = 0;\r\n  while (i < numOfTop) {\r\n    let indexWanted: number = 0;\r\n    while (indexWanted != -1) {\r\n      indexWanted = _.indexOf(array, sortedArray[i], indexWanted);\r\n\r\n      if (indexWanted >= 0) {\r\n        topValueIndexes.push(indexWanted);\r\n        indexWanted++;\r\n        numberOfSame++;\r\n      }\r\n    }\r\n\r\n    if (numberOfSame === 0) break;\r\n\r\n    i += numberOfSame;\r\n    numberOfSame = 0;\r\n  }\r\n\r\n  return topValueIndexes;\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport {\r\n  TermCountDict,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\nimport { TermType } from \"../DataImporter\";\r\n\r\nexport interface ParticipantCount {\r\n  name: string;\r\n  count: number;\r\n  sentiment: number; // sum of sentiments of sentences\r\n}\r\n\r\nexport interface TermCountDetailDict {\r\n  [term: string]: {\r\n    [name: string]: ParticipantCount;\r\n  };\r\n}\r\n\r\nexport class TermCountDictOfEGMaker {\r\n  private readonly termCountDictOfEG: TermCountDict = {};\r\n  private readonly termBooleanCountDictOfEG: TermCountDict = {};\r\n  private readonly termCountDetailDictOfEG: TermCountDetailDict = {};\r\n  private readonly termBooleanCountDetailDictOfEG: TermCountDetailDict = {};\r\n\r\n  public constructor(\r\n    utteranceObjectsOfEG: UtteranceObject[],\r\n    participantDict: ParticipantDict,\r\n    termType: TermType\r\n  ) {\r\n    // object for deepcopy\r\n    const defaultParticipantNameCountDict: {\r\n      [name: string]: ParticipantCount;\r\n    } = {};\r\n    _.chain(participantDict)\r\n      .map((participant) => participant.name)\r\n      .forEach((name) => {\r\n        defaultParticipantNameCountDict[name] = {\r\n          name,\r\n          count: 0,\r\n          sentiment: 0,\r\n        };\r\n      })\r\n      .value();\r\n\r\n    _.forEach(utteranceObjectsOfEG, (utteranceObject) => {\r\n      _.forEach(utteranceObject.sentenceObjects, (sentenceObject) => {\r\n        const termCountDict =\r\n          termType === \"single_term\"\r\n            ? (sentenceObject.singleTermCountDict as TermCountDict)\r\n            : (sentenceObject.compoundTermCountDict as TermCountDict);\r\n        _.forEach(termCountDict, (count, term) => {\r\n          if (!(term in this.termCountDictOfEG)) {\r\n            this.termCountDictOfEG[term] = 0;\r\n          }\r\n          this.termCountDictOfEG[term] += termCountDict[term];\r\n\r\n          if (!(term in this.termBooleanCountDictOfEG)) {\r\n            this.termBooleanCountDictOfEG[term] = 0;\r\n          }\r\n          this.termBooleanCountDictOfEG[term] += 1;\r\n\r\n          if (!(term in this.termCountDetailDictOfEG)) {\r\n            this.termCountDetailDictOfEG[term] = _.cloneDeep(\r\n              defaultParticipantNameCountDict\r\n            );\r\n          }\r\n          this.termCountDetailDictOfEG[term][utteranceObject.name].count +=\r\n            termCountDict[term];\r\n          this.termCountDetailDictOfEG[term][utteranceObject.name].sentiment +=\r\n            sentenceObject.sentiment;\r\n\r\n          if (!(term in this.termBooleanCountDetailDictOfEG)) {\r\n            this.termBooleanCountDetailDictOfEG[term] = _.cloneDeep(\r\n              defaultParticipantNameCountDict\r\n            );\r\n          }\r\n          this.termBooleanCountDetailDictOfEG[term][\r\n            utteranceObject.name\r\n          ].count += 1;\r\n          this.termBooleanCountDetailDictOfEG[term][\r\n            utteranceObject.name\r\n          ].sentiment += sentenceObject.sentiment;\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  public getTermCountDictOfEG() {\r\n    return this.termCountDictOfEG;\r\n  }\r\n\r\n  public getTermBooleanCountDictOfEG() {\r\n    return this.termBooleanCountDictOfEG;\r\n  }\r\n\r\n  public getTermBooleanCountDetailDictOfEG() {\r\n    return this.termBooleanCountDetailDictOfEG;\r\n  }\r\n\r\n  public getTermCountDetailDictOfEG() {\r\n    return this.termCountDetailDictOfEG;\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { TermType } from \"../DataImporter\";\r\nimport { DataStructureSet } from \"../DataStructureMaker/DataStructureManager\";\r\nimport { DebateDataSet } from \"../../../interfaces/DebateDataInterface\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\nimport * as d3 from \"d3\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  extractFrequencyTermsFromEG,\r\n  extractKeytermsFromEngagementGroup,\r\n  extractTermsFromEngagementGroup,\r\n} from \"../DataStructureMaker/extractTermsFromEngagementGroup\";\r\nimport { KeytermObject } from \"../../../interfaces/DebateDataInterface\";\r\n\r\nexport class TopicGroupsDrawer {\r\n  private readonly topicGuideRectGSelection: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  private readonly topicGuideTextGSelection: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  private _topicGroups: SimilarityBlock[][][] = [];\r\n  private _topicGroupTitles: string[] | null = null;\r\n  private _showTopicGroupTitle: boolean = true;\r\n  private _showTopicGroup: boolean = true;\r\n  private _guideColor: string = \"#D63A3A\";\r\n\r\n  public onTitleClicked:\r\n    | null\r\n    | ((\r\n        mouseEvent: MouseEvent,\r\n        engagementGroup: SimilarityBlock[][],\r\n        engagementGroupIndex: number\r\n      ) => void) = null;\r\n\r\n  public constructor(\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>,\r\n    private readonly debateDataSet: DebateDataSet,\r\n    private readonly dataStructureSet: DataStructureSet,\r\n    private readonly termType: TermType\r\n  ) {\r\n    this.topicGuideRectGSelection = svgSelection.append(\"g\");\r\n    this.topicGuideTextGSelection = svgSelection.append(\"g\");\r\n  }\r\n\r\n  public set topicGroups(topicGroups: SimilarityBlock[][][]) {\r\n    this._topicGroups = topicGroups;\r\n  }\r\n  public get topicGroups() {\r\n    return this._topicGroups;\r\n  }\r\n  public set topicGroupTitles(topicGroupTitles: string[]) {\r\n    this._topicGroupTitles = topicGroupTitles;\r\n  }\r\n  public set visible(showTopicGroup: boolean) {\r\n    this._showTopicGroup = showTopicGroup;\r\n  }\r\n  public set showTopicGroupTitle(showTopicGroupTitle: boolean) {\r\n    this._showTopicGroupTitle = showTopicGroupTitle;\r\n  }\r\n  public set color(guideColor: string) {\r\n    this._guideColor = guideColor;\r\n  }\r\n\r\n  public update() {\r\n    const topicGuideRectGSelection = this.topicGuideRectGSelection\r\n      .selectAll<SVGRectElement, unknown>(\"rect\")\r\n      .data(this._topicGroups)\r\n      .join(\"rect\");\r\n\r\n    topicGuideRectGSelection.call(\r\n      setAttributesOfTopicGuides.bind(\r\n        this,\r\n        topicGuideRectGSelection,\r\n        this._showTopicGroup,\r\n        this._guideColor\r\n      )\r\n    );\r\n\r\n    const topicGuideTextGSelection = this.topicGuideTextGSelection\r\n      .selectAll<SVGTextElement, unknown>(\"text\")\r\n      .data(this._topicGroups)\r\n      .join(\"text\");\r\n\r\n    topicGuideTextGSelection.call(\r\n      setAttributesOfTopicText.bind(this, topicGuideTextGSelection, {\r\n        topicGroupTitles: this._topicGroupTitles,\r\n        showTopicGroup: this._showTopicGroup,\r\n        showTopicGroupTitle: this._showTopicGroupTitle,\r\n        guideColor: this._guideColor,\r\n        conceptMatrixTransposed: this.debateDataSet.conceptMatrixTransposed,\r\n        keytermObjects: this.debateDataSet.keytermObjects,\r\n        termList: this.debateDataSet.termList,\r\n        termUtteranceBooleanMatrixTransposed: this.debateDataSet\r\n          .termUtteranceBooleanMatrixTransposed,\r\n      })\r\n    );\r\n\r\n    function setAttributesOfTopicGuides(\r\n      this: TopicGroupsDrawer,\r\n      selection: d3.Selection<\r\n        SVGRectElement,\r\n        SimilarityBlock[][],\r\n        SVGGElement,\r\n        unknown\r\n      >,\r\n      showEngagementGroup: boolean,\r\n      guideColor: string\r\n    ) {\r\n      selection\r\n        .attr(\"x\", (eg) => eg[0][0].beginningPointOfX)\r\n        .attr(\"y\", (eg) => eg[0][0].beginningPointOfY)\r\n        .attr(\"width\", (eg) => {\r\n          const mostLeftTopBlock = eg[0][0];\r\n          const lastHorizontalLine = eg[eg.length - 1];\r\n          const mostRightBottomBlock =\r\n            lastHorizontalLine[lastHorizontalLine.length - 1];\r\n\r\n          const width =\r\n            mostRightBottomBlock.beginningPointOfX +\r\n            mostRightBottomBlock.width -\r\n            mostLeftTopBlock.beginningPointOfX;\r\n          return width;\r\n        })\r\n        .attr(\"height\", (eg) => {\r\n          const mostLeftTopBlock = eg[0][0];\r\n          const lastHorizontalLine = eg[eg.length - 1];\r\n          const mostRightBottomBlock =\r\n            lastHorizontalLine[lastHorizontalLine.length - 1];\r\n\r\n          const height =\r\n            mostRightBottomBlock.beginningPointOfY +\r\n            mostRightBottomBlock.height -\r\n            mostLeftTopBlock.beginningPointOfY;\r\n          return height;\r\n        })\r\n        .style(\"fill\", \"none\")\r\n        .style(\"stroke-width\", 1)\r\n        // .style(\"stroke\", () => (showEngagementGroup ? guideColor : \"none\"));\r\n        .style(\"stroke\", () => (showEngagementGroup ? \"none\" : \"none\"));\r\n    }\r\n\r\n    function setAttributesOfTopicText(\r\n      this: TopicGroupsDrawer,\r\n      selection: d3.Selection<\r\n        SVGTextElement,\r\n        SimilarityBlock[][],\r\n        SVGGElement,\r\n        unknown\r\n      >,\r\n      arg: {\r\n        topicGroupTitles: string[] | null;\r\n        showTopicGroup: boolean;\r\n        showTopicGroupTitle: boolean;\r\n        guideColor: string;\r\n        conceptMatrixTransposed: number[][];\r\n        keytermObjects: KeytermObject[];\r\n        termList: string[];\r\n        termUtteranceBooleanMatrixTransposed: number[][];\r\n      }\r\n    ) {\r\n      selection\r\n        .attr(\"x\", (eg) => {\r\n          const mostLeftTopBlock = eg[0][0];\r\n          const lastHorizontalLine = eg[eg.length - 1];\r\n          const mostRightBottomBlock =\r\n            lastHorizontalLine[lastHorizontalLine.length - 1];\r\n\r\n          const xPoint =\r\n            (mostRightBottomBlock.beginningPointOfX +\r\n              mostRightBottomBlock.width +\r\n              mostLeftTopBlock.beginningPointOfX) /\r\n            2;\r\n          return xPoint;\r\n        })\r\n        .attr(\"y\", (eg) => {\r\n          const mostLeftTopBlock = eg[0][0];\r\n          const yPoint = mostLeftTopBlock.beginningPointOfY - 5;\r\n          return yPoint;\r\n        })\r\n        .text((eg, i) => {\r\n          if (arg.showTopicGroupTitle) {\r\n            if (arg.topicGroupTitles) {\r\n              return arg.topicGroupTitles[i];\r\n            } else {\r\n              // const extractedKeytermObjects = extractKeytermsFromEngagementGroup(\r\n              //   eg,\r\n              //   arg.conceptMatrixTransposed,\r\n              //   arg.keytermObjects,\r\n              //   7\r\n              // );\r\n              // return `${_.map(extractedKeytermObjects, (o) => o.name)}`;\r\n\r\n              const highFrequencyTerms = extractFrequencyTermsFromEG(\r\n                eg,\r\n                this.debateDataSet.utteranceObjects,\r\n                this.dataStructureSet.participantDict,\r\n                this.termType\r\n              );\r\n              return `${highFrequencyTerms}`;\r\n            }\r\n          } else {\r\n            return \"\";\r\n          }\r\n        })\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .style(\"font-size\", 8)\r\n        .style(\"fill\", () => (arg.showTopicGroup ? \"none\" : \"none\"))\r\n        // .style(\"fill\", () => (arg.showTopicGroup ? arg.guideColor : \"none\"))\r\n        .style(\"cursor\", \"pointer\")\r\n        .on(\"click\", (e, d) => {\r\n          const mouseEvent = (e as unknown) as MouseEvent;\r\n          const engagementGroup = (d as unknown) as SimilarityBlock[][];\r\n          mouseEvent.stopPropagation();\r\n          const engagementGroupIndex = _.indexOf(\r\n            this._topicGroups,\r\n            engagementGroup\r\n          );\r\n\r\n          // Draw conceptual_map of the engagement_group\r\n          if (this.onTitleClicked !== null) {\r\n            this.onTitleClicked(\r\n              mouseEvent,\r\n              engagementGroup,\r\n              engagementGroupIndex\r\n            );\r\n          }\r\n        })\r\n        .append(\"title\")\r\n        .text((eg) => {\r\n          const extractedTerms = extractTermsFromEngagementGroup(\r\n            eg,\r\n            arg.termUtteranceBooleanMatrixTransposed,\r\n            arg.termList\r\n          );\r\n          return `terms: ${extractedTerms}`;\r\n        });\r\n    }\r\n  }\r\n}\r\n","import {\r\n  KeytermObject,\r\n  UtteranceObject,\r\n} from \"./../../../interfaces/DebateDataInterface\";\r\nimport _ from \"lodash\";\r\nimport * as math from \"mathjs\";\r\nimport { findTopValueIndexes } from \"../../../common_functions/findTopValueIndexes\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\nimport { TermCountDictOfEGMaker } from \"../ConceptualMapModal/TermCountDictOfEGMaker\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport { TermType } from \"../DataImporter\";\r\n\r\n// standardHighScore version\r\n// export function extractKeytermsFromEngagementGroup(\r\n//   engagementGroup: SimilarityBlock[][],\r\n//   conceptMatrixTransposed: number[][],\r\n//   keytermObjects: KeytermObject[],\r\n//   standardHighScore: number\r\n// ): KeytermObject[] {\r\n//   const highScoredKeyTermDict: { [keyterm: string]: KeytermObject } = {};\r\n//   _.forEach(engagementGroup, (rowSimilarityBlocks) => {\r\n//     const utteranceIndex = rowSimilarityBlocks[0].rowUtteranceIndex - 1;\r\n//     // find keyterms\r\n//     // the one utterance's keyterms score\r\n//     const keytermScores = conceptMatrixTransposed[utteranceIndex];\r\n//     _.forEach(keytermScores, (keytermScore, keytermIndex) => {\r\n//       if (keytermScore > standardHighScore) {\r\n//         const highScoredKeytermObject = keytermObjects[keytermIndex];\r\n//         highScoredKeyTermDict[\r\n//           highScoredKeytermObject.name\r\n//         ] = highScoredKeytermObject;\r\n//       }\r\n//     });\r\n//   });\r\n\r\n//   const highScoredKeyTerms: KeytermObject[] = _.values(highScoredKeyTermDict);\r\n//   return highScoredKeyTerms;\r\n// }\r\n\r\nexport function extractKeytermsFromEngagementGroup(\r\n  engagementGroup: SimilarityBlock[][],\r\n  conceptMatrixTransposed: number[][],\r\n  keytermObjects: KeytermObject[],\r\n  numOfTop: number\r\n): KeytermObject[] {\r\n  // make sum of keytermScores\r\n  let sumOfKeytermScores = math.zeros([\r\n    conceptMatrixTransposed[0].length,\r\n  ]) as number[];\r\n  _.forEach(engagementGroup, (rowSimilarityBlocks) => {\r\n    const utteranceIndex = rowSimilarityBlocks[0].rowUtteranceIndex - 1;\r\n    const keytermScores = conceptMatrixTransposed[utteranceIndex];\r\n\r\n    sumOfKeytermScores = math.add(\r\n      sumOfKeytermScores,\r\n      keytermScores\r\n    ) as number[];\r\n  });\r\n\r\n  const topValueIndexes = findTopValueIndexes(sumOfKeytermScores, numOfTop);\r\n  const highScoredKeytermObjects = _.map(\r\n    topValueIndexes,\r\n    (topValueIndex) => keytermObjects[topValueIndex]\r\n  );\r\n\r\n  return highScoredKeytermObjects;\r\n}\r\n\r\nexport function extractFrequencyTermsFromEG(\r\n  engagementGroup: SimilarityBlock[][],\r\n  utteranceObjects: UtteranceObject[],\r\n  participantDict: ParticipantDict,\r\n  termType: TermType\r\n): string[] {\r\n  const utteranceObjectsOfEG = _.map(engagementGroup, (rowSimilarityBlocks) => {\r\n    const utteranceIndex = rowSimilarityBlocks[0].rowUtteranceIndex - 1;\r\n    return utteranceObjects[utteranceIndex];\r\n  });\r\n\r\n  const termCountDictOfEGMaker = new TermCountDictOfEGMaker(\r\n    utteranceObjectsOfEG,\r\n    participantDict,\r\n    termType\r\n  );\r\n\r\n  const termCountDictOfEG = termCountDictOfEGMaker.getTermCountDictOfEG();\r\n\r\n  const termCountObjectsOfEG = _.map(termCountDictOfEG, (count, term) => {\r\n    return {\r\n      term,\r\n      count,\r\n    };\r\n  });\r\n  const sortedTermCountObjectsOfEG = _.orderBy(\r\n    termCountObjectsOfEG,\r\n    (termCountObject) => termCountObject.count,\r\n    [\"desc\"]\r\n  );\r\n\r\n  const highFrequencyTerms: string[] = [];\r\n  const numOfFrequencyTerms =\r\n    7 < sortedTermCountObjectsOfEG.length\r\n      ? 7\r\n      : sortedTermCountObjectsOfEG.length;\r\n  for (let i = 0; i < numOfFrequencyTerms; i++) {\r\n    highFrequencyTerms.push(sortedTermCountObjectsOfEG[i].term);\r\n  }\r\n\r\n  return highFrequencyTerms;\r\n}\r\n\r\nexport function extractTermsFromEngagementGroup(\r\n  engagementGroup: SimilarityBlock[][],\r\n  termUtteranceBooleanMatrixTransposed: number[][],\r\n  termList: string[]\r\n): string[] {\r\n  const standardHighCount: number = 0;\r\n\r\n  const grouptermCountDict: { [term: string]: number } = {};\r\n  _.forEach(engagementGroup, (verticalSimilarityBlocks, utteranceIndex) => {\r\n    // find terms\r\n    const termBooleans = termUtteranceBooleanMatrixTransposed[utteranceIndex];\r\n    _.forEach(termBooleans, (termBoolean, termIndex) => {\r\n      //\r\n      if (termBoolean === 1) {\r\n        const term = termList[termIndex];\r\n        if (term in grouptermCountDict) {\r\n          grouptermCountDict[term] += 1;\r\n        } else {\r\n          grouptermCountDict[term] = 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // console.log(\"highScoredKeyTermDict\", highScoredKeyTermDict);\r\n  // console.log(\"grouptermCountDict\", grouptermCountDict);\r\n  const termsOfGroup: string[] = [];\r\n  _.forEach(grouptermCountDict, (count, term) => {\r\n    if (count > standardHighCount) termsOfGroup.push(term);\r\n  });\r\n  // console.log(\"termsOfGroup\", termsOfGroup);\r\n  return termsOfGroup.sort();\r\n}\r\n\r\n// export async function makeOccurrenceVector(\r\n//   engagementGroup: SimilarityBlock[][],\r\n//   utteranceObjects: UtteranceObject[],\r\n//   termUtteranceBooleanMatrixTransposed: number[][],\r\n//   termList: string[]\r\n// ) {\r\n//   const standardHighCount: number = 3;\r\n//   const grouptermCountDict: { [term: string]: number } = {};\r\n//   _.forEach(engagementGroup, (verticalSimilarityBlocks, lineIndexOfEG) => {\r\n//     if (verticalSimilarityBlocks.length > 0) {\r\n//       const utteranceIndex: number =\r\n//         verticalSimilarityBlocks[0].utteranceRowIndex;\r\n//       // find terms\r\n//       const termBooleans = termUtteranceBooleanMatrixTransposed[utteranceIndex];\r\n//       _.forEach(termBooleans, (termBoolean, termIndex) => {\r\n//         //\r\n//         if (termBoolean === 1) {\r\n//           const term = termList[termIndex];\r\n//           if (term in grouptermCountDict) {\r\n//             grouptermCountDict[term] += 1;\r\n//           } else {\r\n//             grouptermCountDict[term] = 1;\r\n//           }\r\n//         }\r\n//       });\r\n//     }\r\n//   });\r\n\r\n//   //\r\n//   const termListOfEG: string[] = [];\r\n//   _.forEach(grouptermCountDict, (count, term) => {\r\n//     if (count >= standardHighCount) termListOfEG.push(term);\r\n//   });\r\n//   termListOfEG.sort();\r\n\r\n//   //\r\n//   const occurrenceVectorOfEG: number[] = _.map(\r\n//     termListOfEG,\r\n//     (term) => grouptermCountDict[term]\r\n//   );\r\n\r\n//   const startIndex = engagementGroup[1][0].utteranceColumnIndex;\r\n//   const endIndex =\r\n//     engagementGroup[engagementGroup.length - 1][0].utteranceRowIndex;\r\n//   const utteranceObjectsOfEG = _.filter(\r\n//     utteranceObjects,\r\n//     (utteranceObject, utteranceIndex) =>\r\n//       utteranceIndex >= startIndex && utteranceIndex <= endIndex ? true : false\r\n//   );\r\n\r\n//   //\r\n//   const cooccurrenceMatrixOfEG = (\r\n//     await axios.post<number[][]>(\r\n//       \"http://localhost:5000/make-cooccurrence-matrix\",\r\n//       {\r\n//         utteranceObjectsOfEG,\r\n//         termListOfEG,\r\n//       }\r\n//     )\r\n//   ).data;\r\n\r\n//   axios\r\n//     .post(\"http://localhost:5000/make-cooccurrence-matrix\", {\r\n//       utteranceObjectsOfEG,\r\n//       termListOfEG,\r\n//     })\r\n//     .then((response) => {\r\n//       console.log(\"axios response\", response);\r\n//     })\r\n//     .catch((error) => {\r\n//       console.error(\"axios error\", error);\r\n//     });\r\n// }\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport * as math from \"mathjs\";\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\n\r\nexport class InsistenceMarkersDrawer {\r\n  private readonly insistenceMarkerGSlection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  // private readonly similarityBlockGroupTransposed: SimilarityBlock[][];\r\n  private _visible: boolean = false;\r\n\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    private readonly similarityBlockGroup: SimilarityBlock[][],\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    this.insistenceMarkerGSlection = svgSelection.append(\"g\");\r\n    // this.similarityBlockGroupTransposed = math.transpose(similarityBlockGroup);\r\n  }\r\n\r\n  public update() {\r\n    const InsistenceCircleGSelection = this.insistenceMarkerGSlection\r\n      .selectAll<SVGCircleElement, unknown>(\"circle\")\r\n      .data(this.utteranceObjectsForDrawing)\r\n      .join(\"circle\");\r\n\r\n    InsistenceCircleGSelection.attr(\r\n      \"cx\",\r\n      (d) => d.beginningPointOfXY + d.width / 2\r\n    )\r\n      .attr(\"cy\", (d) => d.beginningPointOfXY - 3)\r\n      .attr(\"r\", 2)\r\n      .style(\"fill\", (d, i) => {\r\n        let hasRefutation: boolean = false;\r\n        _.forEach(\r\n          this.similarityBlockGroup,\r\n          (rowSimilarityBlocks, rowIndex) => {\r\n            if (rowIndex >= i && rowSimilarityBlocks[i].refutation) {\r\n              hasRefutation = true;\r\n              return false;\r\n            }\r\n          }\r\n        );\r\n\r\n        if (this._visible && d.insistence && hasRefutation) {\r\n          return `rgba(79, 198, 66, 1)`;\r\n        } else {\r\n          return \"none\";\r\n        }\r\n      });\r\n  }\r\n\r\n  public set visible(visible: boolean) {\r\n    this._visible = visible;\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\nexport class RefutationIconDrawer {\r\n  private _visible: boolean = false;\r\n  private _similarityBlock: SimilarityBlock | null = null;\r\n\r\n  private readonly refutationIconGSlection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    this.refutationIconGSlection = svgSelection\r\n      .append(\"g\")\r\n      .style(\"visibility\", \"hidden\");\r\n\r\n    this.refutationIconGSlection\r\n      .append(\"path\")\r\n      .attr(\r\n        \"d\",\r\n        \"M362.1,912.5c-14.3,14.3-31.1,18-49.5,17.9c-55.4-0.3-110.8-0.1-166.2-0.1c-41.1,0-62.2-36.4-42-72.3\\\r\n\tc0.5-0.9,0.8-1.9,1.2-2.8c-26.2-24.8-29.3-40.3-15.6-66.9c-7.9-12.2-16.5-22.4-21.6-34.1C62.5,741,68,728,75.6,715.7\\\r\n\tc-1.9-1.4-3.6-2.7-5.3-3.9c-18-12.7-25.1-32.1-19-52.2c5.8-19,22.9-32,44.1-32.4c25.3-0.5,50.7-0.1,76-0.2c2.1,0,4.3-0.3,7.9-0.5\\\r\n\tc0-4,0-7.8,0-11.7c0-48.5-0.2-97.1,0.2-145.6c0.1-7.9-2.3-10.9-10-13.1C67.5,426.9-2.2,333.6,0.1,230.1\\\r\n\tC2.5,121.3,74.3,31.8,179.7,6.3C311.2-25.4,444,65.6,462.3,199.9c15.9,116.5-54.1,223.9-167.1,256.5c-5.4,1.6-9.9,2.2-9.8,10\\\r\n\tc0.4,51.8,0.2,103.6,0.2,155.3c0,1.4,0.4,2.8,0.9,6.5c28.7-7.5,51.1,4.5,68,22.7c10.9-8.6,19.3-18.3,29.9-22.7\\\r\n\tc26.4-10.9,55.9,8.9,56.1,37.6c0.6,74.6,0.3,149.2,0.1,223.8c-0.1,18.5-9.4,32-26.5,38.7c-17.4,6.8-33.4,3.1-46.8-10.3\\\r\n\tC365.8,916.4,364.3,914.9,362.1,912.5z M232.9,443.4c118-1.1,211-95.6,209.9-213.4c-1-115.7-96.3-209.1-212-207.8\\\r\n\tC114,23.5,20.7,118.1,21.7,234.2C22.7,350.1,118,444.5,232.9,443.4z M204.4,648.8c-35.1,0-70.2-0.1-105.3,0\\\r\n\tc-17.1,0.1-28.4,10.3-28.2,24.9c0.2,14.1,11.4,23.8,28,23.9c13.8,0.1,27.5,0.1,41.3,0.1c7.3,0,13.3,2.1,13.3,10.6\\\r\n\tc0,8.4-5.9,10.9-13.2,11.1c-8.7,0.2-17.4-0.1-26.1,0.2c-15.7,0.7-26.5,11-26.1,24.6c0.4,13.4,11.8,23.4,27.4,23.6\\\r\n\tc11.6,0.2,23.2,0.2,34.7,0c7.5-0.1,13.4,2.3,13.6,10.4c0.2,8.8-6.1,11.4-13.9,11.3c-6.9-0.1-13.8-0.1-20.6,0.1\\\r\n\tc-14.6,0.4-25.4,10.8-25.2,24.2c0.2,13.8,10.5,23.6,25.5,23.9c11.9,0.2,23.9,0.1,35.8,0.1c7.4,0,13.3,2.9,13.4,10.9\\\r\n\tc0.1,8.1-5.6,10.9-13.2,10.8c-8.7-0.1-17.4-0.3-26,0.6c-13.2,1.3-21.6,11.4-21.5,24.3c0.2,12.4,8.5,21.8,21.2,23.4\\\r\n\tc4.3,0.6,8.7,0.6,13,0.6c52.9,0,105.7-0.6,158.6,0.3c26.1,0.5,46-10.4,45-45.5c-1.3-49.6-2.1-99.3,0.4-148.7\\\r\n\tc1.3-26.9-5.5-45.2-29.2-58.3c-7.9-4.3-14.7-7.7-23.9-7.6C270.3,649.1,237.3,648.8,204.4,648.8z M419,779L419,779\\\r\n\tc0-36.2,0-72.3-0.1-108.5c0-13.1-5.9-20.9-16.8-23.1c-13.9-2.8-24.7,7.5-24.8,24c-0.1,70.9-0.1,141.8-0.1,212.6\\\r\n\tc0,16,7.4,25.2,20.3,25.5c13.5,0.3,21.3-8.8,21.4-25.3C419.1,849.1,419,814.1,419,779z M201.8,464.4c0,54.3,0,108.1,0,162.1\\\r\n\tc20.8,0,40.8,0,61.5,0c0-54.4,0-108.1,0-162.1C242.6,464.4,222.5,464.4,201.8,464.4z\"\r\n      );\r\n\r\n    this.refutationIconGSlection\r\n      .append(\"line\")\r\n      .attr(\"x1\", 143.6)\r\n      .attr(\"y1\", 145.7)\r\n      .attr(\"x2\", 320.9)\r\n      .attr(\"y2\", 323)\r\n      .style(\"fill\", \"none\")\r\n      .style(\"stroke\", \"#0a0404\")\r\n      .style(\"stroke-width\", 16)\r\n      .style(\"stroke-miterlimit\", 10);\r\n\r\n    this.refutationIconGSlection\r\n      .append(\"line\")\r\n      .attr(\"x1\", 321.4)\r\n      .attr(\"y1\", 145.7)\r\n      .attr(\"x2\", 144.1)\r\n      .attr(\"y2\", 323)\r\n      .style(\"fill\", \"none\")\r\n      .style(\"stroke\", \"#0a0404\")\r\n      .style(\"stroke-width\", 16)\r\n      .style(\"stroke-miterlimit\", 10);\r\n  }\r\n\r\n  public update() {\r\n    if (this._similarityBlock !== null) {\r\n      const rowUtteranceObject = this.utteranceObjectsForDrawing[\r\n        this._similarityBlock.rowUtteranceIndex\r\n      ];\r\n      const translateProperty = `translate(${\r\n        rowUtteranceObject.beginningPointOfXY +\r\n        rowUtteranceObject.width / 2 -\r\n        2.5\r\n      }, ${rowUtteranceObject.beginningPointOfXY - 10} ) scale(0.01, 0.01)`;\r\n\r\n      this.refutationIconGSlection\r\n        .attr(\"transform\", translateProperty)\r\n        .style(\"visibility\", \"visible\");\r\n    } else {\r\n      this.refutationIconGSlection.style(\"visibility\", \"hidden\");\r\n    }\r\n  }\r\n\r\n  public set similarityBlock(similarityBlock: SimilarityBlock | null) {\r\n    this._similarityBlock = similarityBlock;\r\n  }\r\n\r\n  // public set visible(visible: boolean) {\r\n  //   this._visible = visible;\r\n  // }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\nexport class InsistenceIconDrawer {\r\n  private _visible: boolean = false;\r\n  private _similarityBlock: SimilarityBlock | null = null;\r\n\r\n  private readonly insistenceIconGSlection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    this.insistenceIconGSlection = svgSelection\r\n      .append(\"g\")\r\n      .style(\"visibility\", \"hidden\");\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\r\n        \"d\",\r\n        \"M285.6,627.1c28.7,0,56.2-0.4,83.7,0.1c19.8,0.4,34.8,9.5,42.8,28.1c7.6,17.7,4.5,34.1-8,48.5c-3.9,4.5-9.2,8-13.8,11.9\\\r\n\tc14.5,32.4,11.1,46.8-16.5,69.5c15,31.2,11.8,47.4-13.7,69.4c2.7,7.5,6.7,14.6,8,22.3c4.7,28.9-15.8,53.4-45.7,53.6\\\r\n\tc-59.1,0.5-118.2,0.1-177.3,0c-16.3,0-30.3-6.1-42.5-17.5C93,924.2,81.9,931.6,67,931.6c-23.7,0-42.3-17.1-42.7-41.4\\\r\n\tc-0.6-43.5-0.3-87-0.3-130.5c0-29,0-58,0.1-87c0.1-23.9,11.2-40.5,30.6-45.8c20.6-5.6,37.9,2.4,50.7,23.5c0.3,0.6,1,0.9,2.8,2.5\\\r\n\tc19-19.2,40.9-32.7,70.4-24.4c0.4-5,0.8-7.8,0.8-10.6c0-49.7-0.1-99.3,0.2-149c0-7.3-1.8-10.4-9.3-12.6\\\r\n\tC60.2,424.3-7.9,325.2,0.7,210.6C8.6,106.1,95.4,15,199.6,2c130.2-16.3,242.3,67.5,263.2,196.8c18.1,111.6-53.8,224.4-163.8,256\\\r\n\tc-10.6,3-13.8,7.1-13.6,18.3C286,523.8,285.6,574.5,285.6,627.1z M233.3,443.1c115.8-0.3,210.2-94.9,210.2-210.6\\\r\n\tc0-117.2-94.4-211.2-211.6-211.1C115.9,21.6,21.6,116.1,22,231.8C22.3,349.5,116.3,443.5,233.3,443.1z M262,648.8\\\r\n\tc-34.8,0-69.6-0.1-104.4,0.2c-4.7,0-10.2,1.2-14.1,3.8c-9.9,6.6-19.5,13.9-28.5,21.7c-3,2.6-5.6,7.6-5.6,11.6\\\r\n\tc-0.4,60.9-0.4,121.8-0.2,182.6c0.1,27.2,13,39.9,40,40.1c30.4,0.2,60.9,0.1,91.3,0c27.5,0,55.1,0.3,82.6-0.4\\\r\n\tc14.8-0.4,23.9-10.6,23.7-24.3c-0.2-13.2-9.1-22.6-23.3-23.7c-7.2-0.6-14.5-0.5-21.7-0.4c-7.9,0.2-15.7-0.9-15.7-10.5\\\r\n\tc0-10.2,8-11.4,16.3-11.3c12,0.1,23.9,0.4,35.9-0.2c13.2-0.6,22.9-11.5,22.6-24.5c-0.3-12.4-10.1-22.7-22.7-23.4\\\r\n\tc-7.9-0.5-15.9-0.2-23.9-0.2c-7.5,0-13.2-2.9-13.2-11c0.1-8.1,5.7-10.9,13.3-10.8c12.3,0.1,24.6,0.3,37-0.1\\\r\n\tc14.5-0.5,25.6-11.3,25.6-24.4c0-12.8-10.4-23-24.7-23.8c-8.7-0.5-17.4-0.2-26.1-0.3c-7.4-0.1-14.3-1.6-14.5-10.8\\\r\n\tc-0.2-9.3,6.4-11,14.1-11c14.5,0,29,0.4,43.5-0.2c16.5-0.6,27.8-14.3,24.6-28.9c-2.7-12.4-12.6-19.8-27.4-19.8\\\r\n\tC331.5,648.7,296.8,648.8,262,648.8z M45.7,779c0,35.5-0.1,71,0,106.4c0,15.7,8,24.6,21.3,24.4c12.6-0.2,20.4-9.3,20.4-24.3\\\r\n\tc0.1-71,0-141.9,0-212.9c0-16.1-8.4-26-21.5-25.7c-12.7,0.3-20.1,9.7-20.2,25.6C45.7,708.1,45.7,743.5,45.7,779z M201.7,626.4\\\r\n\tc21.1,0,41.2,0,61.6,0c0-54.5,0-108.3,0-162.2c-20.7,0-40.8,0-61.6,0C201.7,517.9,201.7,571.7,201.7,626.4z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st0\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 2)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M232.9,335.2c-8.3,0-16.7,0.1-25,0c-8.7-0.1-12.3-3.3-12.4-11.8c-0.4-18.7-7.8-34.2-21-47.3\\\r\n\tc-45.5-45.3-29.3-118.7,31-140.7c54-19.7,112.4,22.5,111.7,80.6c-0.3,23.6-8.9,43.7-25.8,60.1c-13.1,12.7-20,27.9-21.1,45.9\\\r\n\tc-0.7,11.1-3,13.1-14.3,13.1C248.2,335.2,240.6,335.2,232.9,335.2L232.9,335.2z M232.5,324.4c7.3,0,14.5-0.1,21.8,0\\\r\n\tc3.3,0,5-0.9,5.3-4.6c1.5-21.2,11-38.3,26-53.3c20-20.2,25.6-45,17.9-72.1c-8.6-30.1-35.3-50.6-66.4-52.5\\\r\n\tc-30.4-1.8-59.1,15.6-71.5,43.4c-12.6,28.2-6.5,60.7,15.9,82.6c14.5,14.2,23.3,30.9,24.4,51.3c0.2,3.7,1.6,5.4,5.5,5.3\\\r\n\tC218.4,324.3,225.4,324.4,232.5,324.4z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st1\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 1)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M233.2,341.8c8.9,0,17.9,0,26.8,0c3.7,0,7.1,0.6,7.4,5.1c0.3,5-3.5,5.9-7.3,5.9c-18.5,0.1-37,0.3-55.5-0.2\\\r\n\tc-2.3-0.1-6-3.2-6.3-5.3c-0.7-4.2,3.1-5.5,6.8-5.5C214.5,341.8,223.8,341.8,233.2,341.8z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st1\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 1)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M233.1,368.6c-7.9,0-15.7,0-23.6,0c-3.9,0-7.7-0.8-7.8-5.5c-0.1-4.9,3.9-5.6,7.6-5.6\\\r\n\tc15.7-0.1,31.5,0.1,47.2,0.1c4.1,0,7.6,1,7.4,5.8c-0.1,4.3-3.5,5.4-7.3,5.4C248.8,368.6,241,368.6,233.1,368.6z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st0\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 2)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M238.4,102.5c0,5.1,0.6,10.3-0.2,15.3c-0.4,2.4-3,5.9-5.2,6.4c-3.9,0.9-5.3-2.6-5.4-6.1\\\r\n\tc-0.1-10.8-0.3-21.7,0.2-32.5c0.1-2.1,3.2-4.1,5-6.1c1.9,2.2,5,4.2,5.3,6.6C238.9,91.4,238.3,97,238.4,102.5\\\r\n\tC238.3,102.5,238.3,102.5,238.4,102.5z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st0\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 2)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M129.5,314.2c-4.6-0.1-7.4-5.1-4.4-8.3c8.2-8.9,16.9-17.3,25.8-25.6c1.1-1,4.9-0.7,6.2,0.5\\\r\n\tc1.2,1.1,1.8,5.1,0.9,6.1c-8.6,9.1-17.6,17.8-26.5,26.6C131,314,130,314.1,129.5,314.2z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st0\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 2)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M339.8,308.8c-0.3,4.9-5,7.2-8.4,4c-8.7-8.1-17-16.6-25.2-25.3c-1.1-1.2-1.1-5.1,0-6c1.5-1.3,5.5-2.2,6.5-1.2\\\r\n\tc9,8.4,17.6,17.2,26.2,26C339.6,306.9,339.6,308.2,339.8,308.8z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st0\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 2)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M320,111.2c-1.3,2.2-2.1,4.2-3.5,5.7c-7.1,7.3-14.4,14.4-21.6,21.6c-2.6,2.6-5.5,4.4-8.8,1.3\\\r\n\tc-3.4-3.3-1.3-6.2,1.2-8.8c7.3-7.4,14.6-14.9,22.2-21.9c1.6-1.5,4.5-2,6.7-1.9C317.5,107.2,318.6,109.6,320,111.2z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st0\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 2)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M177,136.5c-1.1,1.4-2,3.5-3.4,4c-1.7,0.6-4.6,0.6-5.7-0.5c-8.5-8-16.8-16.2-24.7-24.8\\\r\n\tc-1.2-1.3-0.7-5.4,0.5-7.2c0.7-1.1,5.3-1.2,6.5-0.1c8.5,8,16.7,16.3,24.9,24.7C175.8,133.4,176.1,134.8,177,136.5z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st0\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 2)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M351.1,203.7c5.1,0,10.3-0.5,15.3,0.2c2.3,0.3,5.5,2.8,6,4.8c0.9,3.9-2.3,5.5-6,5.5c-10.7,0-21.4,0.3-32-0.2\\\r\n\tc-2.3-0.1-4.5-3.4-6.7-5.2c2.3-1.7,4.4-4.6,6.8-4.9C339.9,203.2,345.6,203.7,351.1,203.7z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st0\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 2)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M114.8,202.1c5.1,0,10.3,0.1,15.4,0c3.9-0.1,7.4,1.4,6.9,5.4c-0.3,2-4.2,4.8-6.6,4.9\\\r\n\tc-10.4,0.5-20.9,0.2-31.4,0.3c-3.6,0-6.7-1.1-6.7-5.1c-0.1-4.4,3.2-5.5,7-5.5C104.6,202.1,109.7,202,114.8,202.1\\\r\n\tC114.8,202,114.8,202,114.8,202.1z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st0\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 2)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M209.3,374.9c16.3,0,31,0,46.3,0c-2.9,7.2-8.1,9.6-14,9C230.9,382.9,218.3,388.6,209.3,374.9z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st2\")\r\n      .style(\"fill\", \"#FFFFFF\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 2)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M232.5,324.4c-7,0-14.1-0.1-21.1,0.1c-3.8,0.1-5.2-1.5-5.5-5.3c-1.2-20.4-10-37.1-24.4-51.3\\\r\n\tc-22.4-21.9-28.5-54.4-15.9-82.6c12.4-27.8,41.1-45.3,71.5-43.4c31.1,1.9,57.8,22.4,66.4,52.5c7.7,27.1,2.1,51.9-17.9,72.1\\\r\n\tc-14.9,15.1-24.4,32.1-26,53.3c-0.3,3.7-2,4.7-5.3,4.6C247,324.4,239.7,324.4,232.5,324.4z M176.8,207.7c1.3,1.3,3,4.3,4.8,4.4\\\r\n\tc1.9,0.1,4.1-2.4,5.9-4.1c0.7-0.6,0.6-2,0.8-3c5.6-22.4,19.6-35.2,42.8-37.8c2.3-0.3,5.8-3.4,6.1-5.5c0.5-4.3-3.4-5.7-7.1-4.8\\\r\n\tc-8,1.9-16.5,3.2-23.7,6.9C189.1,172.3,180.7,187.8,176.8,207.7z\"\r\n      );\r\n\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .attr(\"class\", \"st0\")\r\n      .style(\"stroke\", \"#000000\")\r\n      .style(\"stroke-width\", 2)\r\n      .style(\"stroke-miterlimit\", 10)\r\n      .attr(\r\n        \"d\",\r\n        \"M176.8,207.7c3.9-19.9,12.3-35.4,29.6-44c7.3-3.6,15.7-4.9,23.7-6.9c3.7-0.9,7.6,0.5,7.1,4.8\\\r\n\tc-0.2,2.1-3.8,5.3-6.1,5.5c-23.2,2.6-37.2,15.4-42.8,37.8c-0.3,1-0.2,2.4-0.8,3c-1.8,1.7-4,4.2-5.9,4.1\\\r\n\tC179.8,211.9,178.1,209,176.8,207.7z\"\r\n      );\r\n  }\r\n\r\n  public update() {\r\n    if (this._similarityBlock) {\r\n      const colUtteranceObject = this.utteranceObjectsForDrawing[\r\n        this._similarityBlock.columnUtteranceIndex\r\n      ];\r\n      const transformProperty = `translate(${\r\n        colUtteranceObject.beginningPointOfXY +\r\n        colUtteranceObject.width / 2 -\r\n        2.5\r\n      }, ${colUtteranceObject.beginningPointOfXY - 10} ) scale(0.01, 0.01)`;\r\n\r\n      this.insistenceIconGSlection\r\n        .attr(\"transform\", transformProperty)\r\n        .style(\"visibility\", \"visible\");\r\n    } else {\r\n      this.insistenceIconGSlection.style(\"visibility\", \"hidden\");\r\n    }\r\n  }\r\n\r\n  public set similarityBlock(similarityBlock: SimilarityBlock | null) {\r\n    this._similarityBlock = similarityBlock;\r\n  }\r\n\r\n  // public set visible(visible: boolean) {\r\n  //   this._visible = visible;\r\n  // }\r\n}\r\n","import { UncertainIconDrawer } from \"./UncertainIconDrawer\";\r\nimport { TermType } from \"./../DataImporter\";\r\nimport { DataStructureSet } from \"../DataStructureMaker/DataStructureManager\";\r\nimport { DebateDataSet } from \"./../../../interfaces/DebateDataInterface\";\r\n/* eslint-disable no-unused-vars */\r\nimport { SimilarityBlocksDrawer } from \"./SimilarityBlocksDrawer\";\r\nimport { ParticipantBlocksDrawer } from \"./ParticipantBlocksDrawer\";\r\nimport { UtteranceObjectForDrawing, SimilarityBlock } from \"../interfaces\";\r\nimport * as d3 from \"d3\";\r\nimport _ from \"lodash\";\r\nimport { TopicGroupsDrawer } from \"./TopicGroupsDrawer\";\r\nimport { D3ZoomEvent, zoomTransform } from \"d3\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport { KeytermObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { InsistenceMarkersDrawer } from \"./InsistenceMarkersDrawer\";\r\nimport { RefutationIconDrawer } from \"./RefutationIconDrawer\";\r\nimport { InsistenceIconDrawer } from \"./InsistenceIconDrawer\";\r\n\r\nexport class D3Drawer {\r\n  private readonly conceptRecurrencePlotDiv!: d3.Selection<\r\n    HTMLDivElement,\r\n    any,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  private readonly svgSelection!: d3.Selection<\r\n    SVGSVGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  private readonly svgGSelection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n\r\n  public readonly participantBlocksDrawer: ParticipantBlocksDrawer;\r\n  public readonly insistenceMarkersDrawer: InsistenceMarkersDrawer;\r\n  public readonly refutationIconDrawer: RefutationIconDrawer;\r\n  public readonly insistenceIconDrawer: InsistenceIconDrawer;\r\n  public readonly uncertainIconDrawer: UncertainIconDrawer;\r\n  public readonly similarityBlocksDrawer: SimilarityBlocksDrawer;\r\n  public readonly topicGroupsDrawer: TopicGroupsDrawer;\r\n  public readonly manualSmallTGsDrawer: TopicGroupsDrawer;\r\n  public readonly manualMiddleTGsDrawer: TopicGroupsDrawer;\r\n  public readonly manualBigTGsDrawer: TopicGroupsDrawer;\r\n  public readonly manualPeopleTGsDrawer: TopicGroupsDrawer;\r\n  public readonly lcsegEGsDrawer: TopicGroupsDrawer;\r\n  private readonly svgWidth: number;\r\n  private readonly svgHeight: number;\r\n  // private _svgBackgroundClickListener?: (event: MouseEvent) => void;\r\n  private _zoomListener: ((transform: d3.ZoomTransform) => void) | null = null;\r\n\r\n  public constructor(\r\n    // private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    // conceptSimilarityBlocks: SimilarityBlock[],\r\n    // conceptSimilarityGroup: SimilarityBlock[][],\r\n    // participantDict: ParticipantDict,\r\n    // conceptMatrixTransposed: number[][],\r\n    // keytermObjects: KeytermObject[],\r\n    // termList: string[],\r\n    // termUtteranceBooleanMatrixTransposed: number[][]\r\n    private readonly debateDataSet: DebateDataSet,\r\n    private readonly dataStructureSet: DataStructureSet,\r\n    private readonly termType: TermType\r\n  ) {\r\n    // declare variables\r\n    this.conceptRecurrencePlotDiv = d3.select(\".concept-recurrence-plot\");\r\n    this.svgWidth = this.conceptRecurrencePlotDiv.node()!.clientWidth;\r\n    this.svgHeight = this.conceptRecurrencePlotDiv.node()!.clientHeight;\r\n    this.svgSelection = this.conceptRecurrencePlotDiv\r\n      .select<SVGSVGElement>(\"svg\")\r\n      .attr(\"width\", this.svgWidth)\r\n      .attr(\"height\", this.svgHeight)\r\n      .call(\r\n        d3\r\n          .zoom<SVGSVGElement, D3ZoomEvent<SVGSVGElement, any>>()\r\n          .on(\"zoom\", (event) => {\r\n            //@ts-ignore\r\n            this.svgGSelection.attr(\"transform\", () => event.transform);\r\n            if (this._zoomListener) {\r\n              this._zoomListener(event.transform);\r\n            }\r\n          })\r\n      );\r\n\r\n    this.svgGSelection = this.svgSelection.select(\".svgG\");\r\n\r\n    this.participantBlocksDrawer = new ParticipantBlocksDrawer(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      dataStructureSet.participantDict,\r\n      dataStructureSet.similarityBlockManager.similarityBlocks,\r\n      debateDataSet.conceptMatrixTransposed,\r\n      debateDataSet.keytermObjects,\r\n      this.svgGSelection\r\n    );\r\n    this.insistenceMarkersDrawer = new InsistenceMarkersDrawer(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      dataStructureSet.similarityBlockManager.similarityBlockGroup,\r\n      this.svgGSelection\r\n    );\r\n    this.refutationIconDrawer = new RefutationIconDrawer(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      this.svgGSelection\r\n    );\r\n    this.insistenceIconDrawer = new InsistenceIconDrawer(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      this.svgGSelection\r\n    );\r\n    this.uncertainIconDrawer = new UncertainIconDrawer(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      this.svgGSelection\r\n    );\r\n    this.similarityBlocksDrawer = new SimilarityBlocksDrawer(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      dataStructureSet.similarityBlockManager.similarityBlocks,\r\n      dataStructureSet.similarityBlockManager.similarityBlockGroup,\r\n      dataStructureSet.participantDict,\r\n      this.svgGSelection\r\n    );\r\n\r\n    this.similarityBlocksDrawer.clickListener = (\r\n      e: MouseEvent,\r\n      d: SimilarityBlock\r\n    ) => {\r\n      this.refutationIconDrawer.similarityBlock = null;\r\n      this.insistenceIconDrawer.similarityBlock = null;\r\n      this.uncertainIconDrawer.similarityBlock = null;\r\n\r\n      if (d.refutation) {\r\n        this.refutationIconDrawer.similarityBlock = d;\r\n\r\n        const colUtteranceObject = this.dataStructureSet\r\n          .utteranceObjectsForDrawingManager.utteranceObjectsForDrawing[\r\n          d.columnUtteranceIndex\r\n        ];\r\n        if (colUtteranceObject.insistence) {\r\n          this.insistenceIconDrawer.similarityBlock = d;\r\n        } else {\r\n          // unknown insistence\r\n          this.uncertainIconDrawer.similarityBlock = d;\r\n        }\r\n      }\r\n\r\n      this.refutationIconDrawer.update();\r\n      this.insistenceIconDrawer.update();\r\n      this.uncertainIconDrawer.update();\r\n    };\r\n\r\n    this.participantBlocksDrawer.clickListener = () => {\r\n      this.similarityBlocksDrawer.update();\r\n    };\r\n    this.topicGroupsDrawer = new TopicGroupsDrawer(\r\n      this.svgGSelection,\r\n      debateDataSet,\r\n      dataStructureSet,\r\n      termType\r\n    );\r\n    this.manualSmallTGsDrawer = new TopicGroupsDrawer(\r\n      this.svgGSelection,\r\n      debateDataSet,\r\n      dataStructureSet,\r\n      termType\r\n    );\r\n    this.manualSmallTGsDrawer.color = \"#424242\";\r\n    this.manualMiddleTGsDrawer = new TopicGroupsDrawer(\r\n      this.svgGSelection,\r\n      debateDataSet,\r\n      dataStructureSet,\r\n      termType\r\n    );\r\n    this.manualMiddleTGsDrawer.color = \"#939393\";\r\n    this.manualBigTGsDrawer = new TopicGroupsDrawer(\r\n      this.svgGSelection,\r\n      debateDataSet,\r\n      dataStructureSet,\r\n      termType\r\n    );\r\n    this.manualBigTGsDrawer.color = \"#939393\";\r\n    this.manualPeopleTGsDrawer = new TopicGroupsDrawer(\r\n      this.svgGSelection,\r\n      debateDataSet,\r\n      dataStructureSet,\r\n      termType\r\n    );\r\n    this.manualPeopleTGsDrawer.color = \"#3C3CD3\";\r\n    this.lcsegEGsDrawer = new TopicGroupsDrawer(\r\n      this.svgGSelection,\r\n      debateDataSet,\r\n      dataStructureSet,\r\n      termType\r\n    );\r\n    this.lcsegEGsDrawer.color = \"#cc9900\";\r\n\r\n    this.svgSelection.on(\"click\", (event) => {\r\n      console.log(\"svg clicked\", event);\r\n      // show all similarityBlocks\r\n      _.forEach(\r\n        dataStructureSet.similarityBlockManager.similarityBlocks,\r\n        (similarityBlock) => {\r\n          similarityBlock.visible = true;\r\n        }\r\n      );\r\n      this.similarityBlocksDrawer.update();\r\n      this.participantBlocksDrawer.emptySelectedParticipants();\r\n\r\n      this.insistenceIconDrawer.similarityBlock = null;\r\n      this.insistenceIconDrawer.update();\r\n      this.refutationIconDrawer.similarityBlock = null;\r\n      this.refutationIconDrawer.update();\r\n      this.uncertainIconDrawer.similarityBlock = null;\r\n      this.uncertainIconDrawer.update();\r\n    });\r\n  }\r\n\r\n  public centerConceptualRecurrentPlot() {\r\n    const utteranceObjectsForDrawing = this.dataStructureSet\r\n      .utteranceObjectsForDrawingManager.utteranceObjectsForDrawing;\r\n    if (utteranceObjectsForDrawing.length !== 0) {\r\n      const lastUtteranceObjectForDrawing =\r\n        utteranceObjectsForDrawing[utteranceObjectsForDrawing.length - 1];\r\n\r\n      const minusWidth =\r\n        lastUtteranceObjectForDrawing.beginningPointOfXY +\r\n        lastUtteranceObjectForDrawing.width;\r\n      const adjustedWidth = (this.svgWidth - minusWidth) / 2;\r\n\r\n      const adjustedHeight = (this.svgHeight - minusWidth) / 2;\r\n\r\n      this.svgGSelection.attr(\r\n        \"transform\",\r\n        `translate(${adjustedWidth}, ${adjustedHeight})`\r\n      );\r\n      if (this._zoomListener) {\r\n        const element = document.createElement(\"div\");\r\n        const transform = zoomTransform(element);\r\n        this._zoomListener(transform.translate(adjustedWidth, adjustedHeight));\r\n      }\r\n    } else {\r\n      console.warn(\"no utteranceObjectsForDrawing\");\r\n    }\r\n  }\r\n\r\n  public set zoomListener(zoomListener: (transform: d3.ZoomTransform) => void) {\r\n    this._zoomListener = zoomListener;\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport * as d3 from \"d3\";\r\nimport { D3ZoomEvent } from \"d3\";\r\nimport { LinkDatum, NodeDatum } from \"./GraphDataStructureMaker\";\r\nimport { ParticipantCount } from \"./TermCountDictOfEGMaker\";\r\n\r\nexport class SvgGSelectionsMaker {\r\n  private svgSelection: null | d3.Selection<\r\n    SVGSVGElement,\r\n    any,\r\n    HTMLElement,\r\n    any\r\n  > = null;\r\n  private svgGSelection: null | d3.Selection<\r\n    SVGGElement,\r\n    DragEvent,\r\n    HTMLElement,\r\n    any\r\n  > = null;\r\n\r\n  public constructor(\r\n    private readonly conceptualMapDivSelection: d3.Selection<\r\n      d3.BaseType,\r\n      unknown,\r\n      HTMLElement,\r\n      any\r\n    >,\r\n    private readonly svgWidth: number,\r\n    private readonly svgHeight: number\r\n  ) {}\r\n\r\n  public appendSvgSelection() {\r\n    this.svgSelection = this.conceptualMapDivSelection\r\n      .append(\"svg\")\r\n      .attr(\"width\", this.svgWidth)\r\n      .attr(\"height\", this.svgHeight)\r\n      .attr(\r\n        \"viewBox\",\r\n        `${-this.svgWidth / 2}, ${-this.svgHeight / 2}, ${this.svgWidth}, ${\r\n          this.svgHeight\r\n        }`\r\n      )\r\n      .call(\r\n        d3.zoom<SVGSVGElement, any>().on(\"zoom\", (event) => {\r\n          this.svgGSelection!.attr(\"transform\", () => event.transform);\r\n        })\r\n      );\r\n\r\n    return this.svgSelection;\r\n  }\r\n  public appendSvgGSelection() {\r\n    this.svgGSelection = this.svgSelection!.append(\"g\");\r\n\r\n    return this.svgGSelection;\r\n  }\r\n\r\n  public appendLinksGSelection() {\r\n    if (this.svgGSelection !== null) {\r\n      return this.svgGSelection\r\n        .append(\"g\")\r\n        .attr(\"stroke\", \"#999\")\r\n        .attr(\"stroke-opacity\", 0.6)\r\n        .selectAll<SVGLineElement, LinkDatum>(\"line\");\r\n    } else {\r\n      throw new Error(\"svgSelection is not appended yet\");\r\n    }\r\n  }\r\n\r\n  public appendNodePiesGSelection() {\r\n    if (this.svgGSelection !== null) {\r\n      return this.svgGSelection\r\n        .append(\"g\")\r\n        .selectAll<SVGGElement, NodeDatum>(\"g\");\r\n    } else {\r\n      throw new Error(\"svgSelection is not appended yet\");\r\n    }\r\n  }\r\n\r\n  public appendCirclesOfNodePiesGSelection() {\r\n    if (this.svgGSelection !== null) {\r\n      return this.svgGSelection\r\n        .append(\"g\")\r\n        .selectAll<SVGGElement, NodeDatum>(\"g\");\r\n    } else {\r\n      throw new Error(\"svgSelection is not appended yet\");\r\n    }\r\n  }\r\n\r\n  public appendNodesGSelection() {\r\n    if (this.svgGSelection !== null) {\r\n      return this.svgGSelection\r\n        .append(\"g\")\r\n        .attr(\"stroke\", \"#fff\")\r\n        .attr(\"stroke-width\", 1)\r\n        .selectAll<SVGCircleElement, NodeDatum>(\"circle\");\r\n    } else {\r\n      throw new Error(\"svgSelection is not appended yet\");\r\n    }\r\n  }\r\n\r\n  public appendTextsGSelection() {\r\n    if (this.svgGSelection !== null) {\r\n      return (\r\n        this.svgGSelection\r\n          .append(\"g\")\r\n          .attr(\"text-anchor\", \"middle\")\r\n          // .style(\"user-select\", \"none\")\r\n          .style(\"pointer-events\", \"none\")\r\n          .selectAll<SVGTextElement, NodeDatum>(\"text\")\r\n      );\r\n    } else {\r\n      throw new Error(\"svgSelection is not appended yet\");\r\n    }\r\n  }\r\n}\r\n\r\nexport function makeSimulation(nodes: NodeDatum[], links: LinkDatum[]) {\r\n  return d3\r\n    .forceSimulation<NodeDatum>(nodes)\r\n    .force(\r\n      \"link\",\r\n      d3.forceLink<NodeDatum, LinkDatum>(links).id((d) => d.id)\r\n    )\r\n    .force(\"charge\", d3.forceManyBody())\r\n    .force(\"x\", d3.forceX())\r\n    .force(\"y\", d3.forceY());\r\n}\r\n\r\nexport function makeDrag() {\r\n  return (simulation: d3.Simulation<NodeDatum, undefined>) => {\r\n    function dragstarted(event: any) {\r\n      if (!event.active) simulation.alphaTarget(0.3).restart();\r\n      event.subject.fx = event.subject.x;\r\n      event.subject.fy = event.subject.y;\r\n    }\r\n\r\n    function dragged(event: any) {\r\n      event.subject.fx = event.x;\r\n      event.subject.fy = event.y;\r\n    }\r\n\r\n    function dragended(event: any) {\r\n      if (!event.active) simulation.alphaTarget(0);\r\n      event.subject.fx = null;\r\n      event.subject.fy = null;\r\n    }\r\n\r\n    return d3\r\n      .drag<SVGCircleElement, NodeDatum>()\r\n      .on(\"start\", dragstarted)\r\n      .on(\"drag\", dragged)\r\n      .on(\"end\", dragended);\r\n  };\r\n}\r\n\r\nexport const makePieData = d3\r\n  .pie<ParticipantCount>()\r\n  .sort(null)\r\n  .value((d) => d.count);\r\n\r\nexport function makeArcDAttribute(\r\n  d: d3.PieArcDatum<ParticipantCount>,\r\n  nodeDatum: NodeDatum,\r\n  nodeSizeMultiplier: number\r\n) {\r\n  const arcMaker = d3\r\n    .arc<d3.PieArcDatum<ParticipantCount>>()\r\n    .innerRadius(0)\r\n    .outerRadius(Math.sqrt(nodeDatum.count * nodeSizeMultiplier) + 3);\r\n\r\n  return arcMaker(d);\r\n}\r\n","import { ParticipantDict } from \"./../../../common_functions/makeParticipants\";\r\n/* eslint-disable no-unused-vars */\r\n// import { participantDict } from \"./../DataStructureMaker/index\";\r\nimport * as d3 from \"d3\";\r\nimport { LinkDatum, NodeDatum, NodeLinkDict } from \"./GraphDataStructureMaker\";\r\nimport { ParticipantCount } from \"./TermCountDictOfEGMaker\";\r\nimport {\r\n  makeArcDAttribute,\r\n  makeDrag,\r\n  makePieData,\r\n  makeSimulation,\r\n  SvgGSelectionsMaker,\r\n} from \"./ConceptualMapDrawerInternalFunctions\";\r\nimport _ from \"lodash\";\r\nimport tinygradient from \"tinygradient\";\r\n\r\nexport class ConceptualMapDrawer {\r\n  private conceptualMapDivSelection: null | d3.Selection<\r\n    d3.BaseType,\r\n    unknown,\r\n    HTMLElement,\r\n    any\r\n  > = null;\r\n  private svgSelection: null | d3.Selection<\r\n    SVGSVGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  > = null;\r\n  private svgGSelection: null | d3.Selection<\r\n    SVGGElement,\r\n    DragEvent,\r\n    HTMLElement,\r\n    any\r\n  > = null;\r\n  private linksGSelection!: d3.Selection<\r\n    SVGLineElement,\r\n    LinkDatum,\r\n    SVGGElement,\r\n    unknown\r\n  >;\r\n  private nodesGSelection!: d3.Selection<\r\n    SVGCircleElement,\r\n    NodeDatum,\r\n    SVGGElement,\r\n    unknown\r\n  >;\r\n  private nodePiesGSelection!: d3.Selection<\r\n    SVGGElement,\r\n    NodeDatum,\r\n    SVGGElement,\r\n    unknown\r\n  >;\r\n  private circlesOfNodePiesGSelection!: d3.Selection<\r\n    SVGGElement,\r\n    NodeDatum,\r\n    SVGGElement,\r\n    unknown\r\n  >;\r\n  private nodeTextsGSelection!: d3.Selection<\r\n    SVGTextElement,\r\n    NodeDatum,\r\n    SVGGElement,\r\n    unknown\r\n  >;\r\n  private _nodeLinkDict: NodeLinkDict | null = null;\r\n  private _nodeSizeMultiplier: number = 1;\r\n  private _sentimentMarkerVisible: boolean = false;\r\n  private gradient = tinygradient(\r\n    { r: 196, g: 67, b: 67 },\r\n    { r: 79, g: 198, b: 66 }\r\n  );\r\n\r\n  public constructor(\r\n    private readonly coneptualMapDivClassName: string,\r\n    private readonly svgWidth: number,\r\n    private readonly svgHeight: number,\r\n    private _participantDict: ParticipantDict\r\n  ) {}\r\n\r\n  public setGraphData(nodeLinkDict: NodeLinkDict) {\r\n    this._nodeLinkDict = nodeLinkDict;\r\n  }\r\n  public setNodeSizeMultiplier(nodeSizeMultiplier: number) {\r\n    this._nodeSizeMultiplier = nodeSizeMultiplier;\r\n  }\r\n  public setParticipantDict(participantDict: ParticipantDict) {\r\n    this._participantDict = participantDict;\r\n  }\r\n  public set sentimentMarkerVisible(sentimentMarkerVisible: boolean) {\r\n    this._sentimentMarkerVisible = sentimentMarkerVisible;\r\n  }\r\n\r\n  public updateGraph() {\r\n    const nodes = this._nodeLinkDict!.nodes;\r\n    const links = this._nodeLinkDict!.links;\r\n    const nodeSizeMultiplier = this._nodeSizeMultiplier;\r\n    // select root div\r\n    if (this.conceptualMapDivSelection === null) {\r\n      this.conceptualMapDivSelection = d3.select(this.coneptualMapDivClassName);\r\n    }\r\n\r\n    // make SVG and G elements\r\n    if (this.svgSelection === null) {\r\n      const svgGSelectionsMaker = new SvgGSelectionsMaker(\r\n        this.conceptualMapDivSelection,\r\n        this.svgWidth,\r\n        this.svgHeight\r\n      );\r\n      this.svgSelection = svgGSelectionsMaker.appendSvgSelection();\r\n      this.svgGSelection = svgGSelectionsMaker.appendSvgGSelection();\r\n      this.linksGSelection = svgGSelectionsMaker.appendLinksGSelection();\r\n      this.nodePiesGSelection = svgGSelectionsMaker.appendNodePiesGSelection();\r\n      this.circlesOfNodePiesGSelection = svgGSelectionsMaker.appendCirclesOfNodePiesGSelection();\r\n      this.nodesGSelection = svgGSelectionsMaker.appendNodesGSelection();\r\n      this.nodeTextsGSelection = svgGSelectionsMaker.appendTextsGSelection();\r\n    }\r\n\r\n    const simulation = makeSimulation(nodes, links);\r\n\r\n    // drag event listener\r\n    const drag = makeDrag();\r\n\r\n    // Draw elements\r\n    // Update drawing links\r\n    this.linksGSelection = this.linksGSelection\r\n      .data(links)\r\n      .join(\"line\")\r\n      .attr(\"stroke-width\", (d) => Math.sqrt(d.count));\r\n\r\n    // Update drawing nodePies\r\n    this.nodePiesGSelection = this.nodePiesGSelection.data(nodes).join(\"g\");\r\n    const that = this;\r\n    this.nodePiesGSelection.each(function (nodeDatum) {\r\n      const arcsSelection = d3\r\n        .select(this)\r\n        .selectAll<SVGPathElement, d3.PieArcDatum<ParticipantCount>>(\"path\")\r\n        .data(makePieData(nodeDatum.participantCounts))\r\n        .join(\"path\")\r\n        .attr(\"fill\", (d) => that._participantDict[d.data.name].color)\r\n        .attr(\"d\", (d) => makeArcDAttribute(d, nodeDatum, nodeSizeMultiplier));\r\n\r\n      arcsSelection.each(function (arcDatum) {\r\n        d3.select(this)\r\n          .selectAll<HTMLTitleElement, d3.PieArcDatum<ParticipantCount>>(\r\n            \"title\"\r\n          )\r\n          .data([arcDatum])\r\n          .join(\"title\")\r\n          .text((d) => `${d.data.name}, ${d.data.count}`);\r\n      });\r\n    });\r\n\r\n    // Update drawing sentiment_circles of nodePies\r\n    this.circlesOfNodePiesGSelection = this.circlesOfNodePiesGSelection\r\n      .data(nodes)\r\n      .join(\"g\");\r\n    this.circlesOfNodePiesGSelection.each(function (nodeDatum) {\r\n      // find the circle's position (x, y)\r\n      // supplies: total count, the current count, distance\r\n      // ratio = ((front_counts) + (1/2* current_count) / total_count)\r\n      // x_position = distance * cos(ratio * 2PI)\r\n      // y_position = distance * sin(ratio * 2PI)\r\n      const ratios = _.map(\r\n        nodeDatum.participantCounts,\r\n        (participantCount, i) => {\r\n          const totalCount: number = _.reduce(\r\n            nodeDatum.participantCounts,\r\n            (reduced, participantCount) => reduced + participantCount.count,\r\n            0\r\n          );\r\n          let frontCount: number = 0;\r\n          for (let j = 0; j < i; j++) {\r\n            frontCount += nodeDatum.participantCounts[j].count;\r\n          }\r\n          return (frontCount + participantCount.count / 2) / totalCount;\r\n        }\r\n      );\r\n      const distance = Math.sqrt(nodeDatum.count * nodeSizeMultiplier) + 6;\r\n\r\n      const sentimentCirclesSelection = d3\r\n        .select(this)\r\n        .selectAll(\"circle\")\r\n        .data(nodeDatum.participantCounts)\r\n        .join(\"circle\")\r\n        .attr(\"r\", 2)\r\n        .attr(\r\n          \"cx\",\r\n          (d, i) => Math.cos(2 * Math.PI * ratios[i] - 0.5 * Math.PI) * distance\r\n        )\r\n        .attr(\r\n          \"cy\",\r\n          (d, i) => Math.sin(2 * Math.PI * ratios[i] - 0.5 * Math.PI) * distance\r\n        )\r\n        .attr(\"fill\", (d) => {\r\n          if (nodeDatum.id === \"매출\" && d.name === \"이재명\") {\r\n            console.log(\"!\", d);\r\n          }\r\n\r\n          if (d.count > 0 && that._sentimentMarkerVisible) {\r\n            // let scaledSentiment: number;\r\n            // if (d.sentiment > 1) {\r\n            //   scaledSentiment = 1;\r\n            // } else if (d.sentiment < -1) {\r\n            //   scaledSentiment = -1;\r\n            // } else {\r\n            //   scaledSentiment = d.sentiment;\r\n            // }\r\n            // scaledSentiment = scaledSentiment / 2 + 0.5;\r\n            // return that.gradient.rgbAt(scaledSentiment).toHexString();\r\n\r\n            if (d.sentiment > 0.25 * 2) {\r\n              return \"rgb(79, 198, 66)\";\r\n            } else if (d.sentiment < -0.25 * 2) {\r\n              return \"rgb(196, 67, 67)\";\r\n            } else {\r\n              return \"rgb(100, 100, 100)\";\r\n            }\r\n          } else {\r\n            return \"none\";\r\n          }\r\n        });\r\n    });\r\n\r\n    // Update drawing nodes\r\n    this.nodesGSelection = this.nodesGSelection\r\n      .data(nodes)\r\n      .join(\"circle\")\r\n      .attr(\"r\", (d) => Math.sqrt(d.count * nodeSizeMultiplier))\r\n      .attr(\"fill\", \"rgb(100, 100, 100)\")\r\n      .call(drag(simulation));\r\n\r\n    this.nodesGSelection.each(function (nodeDatum) {\r\n      d3.select(this)\r\n        .selectAll<HTMLTitleElement, NodeDatum>(\"title\")\r\n        .data([nodeDatum])\r\n        .join(\"title\")\r\n        .text((d) => `count: ${d.count}`);\r\n    });\r\n\r\n    // Update text of nodes\r\n    this.nodeTextsGSelection = this.nodeTextsGSelection\r\n      .data(nodes)\r\n      .join(\"text\")\r\n      .attr(\"font-size\", (d) => 4 * Math.log(2 * nodeSizeMultiplier * d.count))\r\n      .text((d) => d.id);\r\n\r\n    // Animate the graph\r\n    simulation.on(\"tick\", () => {\r\n      this.linksGSelection\r\n        .attr(\"x1\", (d) => (d.source as NodeDatum).x!)\r\n        .attr(\"y1\", (d) => (d.source as NodeDatum).y!)\r\n        .attr(\"x2\", (d) => (d.target as NodeDatum).x!)\r\n        .attr(\"y2\", (d) => (d.target as NodeDatum).y!);\r\n\r\n      this.nodePiesGSelection.attr(\r\n        \"transform\",\r\n        (d) => `translate(${d.x} ${d.y})`\r\n      );\r\n      this.circlesOfNodePiesGSelection.attr(\r\n        \"transform\",\r\n        (d) => `translate(${d.x} ${d.y})`\r\n      );\r\n\r\n      this.nodesGSelection.attr(\"cx\", (d) => d.x!).attr(\"cy\", (d) => d.y!);\r\n\r\n      this.nodeTextsGSelection\r\n        .attr(\"x\", (d) => d.x!)\r\n        .attr(\r\n          \"y\",\r\n          (d) => d.y! + 6 * Math.log(2 * nodeSizeMultiplier * d.count)\r\n        );\r\n    });\r\n  }\r\n\r\n  public removeDrawing() {\r\n    if (this.conceptualMapDivSelection !== null) {\r\n      this.svgSelection!.remove();\r\n      this.svgSelection = null;\r\n    }\r\n  }\r\n}\r\n","import _ from \"lodash\";\r\nimport * as math from \"mathjs\";\r\nimport {\r\n  SentenceObject,\r\n  TermCountDict,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\n\r\nexport interface OccurrenceDict {\r\n  [term: string]: number;\r\n}\r\n\r\nexport class OccurrenceMaker {\r\n  private _occurrenceVector: number[];\r\n  private _cooccurrenceMatrix: number[][];\r\n\r\n  constructor(\r\n    utteranceOjbectsOfEG: UtteranceObject[],\r\n    termListOfEG: string[],\r\n    termCountDictType: \"singleTermCountDict\" | \"compoundTermCountDict\",\r\n    sentenceWindow: number\r\n  ) {\r\n    const occurrenceDict: OccurrenceDict = {};\r\n    const termCountDictsOfWS: TermCountDict[] = [];\r\n\r\n    const windowSentenceElements: SentenceObject[] = [];\r\n    _.forEach(utteranceOjbectsOfEG, (utteranceOjbect) => {\r\n      _.forEach(utteranceOjbect.sentenceObjects, (sentenceObject) => {\r\n        // make windowSentences\r\n        if (windowSentenceElements.length === sentenceWindow) {\r\n          const termCountDictOfWS: TermCountDict = _.reduce<\r\n            SentenceObject,\r\n            TermCountDict\r\n          >(\r\n            windowSentenceElements,\r\n            (termCountDictOfWS, windowSentenceElement) => {\r\n              _.forEach(\r\n                windowSentenceElement[termCountDictType],\r\n                (count, term) => {\r\n                  if (term in termCountDictOfWS) {\r\n                    termCountDictOfWS[term] += count;\r\n                  } else {\r\n                    termCountDictOfWS[term] = count;\r\n                  }\r\n                }\r\n              );\r\n              return termCountDictOfWS;\r\n            },\r\n            {}\r\n          );\r\n\r\n          termCountDictsOfWS.push(termCountDictOfWS);\r\n\r\n          windowSentenceElements.shift();\r\n          windowSentenceElements.push(sentenceObject);\r\n        } else if (windowSentenceElements.length < sentenceWindow) {\r\n          windowSentenceElements.push(sentenceObject);\r\n        }\r\n\r\n        // make occurrenceDict\r\n        _.forEach(termListOfEG, (term) => {\r\n          if (sentenceObject.sentence.search(term) !== -1) {\r\n            if (term in occurrenceDict) occurrenceDict[term] += 1;\r\n            else occurrenceDict[term] = 1;\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    // make occurrenceVector\r\n    this._occurrenceVector = _.map(termListOfEG, (term) => {\r\n      return occurrenceDict[term];\r\n    });\r\n\r\n    // make cooccurrenceMatrix\r\n    this._cooccurrenceMatrix = math.zeros([\r\n      termListOfEG.length,\r\n      termListOfEG.length,\r\n    ]) as number[][];\r\n    _.forEach(termListOfEG, (term1, term1Index) => {\r\n      _.forEach(termListOfEG, (term2, term2Index) => {\r\n        _.forEach(termCountDictsOfWS, (termCountDictOfWS) => {\r\n          if (\r\n            term1 in termCountDictOfWS &&\r\n            term2 in termCountDictOfWS &&\r\n            term1 != term2\r\n          ) {\r\n            this._cooccurrenceMatrix[term1Index][term2Index] += 1;\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  public get occurrenceVector(): number[] {\r\n    return this._occurrenceVector;\r\n  }\r\n  public get cooccurrenceMatrix(): number[][] {\r\n    return this._cooccurrenceMatrix;\r\n  }\r\n}\r\n","/**\r\n * 'Data Importer' made from preprocessor\r\n */\r\n\r\nimport keyDict from \"../accessKeyDict.json\";\r\nimport apiHostAddressDictionary from \"./ApiHostAddressDictionary.json\";\r\n\r\nexport const aiopenAccessKey: string = keyDict.aiopen;\r\nexport const nodeExpressAddress = apiHostAddressDictionary.nodeExpress;\r\nexport const pythonFlaskAddress = apiHostAddressDictionary.pythonFlask;\r\n","import { OccurrenceMaker } from \"./OccurrenceMaker\";\r\n/* eslint-disable no-unused-vars */\r\nimport axios from \"axios\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\nimport _ from \"lodash\";\r\nimport { SimulationLinkDatum, SimulationNodeDatum } from \"d3\";\r\nimport {\r\n  ParticipantCount,\r\n  TermCountDetailDict,\r\n  TermCountDictOfEGMaker,\r\n} from \"./TermCountDictOfEGMaker\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport {\r\n  TermCountDict,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\nimport { pythonFlaskAddress } from \"../../../constants/constants\";\r\nimport { TermType } from \"../DataImporter\";\r\n\r\nexport interface NodeDatum extends SimulationNodeDatum {\r\n  id: string;\r\n  group: \"keyterm\" | \"term\";\r\n  count: number;\r\n  booleanCount: number;\r\n  participantCounts: ParticipantCount[]; // multiple count per 1 utterance\r\n  participantBooleanCounts: ParticipantCount[]; // 1 count per 1 utterance\r\n}\r\n\r\nexport interface LinkDatum extends SimulationLinkDatum<NodeDatum> {\r\n  id: string;\r\n  count: number;\r\n}\r\nexport interface NodeLinkDict {\r\n  nodes: NodeDatum[];\r\n  links: LinkDatum[];\r\n}\r\n\r\n// Pure Local Creating Node and Link Data\r\nexport class GraphDataStructureMaker {\r\n  private nodes!: NodeDatum[];\r\n  private links!: LinkDatum[];\r\n  private termListOfEG!: string[];\r\n  private cooccurrenceMatrixOfEG!: number[][];\r\n\r\n  public constructor(\r\n    engagementGroup: SimilarityBlock[][],\r\n    participantDict: ParticipantDict,\r\n    utteranceObjects: UtteranceObject[],\r\n    termType: TermType\r\n  ) {\r\n    const startIndex = engagementGroup[0][0].columnUtteranceIndex;\r\n    const endIndex = startIndex + engagementGroup.length;\r\n    const utteranceObjectsOfEG = _.filter(\r\n      utteranceObjects,\r\n      (utteranceObject, utteranceIndex) =>\r\n        startIndex <= utteranceIndex && utteranceIndex <= endIndex\r\n    );\r\n\r\n    const termCountDictOfEGMaker = new TermCountDictOfEGMaker(\r\n      utteranceObjectsOfEG,\r\n      participantDict,\r\n      termType\r\n    );\r\n    const termCountDictOfEG = termCountDictOfEGMaker.getTermCountDictOfEG();\r\n    const termBooleanCountDictOfEG = termCountDictOfEGMaker.getTermBooleanCountDictOfEG();\r\n    const termCountDetailDictOfEG = termCountDictOfEGMaker.getTermCountDetailDictOfEG();\r\n    const termBooleanCountDetailDictOfEG = termCountDictOfEGMaker.getTermBooleanCountDetailDictOfEG();\r\n\r\n    this.termListOfEG = this.makeTermListOfEG(termCountDictOfEG, 2);\r\n    const frequencyVectorOfEG = this.makeFrequencyVectorOfEG(\r\n      this.termListOfEG,\r\n      termCountDictOfEG\r\n    );\r\n    const booleanFrequencyVectorOfEG = this.makeFrequencyVectorOfEG(\r\n      this.termListOfEG,\r\n      termBooleanCountDictOfEG\r\n    );\r\n\r\n    const occurrenceMaker =\r\n      termType === \"single_term\"\r\n        ? new OccurrenceMaker(\r\n            utteranceObjectsOfEG,\r\n            this.termListOfEG,\r\n            \"singleTermCountDict\",\r\n            3\r\n          )\r\n        : new OccurrenceMaker(\r\n            utteranceObjectsOfEG,\r\n            this.termListOfEG,\r\n            \"compoundTermCountDict\",\r\n            3\r\n          );\r\n    this.cooccurrenceMatrixOfEG = occurrenceMaker.cooccurrenceMatrix;\r\n\r\n    this.nodes = this.makeNodes(\r\n      this.termListOfEG,\r\n      frequencyVectorOfEG,\r\n      booleanFrequencyVectorOfEG,\r\n      termCountDetailDictOfEG,\r\n      termBooleanCountDetailDictOfEG\r\n    );\r\n  }\r\n\r\n  public generateNodesAndLinks(\r\n    standardCooccurrenceToGenerateLinks: number,\r\n    maxOfLinksPerNode: number,\r\n    isNodeNotHavingLinksShown: boolean\r\n  ): NodeLinkDict {\r\n    this.links = this.makeLinks(\r\n      this.termListOfEG,\r\n      this.cooccurrenceMatrixOfEG,\r\n      standardCooccurrenceToGenerateLinks,\r\n      maxOfLinksPerNode\r\n    );\r\n\r\n    return {\r\n      nodes: isNodeNotHavingLinksShown\r\n        ? this.nodes\r\n        : this.filterNodes(this.nodes, this.links),\r\n      links: this.links,\r\n    };\r\n  }\r\n\r\n  public getCooccurrenceMatrixOfEG() {\r\n    return this.cooccurrenceMatrixOfEG;\r\n  }\r\n  public getTermListOfEG() {\r\n    return this.termListOfEG;\r\n  }\r\n\r\n  /**\r\n   * Remove nodes not having links\r\n   * @param nodes\r\n   * @param links\r\n   * @param termListOfEG\r\n   */\r\n  private filterNodes(nodes: NodeDatum[], links: LinkDatum[]): NodeDatum[] {\r\n    const nodeDict = _.keyBy(nodes, (node) => node.id);\r\n    _.forEach(nodes, (node) => {\r\n      const foundIndex = _.findIndex(\r\n        links,\r\n        (link) => link.source === node.id || link.target === node.id\r\n      );\r\n\r\n      if (foundIndex === -1) {\r\n        delete nodeDict[node.id];\r\n      }\r\n    });\r\n\r\n    return _.values(nodeDict);\r\n  }\r\n\r\n  private makeTermListOfEG(\r\n    termCountDict: TermCountDict,\r\n    standardHighCount: number\r\n  ) {\r\n    const termListOfEG: string[] = [];\r\n    _.forEach(termCountDict, (count, term) => {\r\n      if (count >= standardHighCount) termListOfEG.push(term);\r\n    });\r\n    termListOfEG.sort();\r\n    return termListOfEG;\r\n  }\r\n  private makeFrequencyVectorOfEG(\r\n    termListOfEG: string[],\r\n    termCountDictOfEG: TermCountDict\r\n  ) {\r\n    const frequencyVectorOfEG: number[] = _.map(\r\n      termListOfEG,\r\n      (term) => termCountDictOfEG[term]\r\n    );\r\n    return frequencyVectorOfEG;\r\n  }\r\n\r\n  /**\r\n   * Deprecated\r\n   * @param engagementGroup\r\n   * @param termListOfEG\r\n   * @param utteranceObjects\r\n   */\r\n  private makeCooccurrenceMatrixOfEG(\r\n    engagementGroup: SimilarityBlock[][],\r\n    termListOfEG: string[],\r\n    utteranceObjects: UtteranceObject[]\r\n  ): Promise<number[][]> {\r\n    const startIndex = engagementGroup[1][0].columnUtteranceIndex;\r\n    const endIndex =\r\n      engagementGroup[engagementGroup.length - 1][0].rowUtteranceIndex;\r\n    const utteranceObjectsOfEG = _.filter(\r\n      utteranceObjects,\r\n      (utteranceObject, utteranceIndex) =>\r\n        utteranceIndex >= startIndex && utteranceIndex <= endIndex\r\n          ? true\r\n          : false\r\n    );\r\n\r\n    // TODO Can I make cooccurrenceMatrix in local?\r\n    // By utteranceObject.sentenceOjbects[0].singleTermCountDict\r\n\r\n    // make termCountDictsOfWSOfEG and termListOfEG\r\n\r\n    // for each term1 in termListOfEG\r\n    //    for each term2 in termListOfEG\r\n    //       for each termCountDictOfWS in termCountDictsOfWS\r\n    //          if (term1 in termCountDictOfWS and term2 in termCountDictOfWS)\r\n    //              cooccurrenceMatrix[term1Index][term2Index] += 1\r\n\r\n    return new Promise<number[][]>((resolve, reject) => {\r\n      axios\r\n        .post<number[][]>(pythonFlaskAddress + \"/make-cooccurrence-matrix\", {\r\n          utteranceObjectsOfEG,\r\n          termListOfEG,\r\n        })\r\n        .then((response) => {\r\n          resolve(response.data);\r\n        })\r\n        .catch((reason) => {\r\n          reject(reason);\r\n        });\r\n    });\r\n  }\r\n\r\n  private makeNodes(\r\n    termListOfEG: string[],\r\n    frequencyVectorOfEG: number[],\r\n    booleanFrequencyVectorOfEG: number[],\r\n    termCountDetailDictOfEG: TermCountDetailDict,\r\n    termBooleanCountDetailDictOfEG: TermCountDetailDict\r\n  ): NodeDatum[] {\r\n    const nodes = _.map<string, NodeDatum>(termListOfEG, (term, termIndex) => {\r\n      return {\r\n        id: term,\r\n        group: \"term\",\r\n        count: frequencyVectorOfEG[termIndex],\r\n        booleanCount: booleanFrequencyVectorOfEG[termIndex],\r\n        participantCounts: _.values(termCountDetailDictOfEG[term]),\r\n        participantBooleanCounts: _.values(\r\n          termBooleanCountDetailDictOfEG[term]\r\n        ),\r\n      };\r\n    });\r\n    return nodes;\r\n  }\r\n\r\n  private makeLinks(\r\n    termListOfEG: string[],\r\n    cooccurrenceMatrixOfEG: number[][],\r\n    standardHighCooccurrence: number,\r\n    maxOflinksPerNode: number\r\n  ): LinkDatum[] {\r\n    const linkCandidateDict: { [linkId: string]: LinkDatum } = {};\r\n\r\n    // for each termListOfEG, make links based on cooccurrenceVector\r\n    _.forEach(termListOfEG, (sourceTerm, sourceTermIndex) => {\r\n      const cooccurrenceVectorOfATerm = cooccurrenceMatrixOfEG[sourceTermIndex];\r\n      const targetObjects = _.chain(cooccurrenceVectorOfATerm)\r\n        .map((count, termIndex) => ({\r\n          term: termListOfEG[termIndex],\r\n          termIndex,\r\n          count,\r\n        }))\r\n        .orderBy((targetObject) => targetObject.count, [\"desc\"])\r\n        .value();\r\n      const filteredTargetObjects = _.filter(\r\n        targetObjects,\r\n        (targetObject) =>\r\n          targetObject.count > standardHighCooccurrence &&\r\n          sourceTerm !== targetObject.term\r\n      );\r\n\r\n      let selectedTargetObjects!: {\r\n        term: string;\r\n        termIndex: number;\r\n        count: number;\r\n      }[];\r\n      if (filteredTargetObjects.length !== 0) {\r\n        selectedTargetObjects = filteredTargetObjects;\r\n      } else {\r\n        // related below commented code\r\n        // TODO If 1 node don't have any links, insert 1 link having most count\r\n        // selectedTargetObjects = [targetObjects[1]];\r\n      }\r\n\r\n      _.forEach(selectedTargetObjects, (selectedTargetObject) => {\r\n        const targetTerm = selectedTargetObject.term;\r\n        const linkId =\r\n          sourceTerm < targetTerm\r\n            ? `${sourceTerm}-${targetTerm}`\r\n            : `${targetTerm}-${sourceTerm}`;\r\n        linkCandidateDict[linkId] = {\r\n          id: linkId,\r\n          source: sourceTerm,\r\n          target: selectedTargetObject.term,\r\n          count: selectedTargetObject.count,\r\n        };\r\n      });\r\n    });\r\n\r\n    // delete links until max_of_links_per_node\r\n    const filteredLinkDict: { [linkId: string]: LinkDatum } = _.cloneDeep(\r\n      linkCandidateDict\r\n    );\r\n    _.forEach(termListOfEG, (term, termIndex) => {\r\n      const filteredLinkCandidates = _.chain(filteredLinkDict)\r\n        .filter(\r\n          (linkDatum, linkId) =>\r\n            linkDatum.source === term || linkDatum.target === term\r\n        )\r\n        .orderBy((linkDatum) => linkDatum.count, [\"desc\"])\r\n        .value();\r\n\r\n      if (filteredLinkCandidates.length > maxOflinksPerNode) {\r\n        for (\r\n          let i = maxOflinksPerNode;\r\n          i < filteredLinkCandidates.length;\r\n          i++\r\n        ) {\r\n          delete filteredLinkDict[filteredLinkCandidates[i].id];\r\n        }\r\n      }\r\n    });\r\n\r\n    // related to upper commented code.\r\n    // TODO If 1 node don't have any links, insert 1 link having most count\r\n    // _.forEach(termListOfEG, (term, termIndex) => {\r\n    //   const filteredLinks = _.filter(\r\n    //     filteredLinkDict,\r\n    //     (linkDatum, linkId) =>\r\n    //       linkDatum.source === term || linkDatum.target === term\r\n    //   );\r\n\r\n    //   if (filteredLinks.length === 0) {\r\n    //     const aliveLinkDatum = _.chain(linkCandidateDict)\r\n    //       .filter(\r\n    //         (linkDatum, linkId) =>\r\n    //           linkDatum.source === term || linkDatum.target === term\r\n    //       )\r\n    //       .maxBy((linkDatum) => linkDatum.count)\r\n    //       .value();\r\n\r\n    //     console.log(\"aliveLinkDatum\", aliveLinkDatum);\r\n\r\n    //     filteredLinkDict[aliveLinkDatum.id] = aliveLinkDatum;\r\n    //   }\r\n    // });\r\n\r\n    return _.values(filteredLinkDict);\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { Slider, InputNumber } from \"antd\";\r\nimport React from \"react\";\r\nimport styles from \"./SliderWithInput.module.scss\";\r\n\r\ninterface ComponentProps {\r\n  min: number;\r\n  max: number;\r\n  value: number;\r\n  step?: number;\r\n  sliderWidth?: number;\r\n  trackColor?: string;\r\n  onChangeListener: (changedValue: number) => void;\r\n}\r\ninterface ComponentState {}\r\n\r\nclass SliderWithInput extends React.Component<ComponentProps, ComponentState> {\r\n  constructor(props: ComponentProps) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.sliderContainer}>\r\n        <Slider\r\n          className={styles.slider}\r\n          min={this.props.min}\r\n          max={this.props.max}\r\n          value={this.props.value}\r\n          step={this.props.step ? this.props.step : 1}\r\n          onChange={this.onChange}\r\n          trackStyle={{\r\n            backgroundColor: this.props.trackColor\r\n              ? this.props.trackColor\r\n              : \"#91d5ff\",\r\n          }}\r\n          handleStyle={{\r\n            border: this.props.trackColor\r\n              ? `${this.props.trackColor} 2px solid`\r\n              : \"#91d5ff 2px solid\",\r\n            width: 10,\r\n            height: 10,\r\n            marginTop: -3,\r\n          }}\r\n          style={{\r\n            width: this.props.sliderWidth ? this.props.sliderWidth : 120,\r\n          }}\r\n        ></Slider>\r\n        <InputNumber\r\n          size={\"small\"}\r\n          className={styles.inputNumber}\r\n          value={this.props.value}\r\n          step={this.props.step ? this.props.step : 1}\r\n          onChange={this.onChange}\r\n        ></InputNumber>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private onChange = (changedValue: number | string | undefined | null) => {\r\n    if (typeof changedValue === \"number\") {\r\n      this.props.onChangeListener(changedValue);\r\n    }\r\n  };\r\n}\r\n\r\nexport default SliderWithInput;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Checkbox } from \"antd\";\r\nimport React from \"react\";\r\nimport SliderWithInput from \"../../../../components/SliderWithInput/SliderWithInput\";\r\nimport { ConceptualMapDrawer } from \"../ConceptualMapDrawer\";\r\nimport { GraphDataStructureMaker } from \"../GraphDataStructureMaker\";\r\nimport styles from \"./ConceptualMapControllers.module.scss\";\r\n\r\ninterface ComponentProps {\r\n  conceptualMapDrawer?: ConceptualMapDrawer;\r\n  graphDataStructureMaker?: GraphDataStructureMaker;\r\n  maxCooccurrence: number;\r\n  standardTermCount: number;\r\n  maxOfLinksPerNode: number;\r\n  showNodeNotHavingLinks: boolean;\r\n  standardTermCountSliderListener: (changedValue: number) => void;\r\n  maxOfLinksPerNodeSliderListener: (changedValue: number) => void;\r\n  showNodeNotHavingLinksCheckboxListener: (checked: boolean) => void;\r\n}\r\ninterface ComponentState {\r\n  nodeSizeMultiplier: number;\r\n}\r\n\r\nclass ConceptualMapControllers extends React.Component<\r\n  ComponentProps,\r\n  ComponentState\r\n> {\r\n  constructor(props: ComponentProps) {\r\n    super(props);\r\n    this.state = {\r\n      nodeSizeMultiplier: 1,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.conceptualMapControllers}>\r\n        <div>Node Size Multiplier</div>\r\n        <SliderWithInput\r\n          min={1}\r\n          max={10}\r\n          value={this.state.nodeSizeMultiplier}\r\n          onChangeListener={(changedValue) => {\r\n            this.props.conceptualMapDrawer!.setNodeSizeMultiplier(changedValue);\r\n            this.props.conceptualMapDrawer!.updateGraph();\r\n\r\n            this.setState({\r\n              nodeSizeMultiplier: changedValue,\r\n            });\r\n          }}\r\n        ></SliderWithInput>\r\n\r\n        <div>Standard High Cooccurrence Count to Generate Links</div>\r\n        <SliderWithInput\r\n          min={0}\r\n          max={this.props.maxCooccurrence}\r\n          value={this.props.standardTermCount}\r\n          onChangeListener={(changedValue) => {\r\n            // Make new nodes, links\r\n            const nodesAndLinks = this.props.graphDataStructureMaker!.generateNodesAndLinks(\r\n              changedValue,\r\n              this.props.maxOfLinksPerNode,\r\n              this.props.showNodeNotHavingLinks\r\n            );\r\n            this.props.conceptualMapDrawer!.setGraphData(nodesAndLinks);\r\n            this.props.conceptualMapDrawer!.updateGraph();\r\n\r\n            this.props.standardTermCountSliderListener(changedValue);\r\n          }}\r\n        ></SliderWithInput>\r\n\r\n        <div>Number of Links per a Node</div>\r\n        <SliderWithInput\r\n          min={0}\r\n          max={10}\r\n          value={this.props.maxOfLinksPerNode}\r\n          onChangeListener={(changedValue) => {\r\n            // make new nodes, links\r\n            const nodesAndLinks = this.props.graphDataStructureMaker!.generateNodesAndLinks(\r\n              this.props.standardTermCount,\r\n              changedValue,\r\n              this.props.showNodeNotHavingLinks\r\n            );\r\n            this.props.conceptualMapDrawer!.setGraphData(nodesAndLinks);\r\n            this.props.conceptualMapDrawer!.updateGraph();\r\n\r\n            this.props.maxOfLinksPerNodeSliderListener(changedValue);\r\n          }}\r\n        ></SliderWithInput>\r\n\r\n        <Checkbox\r\n          className={styles.checkbox}\r\n          defaultChecked\r\n          onChange={(event) => {\r\n            const showNodeNotHavingLinks = event.target.checked;\r\n            // make new nodes, links\r\n            const nodesAndLinks = this.props.graphDataStructureMaker!.generateNodesAndLinks(\r\n              this.props.standardTermCount,\r\n              this.props.maxOfLinksPerNode,\r\n              showNodeNotHavingLinks\r\n            );\r\n            this.props.conceptualMapDrawer!.setGraphData(nodesAndLinks);\r\n            this.props.conceptualMapDrawer!.updateGraph();\r\n\r\n            this.props.showNodeNotHavingLinksCheckboxListener(\r\n              showNodeNotHavingLinks\r\n            );\r\n          }}\r\n        >\r\n          Nodes not having Link\r\n        </Checkbox>\r\n\r\n        <Checkbox\r\n          className={styles.checkbox}\r\n          onChange={(event) => {\r\n            this.props.conceptualMapDrawer!.sentimentMarkerVisible =\r\n              event.target.checked;\r\n            this.props.conceptualMapDrawer!.updateGraph();\r\n          }}\r\n        >\r\n          Sentiment Marker\r\n        </Checkbox>\r\n\r\n        <div style={{ marginBottom: 12 }}>\r\n          checkbox for &apos;at least 1 link or not&apos;\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConceptualMapControllers;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  forwardRef,\r\n  Ref,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport styles from \"./ConceptualMapModal.module.scss\";\r\nimport { Modal } from \"antd\";\r\nimport { ConceptualMapDrawer } from \"./ConceptualMapDrawer\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\nimport { GraphDataStructureMaker } from \"./GraphDataStructureMaker\";\r\nimport * as math from \"mathjs\";\r\nimport _ from \"lodash\";\r\nimport ConceptualMapControllers from \"./ConceptualMapControllers/ConceptualMapControllers\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport { UtteranceObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { TermType } from \"../DataImporter\";\r\n\r\nconst modalContentWidth: number = 800;\r\nconst modalContentHeight: number = 600;\r\nconst conceptualMapDivClassName: string = \"conceptual-map\";\r\n\r\nexport interface ConceptualMapModalRef {\r\n  openModal: (modalTitle: string, engagementGroup: SimilarityBlock[][]) => void;\r\n}\r\ninterface ComponentProps {\r\n  participantDict: ParticipantDict;\r\n  utteranceObjects: UtteranceObject[];\r\n  termUtteranceBooleanMatrixTransposed: number[][];\r\n  termList: string[];\r\n  termType: TermType;\r\n}\r\n\r\nfunction ConceptualMapModal(\r\n  props: ComponentProps,\r\n  ref: Ref<ConceptualMapModalRef>\r\n) {\r\n  const modalRef = useRef<HTMLDivElement>(null);\r\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\r\n  const [modalTitle, setModalTitle] = useState<string>(\"\");\r\n  const [maxCooccurrence, setMaxCooccurrence] = useState<number>(0);\r\n  const [\r\n    standardTermCountToGenerateNode,\r\n    setStandardTermCountToGenerateNode,\r\n  ] = useState<number>(0);\r\n  const [maxOfLinksPerNode, setMaxOfLinksPerNode] = useState<number>(3);\r\n  const [showNodeNotHavingLinks, setShowNodeNotHavingLinks] = useState<boolean>(\r\n    true\r\n  );\r\n  const [conceptualMapDrawer, setConceptualMapDrawer] = useState<\r\n    ConceptualMapDrawer\r\n  >();\r\n  const [graphDataStructureMaker, setGraphDataStructureMaker] = useState<\r\n    GraphDataStructureMaker\r\n  >();\r\n\r\n  useEffect(() => {\r\n    const modalPadding = 24;\r\n    const conrollerWidth = 200;\r\n    setConceptualMapDrawer(\r\n      new ConceptualMapDrawer(\r\n        `.${conceptualMapDivClassName}`,\r\n        modalContentWidth - modalPadding * 2 - conrollerWidth,\r\n        modalContentHeight - modalPadding * 2,\r\n        props.participantDict\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (conceptualMapDrawer) {\r\n      conceptualMapDrawer.setParticipantDict(props.participantDict);\r\n    }\r\n  }, [props.participantDict]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    openModal: (modalTitle: string, engagementGroup: SimilarityBlock[][]) => {\r\n      setModalVisible(true);\r\n      setModalTitle(modalTitle);\r\n      console.log(\"engagementGroup\", engagementGroup);\r\n      conceptualMapDrawer!.removeDrawing();\r\n\r\n      const graphDataStructureMaker = new GraphDataStructureMaker(\r\n        engagementGroup,\r\n        props.participantDict,\r\n        props.utteranceObjects,\r\n        props.termType\r\n      );\r\n\r\n      const cooccurrenceMatrixOfEG = graphDataStructureMaker.getCooccurrenceMatrixOfEG();\r\n      const ceiledMedian = Math.ceil(math.mean(cooccurrenceMatrixOfEG));\r\n\r\n      const nodeLinkDict = graphDataStructureMaker.generateNodesAndLinks(\r\n        ceiledMedian,\r\n        maxOfLinksPerNode,\r\n        showNodeNotHavingLinks\r\n      );\r\n      console.log(\"nodeLinkDict\", nodeLinkDict);\r\n\r\n      conceptualMapDrawer!.setGraphData(nodeLinkDict);\r\n      conceptualMapDrawer!.updateGraph();\r\n\r\n      const maxCooccurrence = _.max(\r\n        _.map(\r\n          cooccurrenceMatrixOfEG,\r\n          (cooccurrenceVector) => _.orderBy(cooccurrenceVector, [], [\"desc\"])[1] // TODO [0] or [1]\r\n        )\r\n      ) as number;\r\n\r\n      setStandardTermCountToGenerateNode(ceiledMedian);\r\n      setMaxCooccurrence(maxCooccurrence);\r\n      setGraphDataStructureMaker(graphDataStructureMaker);\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <Modal\r\n      title={modalTitle}\r\n      visible={modalVisible}\r\n      width={modalContentWidth}\r\n      bodyStyle={{ height: modalContentHeight }}\r\n      onCancel={() => {\r\n        // this.setState({ modalVisible: false });\r\n        setModalVisible(false);\r\n      }}\r\n      maskClosable={false}\r\n    >\r\n      <div className={styles.conceptualMapModalContent} ref={modalRef}>\r\n        <ConceptualMapControllers\r\n          conceptualMapDrawer={conceptualMapDrawer}\r\n          graphDataStructureMaker={graphDataStructureMaker}\r\n          showNodeNotHavingLinks={showNodeNotHavingLinks}\r\n          maxCooccurrence={maxCooccurrence}\r\n          maxOfLinksPerNode={maxOfLinksPerNode}\r\n          standardTermCount={standardTermCountToGenerateNode}\r\n          standardTermCountSliderListener={(changedValue) => {\r\n            setStandardTermCountToGenerateNode(changedValue);\r\n          }}\r\n          maxOfLinksPerNodeSliderListener={(changedValue) => {\r\n            setMaxOfLinksPerNode(changedValue);\r\n          }}\r\n          showNodeNotHavingLinksCheckboxListener={(checked: boolean) => {\r\n            setShowNodeNotHavingLinks(checked);\r\n          }}\r\n        ></ConceptualMapControllers>\r\n        <div className={conceptualMapDivClassName}></div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default forwardRef(ConceptualMapModal);\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport React, { useEffect } from \"react\";\r\nimport { DataStructureManager } from \"../DataStructureMaker/DataStructureManager\";\r\nimport { UtteranceObjectForDrawing } from \"../interfaces\";\r\nimport styles from \"./TranscriptViewer.module.scss\";\r\nimport { getBackgroundColorOfSentenceSpan } from \"./TranscriptViewerUtils\";\r\n\r\ninterface ComponentProps {\r\n  dataStructureMaker: DataStructureManager | null;\r\n}\r\n\r\nfunction TranscriptViewer(props: ComponentProps) {\r\n  return (\r\n    <div className={styles.transcriptViewer}>\r\n      {props.dataStructureMaker ? (\r\n        _.map(\r\n          props.dataStructureMaker.dataStructureSet\r\n            .utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n          (utteranceObject, index) => {\r\n            return (\r\n              <div style={{ marginBottom: \"12px\" }} key={`utterance-${index}`}>\r\n                <div\r\n                  style={{\r\n                    color: props.dataStructureMaker!.dataStructureSet\r\n                      .participantDict[utteranceObject.name].color,\r\n                  }}\r\n                >\r\n                  [ {utteranceObject.name} ]\r\n                </div>\r\n                <div>{utteranceObject.utterance}</div>\r\n                {/* {getSentenceSpans(utteranceObject)} */}\r\n              </div>\r\n            );\r\n          }\r\n        )\r\n      ) : (\r\n        <div />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// TODO we can use it to color text for sentiment\r\nfunction getSentenceSpans(utteranceObject: UtteranceObjectForDrawing) {\r\n  return _.map(utteranceObject.sentenceObjects, (sentenceObject) => {\r\n    return (\r\n      <span\r\n        style={{\r\n          // marginRight: 2,\r\n          backgroundColor: getBackgroundColorOfSentenceSpan(\r\n            sentenceObject,\r\n            0.25\r\n          ),\r\n        }}\r\n      >\r\n        {sentenceObject.sentence + \" \"}\r\n      </span>\r\n    );\r\n  });\r\n}\r\n\r\nexport default TranscriptViewer;\r\n","import _ from \"lodash\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\n\r\n/**\r\n *\r\n * @param conceptSimilarityGroup\r\n * @param startRowIndex\r\n * @param endRowIndex sliced until endRowIndex - 1\r\n */\r\nexport function make1EngagementGroup(\r\n  conceptSimilarityGroup: SimilarityBlock[][],\r\n  startRowIndex: number,\r\n  endRowIndex: number\r\n): SimilarityBlock[][] {\r\n  const engagementGroup = _.chain(conceptSimilarityGroup)\r\n    .slice(startRowIndex, endRowIndex)\r\n    .map((rowSimilarityLine) => {\r\n      return _.slice(\r\n        rowSimilarityLine,\r\n        startRowIndex,\r\n        rowSimilarityLine.length\r\n      );\r\n    })\r\n    .value();\r\n\r\n  return engagementGroup;\r\n}\r\n","import _ from \"lodash\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\nimport { make1EngagementGroup as make1TopicGroup } from \"./make1EngagementGroup\";\r\n\r\nexport function makeManualTGs(\r\n  totalSimilarityBlockGroup: SimilarityBlock[][],\r\n  startRowIndexesForSplit: number[]\r\n): SimilarityBlock[][][] {\r\n  const manualTGs: SimilarityBlock[][][] = [];\r\n\r\n  for (let i = 0; i < startRowIndexesForSplit.length; i++) {\r\n    const startRowIndex = startRowIndexesForSplit[i];\r\n    const endRowIndex =\r\n      i < startRowIndexesForSplit.length - 1\r\n        ? startRowIndexesForSplit[i + 1]\r\n        : totalSimilarityBlockGroup.length;\r\n    const topicGroup = make1TopicGroup(\r\n      totalSimilarityBlockGroup,\r\n      startRowIndex,\r\n      endRowIndex\r\n    );\r\n    manualTGs.push(topicGroup);\r\n  }\r\n\r\n  return manualTGs;\r\n}\r\n\r\nexport function getBasicIncomeManualSmallEGTitles(): string[] {\r\n  return [\r\n    \"찬반 of '긴급재난지원금 경제적 효과'\",\r\n    \"기본소득 정의 및 평가\",\r\n    \"보수진영에서 기본소득이 이슈화된 이유는?\",\r\n    \"안심소득 소개 및 이해과정\",\r\n    \"찬반(증세 및 조세저항) of '안심소득 vs 기본소득'\",\r\n    \"찬반(증세,경제 효과) of '안심소득 vs 기본소득' in '이재명 vs 오세훈'\",\r\n    \"현실적 방안인지 찬반 of '안심소득 vs 기본소득'\",\r\n    \"기본소득, 안심소득의 '기존 복지 제도 통합'에 대해 서로들 오해하고 있음 => 서로 의견 주고 받음..\",\r\n    \"시청자 의견 소개\",\r\n    \"기본소득의 실현가능성 찬반\",\r\n    \"'미래의 노동공급과 생존'에 대한 서로 다른 복지정책의 접근\",\r\n    \"기본소득의 근로의욕 반대 의견 및 팩트체크\",\r\n  ];\r\n}\r\n\r\nexport function getBasicIncomeManualMiddleEGTitles(): string[] {\r\n  return [\r\n    \"찬반 of '긴급재난지원금 경제적 효과'\",\r\n    \"기본소득 정의 및 평가\",\r\n    \"안심소득 소개 및 이해과정\",\r\n    \"찬반(증세, 조세저항, 경제 효과) of '안심소득 vs 기본소득'\",\r\n    \"현실적 방안인지 찬반 of '안심소득 vs 기본소득'\",\r\n    \"기본소득, 안심소득의 '기존 복지 제도 통합'에 대해 서로들 오해하고 있음 => 서로 의견 주고 받음..\",\r\n    \"시청자 의견 소개\",\r\n    \"기본소득 실현가능방법 '증세'의 찬반\",\r\n    \"기본소득의 노동공급, 근로의욕에 대한 긍정 vs 부정\",\r\n  ];\r\n}\r\n\r\nexport function getBasicIncomeManualBigEGTitles(): string[] {\r\n  return [\r\n    \"찬반 of '긴급재난지원금 경제적 효과'\",\r\n    \"기본소득 정의 및 평가\",\r\n    \"안심소득 소개 및 이해과정\",\r\n    \"안심소득 vs 기본소득\",\r\n    \"기본소득 실현가능방법 '증세'의 찬반\",\r\n    \"기본소득의 노동공급, 근로의욕에 대한 긍정 vs 부정\",\r\n  ];\r\n}\r\n\r\nexport function getSatManualBigEGTitles(): string[] {\r\n  return [\r\n    \"정시확대 방침에 대한 참가자들의 의견소개\",\r\n    \"전교조의 수시에 대한 입장(학생부교과전형) 및 (부정적)반응\",\r\n    \"학생부종합전형 보완 vs 수능 정시 확대\",\r\n    \"선생님들의 학종에 관한 역량 필요성 찬반\",\r\n    \"사교육 문제에 대한 정시 vs 학종\",\r\n    \"학생들의 혼란을 줄여줘야 하지 않겠느냐에 대한 의견\",\r\n    \"모든 고등학교를 일반고 전환에 대한 의견\",\r\n    \"이번 대입개편안에 대한 필수요소에 대해 각자의 의견\",\r\n  ];\r\n}\r\n\r\nexport function getMilitaryManualBigEGTitles(): string[] {\r\n  return [\r\n    \"모병제에 대한 첫 발언\",\r\n    \"모병제가 정치적 선거용인지\",\r\n    \"인구절벽과 군인 수 문제\",\r\n    \"근본적인 보병의 숫자가 필요한 이슈\",\r\n    \"모병제가 되면 신분제가 되지 않느냐에 대한 이슈\",\r\n    \"시청자 의견: 모병제로 인한 질적 향상\",\r\n    \"시청자 의견: 군 간부 인력 확충 이슈\",\r\n    \"시청자 의견: 여성 징집 or 모병\",\r\n    \"군대 계급의 사다리가 되려면 그에 대한 예산 이슈\",\r\n    \"군대문화 개선으로 각자 마무리 발언\",\r\n  ];\r\n}\r\n\r\n/**\r\n * Deprecated\r\n * @param conceptSimilarityMatrix\r\n * @param startUtteranceIndex\r\n * @param endUtteranceIndex\r\n */\r\nexport function make1EngagementGroupByUtteranceIndex(\r\n  conceptSimilarityMatrix: SimilarityBlock[][],\r\n  startUtteranceIndex: number,\r\n  endUtteranceIndex: number\r\n): SimilarityBlock[][] {\r\n  return _.chain(conceptSimilarityMatrix)\r\n    .slice(startUtteranceIndex, endUtteranceIndex - 1)\r\n    .map((similarityBlocksIn1Row) => {\r\n      return _.slice(\r\n        similarityBlocksIn1Row,\r\n        startUtteranceIndex,\r\n        similarityBlocksIn1Row.length\r\n      );\r\n    })\r\n    .value();\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport {\r\n  SentenceObject,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\nimport { UtteranceObjectForDrawing } from \"../interfaces\";\r\n\r\n// TODO making...\r\nexport default class UtteranceObjectsForDrawingManager {\r\n  private _utteranceObjectsForDrawing: UtteranceObjectForDrawing[];\r\n  private _positiveSumStandard: number = 0.5;\r\n  private _sentenceSentimentStandard: number = 0.25;\r\n  private _columnLongStandard: number = 200;\r\n\r\n  public constructor(utteranceObjects: UtteranceObject[]) {\r\n    // make utteranceObjectsForDrawing\r\n\r\n    let beginningPointOfXY: number = 0;\r\n    const widthResizingConstant: number = 2.6;\r\n\r\n    const utteranceObjectsForDrawing: UtteranceObjectForDrawing[] = _.map(\r\n      utteranceObjects,\r\n      (utteranceObject) => {\r\n        const width: number =\r\n          Math.sqrt(utteranceObject.utterance.length) / widthResizingConstant;\r\n\r\n        // make insistenceScore\r\n        // const insistenceScore: number = _.reduce<SentenceObject, number>(\r\n        //   utteranceObject.sentenceObjects,\r\n        //   (reduced, sentenceObject) => {\r\n        //     return sentenceObject.sentiment >= _sentenceSentimentStandard\r\n        //       ? reduced + sentenceObject.sentiment\r\n        //       : reduced;\r\n        //   },\r\n        //   0\r\n        // );\r\n        // const insistence: boolean =\r\n        //   insistenceScore >= _positiveSumStandard &&\r\n        //   utteranceObject.utterance.length > _columnLongStandard\r\n        //     ? true\r\n        //     : false;\r\n        const insistence = this.getPositiveOrNot({\r\n          utteranceObject,\r\n          positiveSumStandard: this._positiveSumStandard,\r\n          columnLongStandard: this._columnLongStandard,\r\n          sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n        });\r\n\r\n        const newUtteranceObject: UtteranceObjectForDrawing = {\r\n          ...utteranceObject,\r\n          beginningPointOfXY: beginningPointOfXY,\r\n          width,\r\n          insistence,\r\n        };\r\n        beginningPointOfXY += newUtteranceObject.width;\r\n        return newUtteranceObject;\r\n      }\r\n    );\r\n\r\n    this._utteranceObjectsForDrawing = utteranceObjectsForDrawing;\r\n  }\r\n\r\n  private getPositiveOrNot(p: {\r\n    utteranceObject: UtteranceObject | UtteranceObjectForDrawing;\r\n    positiveSumStandard: number;\r\n    sentenceSentimentStandard: number;\r\n    columnLongStandard: number;\r\n  }): boolean {\r\n    // make insistenceScore\r\n    const insistenceScore: number = _.reduce<SentenceObject, number>(\r\n      p.utteranceObject.sentenceObjects,\r\n      (reduced, sentenceObject) => {\r\n        return sentenceObject.sentiment >= p.sentenceSentimentStandard\r\n          ? reduced + sentenceObject.sentiment\r\n          : reduced;\r\n      },\r\n      0\r\n    );\r\n    const insistence: boolean =\r\n      insistenceScore >= p.positiveSumStandard &&\r\n      p.utteranceObject.utterance.length > p.columnLongStandard\r\n        ? true\r\n        : false;\r\n\r\n    return insistence;\r\n  }\r\n\r\n  private applyPositive(p: {\r\n    utteranceObjectsForDrawing: UtteranceObjectForDrawing[];\r\n    positiveSumStandard: number;\r\n    sentenceSentimentStandard: number;\r\n    columnLongStandard: number;\r\n  }) {\r\n    _.forEach(this.utteranceObjectsForDrawing, (utteranceObject) => {\r\n      const insistence = this.getPositiveOrNot({\r\n        utteranceObject,\r\n        positiveSumStandard: this._positiveSumStandard,\r\n        columnLongStandard: this._columnLongStandard,\r\n        sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n      });\r\n      utteranceObject.insistence = insistence;\r\n    });\r\n  }\r\n\r\n  public get utteranceObjectsForDrawing() {\r\n    return this._utteranceObjectsForDrawing;\r\n  }\r\n  public set positiveSumStandard(positiveSumStandard: number) {\r\n    this._positiveSumStandard = positiveSumStandard;\r\n    this.applyPositive({\r\n      utteranceObjectsForDrawing: this._utteranceObjectsForDrawing,\r\n      columnLongStandard: this._columnLongStandard,\r\n      positiveSumStandard: this._positiveSumStandard,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n    });\r\n  }\r\n  public set sentenceSentimentStandard(sentenceSentimentStandard: number) {\r\n    this._sentenceSentimentStandard = sentenceSentimentStandard;\r\n    this.applyPositive({\r\n      utteranceObjectsForDrawing: this._utteranceObjectsForDrawing,\r\n      columnLongStandard: this._columnLongStandard,\r\n      positiveSumStandard: this._positiveSumStandard,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n    });\r\n  }\r\n  public set colUtteranceLongStandard(columnLongStandard: number) {\r\n    this._columnLongStandard = columnLongStandard;\r\n    this.applyPositive({\r\n      utteranceObjectsForDrawing: this._utteranceObjectsForDrawing,\r\n      columnLongStandard: this._columnLongStandard,\r\n      positiveSumStandard: this._positiveSumStandard,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n    });\r\n  }\r\n}\r\n\r\nexport function makeUtteranceObjectsForDrawing(\r\n  utteranceObjects: UtteranceObject[]\r\n): UtteranceObjectForDrawing[] {\r\n  let beginningPointOfXY: number = 0;\r\n  const widthResizingConstant: number = 2.6;\r\n  // TODO\r\n  const _columnLongStandard: number = 200;\r\n  const _positiveSumStandard: number = 0.5;\r\n  const _sentenceSentimentStandard: number = 0.25;\r\n\r\n  const utteranceObjectsForDrawing: UtteranceObjectForDrawing[] = _.map(\r\n    utteranceObjects,\r\n    (utteranceObject) => {\r\n      const width: number =\r\n        Math.sqrt(utteranceObject.utterance.length) / widthResizingConstant;\r\n\r\n      // make insistenceScore\r\n      const insistenceScore: number = _.reduce<SentenceObject, number>(\r\n        utteranceObject.sentenceObjects,\r\n        (reduced, sentenceObject) => {\r\n          return sentenceObject.sentiment >= _sentenceSentimentStandard\r\n            ? reduced + sentenceObject.sentiment\r\n            : reduced;\r\n        },\r\n        0\r\n      );\r\n      const insistence: boolean =\r\n        insistenceScore >= _positiveSumStandard &&\r\n        utteranceObject.utterance.length > _columnLongStandard\r\n          ? true\r\n          : false;\r\n\r\n      const newUtteranceObject: UtteranceObjectForDrawing = {\r\n        ...utteranceObject,\r\n        beginningPointOfXY: beginningPointOfXY,\r\n        width,\r\n        insistence,\r\n      };\r\n      beginningPointOfXY += newUtteranceObject.width;\r\n      return newUtteranceObject;\r\n    }\r\n  );\r\n\r\n  return utteranceObjectsForDrawing;\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport * as math from \"mathjs\";\r\nimport { findTopValueIndexes } from \"../../../common_functions/findTopValueIndexes\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nconst makeCosineSimilarity = require(\"compute-cosine-similarity\");\r\nimport {\r\n  KeytermObject,\r\n  SentenceObject,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\n\r\nexport class SimilarityBlockManager {\r\n  private _similarityBlocks: SimilarityBlock[] = [];\r\n  private _similarityBlockGroup: SimilarityBlock[][] = [];\r\n  private _selfConsistencyWeight: number = 1;\r\n  private _otherConsistencyWeight: number = 1;\r\n  private _refutationWeight: number = 1;\r\n  private _insistenceWeight: number = 1;\r\n  private _sentenceSentimentStandard: number = 0.25;\r\n  private _negativeSumStandard: number = 0.5;\r\n  private _positiveSumStandard: number = 0.5;\r\n  private _colUtteranceLongStandard: number = 200;\r\n  private _hostWeight: number = 1;\r\n  private _hostLongStandard: number = 100;\r\n\r\n  public constructor(\r\n    conceptMatrixTransposed: number[][],\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    keytermObjects: KeytermObject[],\r\n    private readonly participantDict: ParticipantDict\r\n  ) {\r\n    // Make similarity_block\r\n    for (\r\n      let utteranceRowIndex = 1;\r\n      utteranceRowIndex < conceptMatrixTransposed.length;\r\n      utteranceRowIndex++\r\n    ) {\r\n      this._similarityBlockGroup.push([]);\r\n      for (\r\n        let utteranceColIndex = 0;\r\n        utteranceColIndex < utteranceRowIndex;\r\n        utteranceColIndex++\r\n      ) {\r\n        const rowUtteranceConcept = conceptMatrixTransposed[utteranceRowIndex];\r\n        const colUtteranceConcept = conceptMatrixTransposed[utteranceColIndex];\r\n        const rowUtteranceObject =\r\n          utteranceObjectsForDrawing[utteranceRowIndex];\r\n        const colUtteranceObject =\r\n          utteranceObjectsForDrawing[utteranceColIndex];\r\n\r\n        const partsOfSimilarity = _.map(\r\n          rowUtteranceConcept,\r\n          (keytermScore1, i) => {\r\n            const keytermScore2 = colUtteranceConcept[i];\r\n            // We can check main keyterms to contribute similarityScore here\r\n            return keytermScore1 * keytermScore2;\r\n          }\r\n        );\r\n        const similarityScore = _.sum(partsOfSimilarity);\r\n\r\n        const topValueIndexes = findTopValueIndexes(partsOfSimilarity, 10);\r\n        const mainKeytermObjects = _.map(\r\n          topValueIndexes,\r\n          (topValueIndex) => keytermObjects[topValueIndex]\r\n        );\r\n\r\n        // Make simialrityBlock\r\n        const conceptSimilarityBlock: SimilarityBlock = {\r\n          beginningPointOfX: colUtteranceObject.beginningPointOfXY,\r\n          beginningPointOfY: rowUtteranceObject.beginningPointOfXY,\r\n          width: colUtteranceObject.width,\r\n          height: rowUtteranceObject.width,\r\n          similarity: similarityScore, // 여기서 유사도에 의한 계산이 진행됨.\r\n          // similarityScore: math.dot(utterance1Concept, utterance2Concept),\r\n          // similarityScore: makeCosineSimilarity(\r\n          //   utterance1Concept,\r\n          //   utterance2Concept\r\n          // ),\r\n          weight: 1,\r\n          mainKeytermObjects,\r\n          rowUtteranceIndex: utteranceRowIndex,\r\n          columnUtteranceIndex: utteranceColIndex,\r\n          other: rowUtteranceObject.name !== colUtteranceObject.name,\r\n          refutation: false,\r\n          engagementPoint: false,\r\n          visible: true,\r\n        };\r\n\r\n        // Because cosine similairity between [0, 0, ...] and [0, 0, ...]\r\n        // if (isNaN(conceptSimilarityBlock.similarity)) {\r\n        //   conceptSimilarityBlock.similarity = 0;\r\n        // }\r\n\r\n        // Push the similarityBlock\r\n        this._similarityBlocks.push(conceptSimilarityBlock);\r\n        this._similarityBlockGroup[utteranceRowIndex - 1].push(\r\n          conceptSimilarityBlock\r\n        );\r\n      }\r\n    }\r\n\r\n    // Apply refutation\r\n    this.applyRefutation({\r\n      utteranceObjectsForDrawing,\r\n      participantDict,\r\n      similarityBlocks: this._similarityBlocks,\r\n      similarityBlockGroup: this._similarityBlockGroup,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n      negativeSumStandard: this._negativeSumStandard,\r\n      colUtteranceLongStandard: this._colUtteranceLongStandard,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * applyWeightedSimilarity\r\n   * @changed_variable : similarityBlock.weight of simialrityBlocks\r\n   */\r\n  private applyWeight() {\r\n    _.forEach(this._similarityBlockGroup, (rowSimilarityBlocks) => {\r\n      _.forEach(rowSimilarityBlocks, (similarityBlock) => {\r\n        let weight: number = 1;\r\n\r\n        const rowUtteranceObject: UtteranceObjectForDrawing = this\r\n          .utteranceObjectsForDrawing[similarityBlock.rowUtteranceIndex];\r\n        const colUtteranceObject: UtteranceObjectForDrawing = this\r\n          .utteranceObjectsForDrawing[similarityBlock.columnUtteranceIndex];\r\n\r\n        // apply other_consistency_weight\r\n        // apply self_consistency_weight\r\n        if (similarityBlock.other) {\r\n          weight *= this._otherConsistencyWeight;\r\n        } else {\r\n          weight *= this._selfConsistencyWeight;\r\n        }\r\n\r\n        // apply refutation_weight\r\n        if (similarityBlock.refutation) {\r\n          weight *= this._refutationWeight;\r\n\r\n          // apply insistence_weight\r\n          if (colUtteranceObject.insistence) {\r\n            weight *= this._insistenceWeight;\r\n          }\r\n        }\r\n\r\n        // apply host_weight\r\n        if (\r\n          (rowUtteranceObject.name === \"진행자\" &&\r\n            rowUtteranceObject.utterance.length > this._hostLongStandard) ||\r\n          (colUtteranceObject.name === \"진행자\" &&\r\n            colUtteranceObject.utterance.length > this._hostLongStandard)\r\n        ) {\r\n          weight *= this._hostWeight;\r\n        }\r\n\r\n        similarityBlock.weight = weight;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * applyRefutation\r\n   * @param p\r\n   * @changed_variable similarityBlock in similarityBlocks & similarityBlockGroup\r\n   */\r\n  private applyRefutation(p: {\r\n    utteranceObjectsForDrawing: UtteranceObjectForDrawing[];\r\n    participantDict: ParticipantDict;\r\n    similarityBlocks: SimilarityBlock[];\r\n    similarityBlockGroup: SimilarityBlock[][];\r\n    sentenceSentimentStandard: number;\r\n    negativeSumStandard: number;\r\n    colUtteranceLongStandard: number;\r\n  }) {\r\n    _.forEach(p.similarityBlocks, (similarityBlock) => {\r\n      similarityBlock.refutation = false;\r\n\r\n      const rowUtteranceObject =\r\n        p.utteranceObjectsForDrawing[similarityBlock.rowUtteranceIndex];\r\n      const colUtteranceObject =\r\n        p.utteranceObjectsForDrawing[similarityBlock.columnUtteranceIndex];\r\n\r\n      const refutationScore = _.reduce<SentenceObject, number>(\r\n        rowUtteranceObject.sentenceObjects,\r\n        (reduced, sentenceObject) => {\r\n          return sentenceObject.sentiment <= -p.sentenceSentimentStandard\r\n            ? reduced + sentenceObject.sentiment\r\n            : reduced;\r\n        },\r\n        0\r\n      );\r\n\r\n      if (refutationScore <= -p.negativeSumStandard) {\r\n        // console.log(\"refutationScore\", refutationScore);\r\n        // console.log(\"-p.negativeSumStandard\", -p.negativeSumStandard);\r\n\r\n        const rowSimilarityBlocks =\r\n          p.similarityBlockGroup[similarityBlock.rowUtteranceIndex - 1];\r\n        const filtered = _.filter(\r\n          rowSimilarityBlocks,\r\n          (rowSimilarityBlock, utteranceIndexOfrowSimilarityBlock) => {\r\n            let isFilter: boolean = false;\r\n            if (\r\n              utteranceIndexOfrowSimilarityBlock >=\r\n              similarityBlock.columnUtteranceIndex\r\n            ) {\r\n              const utteranceOjbect1 =\r\n                p.utteranceObjectsForDrawing[similarityBlock.rowUtteranceIndex];\r\n              const utteranceOjbect2 =\r\n                p.utteranceObjectsForDrawing[\r\n                  utteranceIndexOfrowSimilarityBlock\r\n                ];\r\n              const team1 = p.participantDict[utteranceOjbect1.name].team;\r\n              const team2 = p.participantDict[utteranceOjbect2.name].team;\r\n              if (team1 !== team2 && team1 > 0 && team2 > 0) {\r\n                const utteranceObjectOfRebuttalTarget =\r\n                  p.utteranceObjectsForDrawing[\r\n                    rowSimilarityBlock.columnUtteranceIndex\r\n                  ];\r\n                // TODO\r\n                // if (rowSimilarityBlock.similarityScore > 40000) {\r\n                //   isFilter = true;\r\n                // }\r\n                if (\r\n                  utteranceObjectOfRebuttalTarget.utterance.length >\r\n                  p.colUtteranceLongStandard\r\n                ) {\r\n                  isFilter = true;\r\n                }\r\n              }\r\n            }\r\n            return isFilter;\r\n          }\r\n        );\r\n\r\n        const team1 = p.participantDict[colUtteranceObject.name].team;\r\n        const team2 = p.participantDict[rowUtteranceObject.name].team;\r\n        if (\r\n          // TODO\r\n          // conceptSimilarityBlock.similarityScore > 40000 &&\r\n          colUtteranceObject.utterance.length > p.colUtteranceLongStandard &&\r\n          filtered.length === 1 &&\r\n          similarityBlock.rowUtteranceIndex -\r\n            similarityBlock.columnUtteranceIndex <\r\n            20 &&\r\n          team1 !== team2 &&\r\n          team1 > 0 &&\r\n          team2 > 0\r\n        ) {\r\n          similarityBlock.refutation = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public get similarityBlocks(): SimilarityBlock[] {\r\n    return this._similarityBlocks;\r\n  }\r\n\r\n  public get similarityBlockGroup(): SimilarityBlock[][] {\r\n    return this._similarityBlockGroup;\r\n  }\r\n\r\n  public set selfConsistencyWeight(selfConsistencyWeight: number) {\r\n    this._selfConsistencyWeight = selfConsistencyWeight;\r\n    this.applyWeight();\r\n  }\r\n  public set otherConsistencyWeight(otherConsistencyWeight: number) {\r\n    this._otherConsistencyWeight = otherConsistencyWeight;\r\n    this.applyWeight();\r\n  }\r\n  public set refutationWeight(refutationWeight: number) {\r\n    this._refutationWeight = refutationWeight;\r\n    this.applyWeight();\r\n  }\r\n  public set insistenceWeight(insistenceWeight: number) {\r\n    this._insistenceWeight = insistenceWeight;\r\n    this.applyWeight();\r\n  }\r\n  public set sentenceSentimentStandard(sentenceSentimentStandard: number) {\r\n    this._sentenceSentimentStandard = sentenceSentimentStandard;\r\n    this.applyRefutation({\r\n      utteranceObjectsForDrawing: this.utteranceObjectsForDrawing,\r\n      participantDict: this.participantDict,\r\n      similarityBlocks: this._similarityBlocks,\r\n      similarityBlockGroup: this._similarityBlockGroup,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n      negativeSumStandard: this._negativeSumStandard,\r\n      colUtteranceLongStandard: this._colUtteranceLongStandard,\r\n    });\r\n    this.applyWeight();\r\n  }\r\n  public set negativeSumStandard(negativeSumStandard: number) {\r\n    this._negativeSumStandard = negativeSumStandard;\r\n    this.applyRefutation({\r\n      utteranceObjectsForDrawing: this.utteranceObjectsForDrawing,\r\n      participantDict: this.participantDict,\r\n      similarityBlocks: this._similarityBlocks,\r\n      similarityBlockGroup: this._similarityBlockGroup,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n      negativeSumStandard: this._negativeSumStandard,\r\n      colUtteranceLongStandard: this._colUtteranceLongStandard,\r\n    });\r\n    this.applyWeight();\r\n  }\r\n  public set colUtteranceLongStandard(colUtteranceLongStandard: number) {\r\n    this._colUtteranceLongStandard = colUtteranceLongStandard;\r\n    this.applyRefutation({\r\n      utteranceObjectsForDrawing: this.utteranceObjectsForDrawing,\r\n      participantDict: this.participantDict,\r\n      similarityBlocks: this._similarityBlocks,\r\n      similarityBlockGroup: this._similarityBlockGroup,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n      negativeSumStandard: this._negativeSumStandard,\r\n      colUtteranceLongStandard: this._colUtteranceLongStandard,\r\n    });\r\n    this.applyWeight();\r\n  }\r\n\r\n  public set positiveSumStandard(positiveSumStandard: number) {\r\n    // this._positiveSumStandard = positiveSumStandard;\r\n    // this.applyRefutation({\r\n    //   utteranceObjectsForDrawing: this.utteranceObjectsForDrawing,\r\n    //   participantDict: this.participantDict,\r\n    //   similarityBlocks: this._similarityBlocks,\r\n    //   similarityBlockGroup: this._similarityBlockGroup,\r\n    //   sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n    //   negativeSumStandard: this._negativeSumStandard,\r\n    //   colUtteranceLongStandard: this._colUtteranceLongStandard,\r\n    // });\r\n    this.applyWeight();\r\n  }\r\n\r\n  public set hostWeight(hostWeight: number) {\r\n    this._hostWeight = hostWeight;\r\n    this.applyWeight();\r\n  }\r\n\r\n  public set hostLongStandard(hostLongStandard: number) {\r\n    this._hostLongStandard = hostLongStandard;\r\n    this.applyWeight();\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport {\r\n  makeParticipants,\r\n  Participant,\r\n  ParticipantDict,\r\n} from \"../../../common_functions/makeParticipants\";\r\nimport { DebateDataSet } from \"../../../interfaces/DebateDataInterface\";\r\nimport {\r\n  SimilarityBlock,\r\n  UtteranceIndexSentenceIndexTotalSentenceIndexDict,\r\n  UtteranceObjectForDrawing,\r\n} from \"../interfaces\";\r\nimport {\r\n  makeManualTGs,\r\n  getBasicIncomeManualSmallEGTitles,\r\n  getBasicIncomeManualMiddleEGTitles,\r\n  getBasicIncomeManualBigEGTitles,\r\n  getSatManualBigEGTitles,\r\n  getMilitaryManualBigEGTitles,\r\n} from \"./makeManualEGs\";\r\nimport UtteranceObjectsForDrawingManager from \"./UtteranceObjectsForDrawingManager\";\r\nimport { SimilarityBlockManager } from \"./SimilarityBlockManager\";\r\nimport { DebateName } from \"../DataImporter\";\r\n\r\nexport interface DataStructureSet {\r\n  // utteranceObjectsForDrawing: UtteranceObjectForDrawing[];\r\n  utteranceObjectsForDrawingManager: UtteranceObjectsForDrawingManager;\r\n  participants: Participant[];\r\n  participantDict: ParticipantDict;\r\n  // conceptSimilarityBlocks: SimilarityBlock[];\r\n  // conceptSimilarityMatrix: SimilarityBlock[][];\r\n  similarityBlockManager: SimilarityBlockManager;\r\n  maxSimilarityScore: number;\r\n  utteranceIndexSentenceIndexTotalSentenceIndexDict: UtteranceIndexSentenceIndexTotalSentenceIndexDict;\r\n}\r\nexport interface DataSetOfManualTGs {\r\n  manualSmallEGs: SimilarityBlock[][][];\r\n  manualMiddleEGs: SimilarityBlock[][][];\r\n  manualBigEGs: SimilarityBlock[][][];\r\n  manualSmallEGTitles: string[];\r\n  manualMiddleEGTitles: string[];\r\n  manualBigEGTitles: string[];\r\n}\r\nexport class DataStructureManager {\r\n  private _dataStructureSet: DataStructureSet;\r\n  private _datasetOfManualEGs: DataSetOfManualTGs;\r\n\r\n  constructor(debateName: DebateName, debateDataSet: DebateDataSet) {\r\n    const utteranceObjectsForDrawingManager = new UtteranceObjectsForDrawingManager(\r\n      debateDataSet.utteranceObjects\r\n    );\r\n    const utteranceObjectsForDrawing =\r\n      utteranceObjectsForDrawingManager.utteranceObjectsForDrawing;\r\n\r\n    // const utteranceObjectsForDrawing = makeUtteranceObjectsForDrawing(\r\n    //   debateDataSet.utteranceObjects\r\n    // );\r\n\r\n    const participants: Participant[] = makeParticipants(\r\n      debateName,\r\n      debateDataSet.utteranceObjects\r\n    );\r\n    const participantDict: ParticipantDict = _.keyBy(\r\n      participants,\r\n      (participant) => participant.name\r\n    );\r\n\r\n    const similarityBlockManager = new SimilarityBlockManager(\r\n      debateDataSet.conceptMatrixTransposed,\r\n      utteranceObjectsForDrawing,\r\n      debateDataSet.keytermObjects,\r\n      participantDict\r\n    );\r\n    const conceptSimilarityBlocks: SimilarityBlock[] =\r\n      similarityBlockManager.similarityBlocks;\r\n    const conceptSimilarityMatrix: SimilarityBlock[][] =\r\n      similarityBlockManager.similarityBlockGroup;\r\n\r\n    const maxSimilarityScore: number = _.maxBy(\r\n      conceptSimilarityBlocks,\r\n      (conceptSimilarityBlock) => conceptSimilarityBlock.similarity\r\n    )!.similarity;\r\n    // const maxSimilarityScore: number = parseInt(\r\n    //   _.maxBy(\r\n    //     conceptSimilarityBlocks,\r\n    //     (conceptSimilarityBlock) => conceptSimilarityBlock.similarityScore\r\n    //   )?.similarityScore.toFixed(0)!\r\n    // );\r\n\r\n    // make utterance_index => sentence_index => total_sentence_index\r\n    const utteranceIndexSentenceIndexTotalSentenceIndexDict: UtteranceIndexSentenceIndexTotalSentenceIndexDict = {};\r\n    let totalSentenceIndex: number = 0;\r\n    _.forEach(\r\n      debateDataSet.utteranceObjects,\r\n      (utteranceObject, utteranceIndex) => {\r\n        utteranceIndexSentenceIndexTotalSentenceIndexDict[utteranceIndex] = {};\r\n        _.forEach(\r\n          utteranceObject.sentenceObjects,\r\n          (sentenceObject, sentenceIndex) => {\r\n            utteranceIndexSentenceIndexTotalSentenceIndexDict[utteranceIndex][\r\n              sentenceIndex\r\n            ] = totalSentenceIndex;\r\n            totalSentenceIndex++;\r\n          }\r\n        );\r\n      }\r\n    );\r\n\r\n    // dataset of manual engagement groups\r\n    let manualSmallEGs: SimilarityBlock[][][] = [];\r\n    let manualMiddleEGs: SimilarityBlock[][][] = [];\r\n    let manualBigEGs: SimilarityBlock[][][] = [];\r\n    let manualSmallEGTitles: string[] = [];\r\n    let manualMiddleEGTitles: string[] = [];\r\n    let manualBigEGTitles: string[] = [];\r\n    if (debateName === \"기본소득\") {\r\n      manualSmallEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        0,\r\n        22,\r\n        47,\r\n        52,\r\n        68,\r\n        73,\r\n        79,\r\n        97,\r\n        132,\r\n        134,\r\n        177,\r\n        185,\r\n      ]);\r\n      manualMiddleEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        0,\r\n        22,\r\n        47,\r\n        69,\r\n        79,\r\n        97,\r\n        132,\r\n        134,\r\n        177,\r\n      ]);\r\n      manualBigEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        0,\r\n        22,\r\n        47,\r\n        69,\r\n        133,\r\n        177,\r\n      ]);\r\n      manualSmallEGTitles = getBasicIncomeManualSmallEGTitles();\r\n      manualMiddleEGTitles = getBasicIncomeManualMiddleEGTitles();\r\n      manualBigEGTitles = getBasicIncomeManualBigEGTitles();\r\n    } else if (debateName === \"기본소득clipped\") {\r\n      manualSmallEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        0,\r\n        22,\r\n        47,\r\n        52,\r\n        68,\r\n        73,\r\n        79,\r\n        97,\r\n      ]);\r\n      // manualMiddleEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n      //   0,\r\n      //   22,\r\n      //   47,\r\n      //   69,\r\n      //   79,\r\n      //   97,\r\n      //   132,\r\n      //   134,\r\n      //   177,\r\n      // ]);\r\n      // manualBigEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n      //   0,\r\n      //   22,\r\n      //   47,\r\n      //   69,\r\n      //   133,\r\n      //   177,\r\n      // ]);\r\n      manualSmallEGTitles = getBasicIncomeManualSmallEGTitles();\r\n      // manualMiddleEGTitles = getBasicIncomeManualMiddleEGTitles();\r\n      // manualBigEGTitles = getBasicIncomeManualBigEGTitles();\r\n    } else if (debateName === \"정시확대\") {\r\n      manualBigEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        0,\r\n        15,\r\n        35,\r\n        139,\r\n        159,\r\n        244,\r\n        293,\r\n        313,\r\n      ]);\r\n      manualBigEGTitles = getSatManualBigEGTitles();\r\n    } else if (debateName === \"모병제\") {\r\n      manualBigEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        0,\r\n        10,\r\n        15,\r\n        36,\r\n        57,\r\n        78,\r\n        93,\r\n        108,\r\n        138,\r\n        175,\r\n      ]);\r\n      manualBigEGTitles = getMilitaryManualBigEGTitles();\r\n    } else if (debateName === \"sample\") {\r\n      manualSmallEGs = makeManualTGs(conceptSimilarityMatrix, [0, 5]);\r\n    }\r\n\r\n    this._dataStructureSet = {\r\n      // utteranceObjectsForDrawing,\r\n      utteranceObjectsForDrawingManager,\r\n      participants,\r\n      participantDict,\r\n      // conceptSimilarityBlocks,\r\n      // conceptSimilarityMatrix,\r\n      similarityBlockManager,\r\n      maxSimilarityScore,\r\n      utteranceIndexSentenceIndexTotalSentenceIndexDict,\r\n    };\r\n    this._datasetOfManualEGs = {\r\n      manualSmallEGs,\r\n      manualMiddleEGs,\r\n      manualBigEGs,\r\n      manualSmallEGTitles,\r\n      manualMiddleEGTitles,\r\n      manualBigEGTitles,\r\n    };\r\n  }\r\n\r\n  public get dataStructureSet() {\r\n    return this._dataStructureSet;\r\n  }\r\n  public get datasetOfManualEGs() {\r\n    return this._datasetOfManualEGs;\r\n  }\r\n}\r\n","import * as math from \"mathjs\";\r\nimport { SentenceIndexLexicalChainsDict } from \"../../classes/LCseg/LCseg\";\r\nimport {\r\n  DebateDataSet,\r\n  EvaluationDataSet,\r\n  KeytermObject,\r\n  StopwordDict,\r\n  UtteranceObject,\r\n} from \"../../interfaces/DebateDataInterface\";\r\n\r\nexport type TermType = \"single_term\" | \"compound_term\";\r\nexport type DebateName =\r\n  | \"sample\"\r\n  | \"기본소득\"\r\n  | \"정시확대\"\r\n  | \"모병제\"\r\n  | \"기본소득clipped\"\r\n  | \"정시확대clipped\"\r\n  | \"모병제clipped\"\r\n  | \"집값\"\r\n  | \"정년연장\";\r\n\r\n/* eslint-disable no-unused-vars */\r\nexport default class DataImporter {\r\n  private _debateDataset: DebateDataSet | null = null;\r\n  private _evaluationDataSet: EvaluationDataSet | null = null;\r\n\r\n  public constructor(debateName: DebateName, termType: TermType) {\r\n    if (\r\n      debateName === \"sample\" ||\r\n      debateName === \"기본소득\" ||\r\n      debateName === \"정시확대\" ||\r\n      debateName === \"모병제\" ||\r\n      debateName === \"기본소득clipped\" ||\r\n      debateName === \"정시확대clipped\" ||\r\n      debateName === \"모병제clipped\"\r\n    ) {\r\n      const utteranceObjects: UtteranceObject[] = require(`../../data/${debateName}/utterance_objects.json`);\r\n      const stopwordDict: StopwordDict = require(`../../data/${debateName}/stopword_dict.json`);\r\n      const conceptMatrix: number[][] = require(`../../data/${debateName}/${termType}/concept_matrix.json`);\r\n      const conceptMatrixTransposed = math.transpose(conceptMatrix);\r\n      const keytermObjects: KeytermObject[] = require(`../../data/${debateName}/${termType}/keyterm_objects.json`);\r\n      const similarityMatrix: number[][] = require(`../../data/${debateName}/${termType}/similarity_matrix.json`);\r\n      const termList: string[] = require(`../../data/${debateName}/${termType}/term_list.json`);\r\n      const termUtteranceBooleanMatrix: number[][] = require(`../../data/${debateName}/${termType}/term_utterance_boolean_matrix.json`);\r\n      const termUtteranceBooleanMatrixTransposed = math.transpose(\r\n        termUtteranceBooleanMatrix\r\n      );\r\n      const frequencyVector: number[] = require(`../../data/${debateName}/${termType}/frequency_vector.json`);\r\n      const sentenceIndexLexicalChainsDict: SentenceIndexLexicalChainsDict = require(`../../data/${debateName}/${termType}/sentenceindex_lexicalchains_dict.json`);\r\n      // TODO we can change individual result.\r\n      // const sentenceIndexesForSegmentsOfPeople: number[] = require(`../../data/${debateName}/evaluation_results/merged_by_utterance_base.json`);\r\n      // const sentenceIndexesForSegmentsOfPeople: number[] = require(`../../data/${debateName}/evaluation_results/merged_by_sentence_base.json`);\r\n      const sentenceIndexesForSegmentsOfPeople: number[] = require(`../../data/${debateName}/evaluation_results/merged_by_close_sentence.json`);\r\n      // const sentenceIndexesForSegmentsOfPeople: number[] = require(`../../data/${debateName}/evaluation_results/junwoo.json`);\r\n\r\n      this._debateDataset = {\r\n        conceptMatrixTransposed,\r\n        keytermObjects,\r\n        similarityMatrix,\r\n        stopwordDict,\r\n        termList,\r\n        termUtteranceBooleanMatrixTransposed,\r\n        utteranceObjects,\r\n        frequencyVector,\r\n      };\r\n\r\n      this._evaluationDataSet = {\r\n        sentenceIndexLexicalChainsDict,\r\n        sentenceIndexesForSegmentsOfPeople,\r\n      };\r\n    }\r\n  }\r\n\r\n  public get debateDataSet() {\r\n    return this._debateDataset;\r\n  }\r\n\r\n  public get evaluationDataSet() {\r\n    return this._evaluationDataSet;\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport {\r\n  SentenceObject,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\nimport { make1EngagementGroup } from \"./make1EngagementGroup\";\r\n\r\nexport default class CombinedEGsMaker {\r\n  // TODO\r\n  // private readonly minEngagementGroupSize: number = 4;\r\n  private readonly minEngagementGroupSize: number = 1;\r\n  private _standardSemanticConsistency: number = 1000;\r\n  private _groupSimilaritiesWeight: number = 1;\r\n  private _lineSimilaritiesWeight: number = 0;\r\n  private _pointSimilaritiesWeight: number = 0;\r\n  private segmentCounting: number = 0;\r\n\r\n  constructor(\r\n    private readonly similarityBlockGroup: SimilarityBlock[][],\r\n    private readonly utteranceObjects: UtteranceObject[]\r\n  ) {\r\n    //\r\n  }\r\n\r\n  /**\r\n   * Maybe Depreacted\r\n   * @returns\r\n   */\r\n  public make(): SimilarityBlock[][][] {\r\n    // initiate engagementPoints\r\n    _.forEach(this.similarityBlockGroup, (rowSimilarityLine) => {\r\n      _.forEach(rowSimilarityLine, (similarityBlock) => {\r\n        similarityBlock.engagementPoint = false;\r\n      });\r\n    });\r\n\r\n    const engagementGroups = this.trySplit2EGs(\r\n      this.similarityBlockGroup,\r\n      this.minEngagementGroupSize,\r\n      this._standardSemanticConsistency\r\n    );\r\n    return engagementGroups;\r\n  }\r\n\r\n  /**\r\n   * Make topic segments by number_of_segments\r\n   * @param numOfSegments\r\n   * @returns\r\n   */\r\n  public makeByNumOfSegments(numOfSegments: number): SimilarityBlock[][][] {\r\n    // initiate engagementPoints\r\n    _.forEach(this.similarityBlockGroup, (rowSimilarityLine) => {\r\n      _.forEach(rowSimilarityLine, (similarityBlock) => {\r\n        similarityBlock.engagementPoint = false;\r\n      });\r\n    });\r\n\r\n    // while (segmentCounting < numOfSegments)\r\n    //   2 new zones to include (2 new topicGroups)\r\n    //   1 old zone to delete (1 old topicGroup)\r\n    //   existing zones (existing topicGroups)\r\n    //   make new zones (new topicGroups)\r\n    //   choose topic group from candidates\r\n    //     : return old zone(old topicGroup), new zones(new topicGroups)\r\n    //   segmentCounting++\r\n\r\n    let topicGroups: SimilarityBlock[][][] = [this.similarityBlockGroup];\r\n\r\n    while (topicGroups.length < numOfSegments) {\r\n      // choose topic group from candidates: return old zone, new zones\r\n      const choosedDataSet = findNew2TopicGroups.call(\r\n        this,\r\n        topicGroups,\r\n        this.minEngagementGroupSize\r\n      );\r\n\r\n      if (choosedDataSet !== null) {\r\n        // make new topicGroups\r\n        topicGroups = _.chain(topicGroups)\r\n          .filter((topicGroup) => topicGroup !== choosedDataSet.oldTopicGroup)\r\n          .concat(choosedDataSet.new2TopicGroups)\r\n          .value();\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return topicGroups;\r\n\r\n    function findNew2TopicGroups(\r\n      this: CombinedEGsMaker,\r\n      topicGroups: SimilarityBlock[][][],\r\n      minEngagementGroupSize: number\r\n    ) {\r\n      const topicGroupsCandidatesOfEachTop: SimilarityBlock[][][][] = [];\r\n      const semanticConsistenciesOfEachTop: number[] = [];\r\n\r\n      _.forEach(topicGroups, (topicGroup) => {\r\n        const dataSetOfTopicGroupCandidates = getDataSetOfTopicGroupCandidates.call(\r\n          this,\r\n          topicGroup,\r\n          minEngagementGroupSize\r\n        );\r\n\r\n        // find top topicGroupsCandidate & semanticConsistency\r\n        const dataSetOfTopTopicGroupsCandidate = findTopTopicGroupsCandidate(\r\n          dataSetOfTopicGroupCandidates.topicGroupsCandidates,\r\n          dataSetOfTopicGroupCandidates.semanticConsistencies\r\n        );\r\n\r\n        if (dataSetOfTopTopicGroupsCandidate) {\r\n          topicGroupsCandidatesOfEachTop.push(\r\n            dataSetOfTopTopicGroupsCandidate.topicGroups\r\n          );\r\n          semanticConsistenciesOfEachTop.push(\r\n            dataSetOfTopTopicGroupsCandidate.semanticConsistency\r\n          );\r\n        } else {\r\n          topicGroupsCandidatesOfEachTop.push([]);\r\n          semanticConsistenciesOfEachTop.push(0);\r\n        }\r\n      });\r\n\r\n      // find topicGroup from topicGroupsCandidatesOfEachTop\r\n      if (semanticConsistenciesOfEachTop.length !== 0) {\r\n        const maxValue = _.max(semanticConsistenciesOfEachTop);\r\n        const indexOfMax = _.indexOf(semanticConsistenciesOfEachTop, maxValue);\r\n        const new2TopicGroups = topicGroupsCandidatesOfEachTop[indexOfMax];\r\n        const oldTopicGroup: SimilarityBlock[][] = topicGroups[indexOfMax];\r\n\r\n        return {\r\n          oldTopicGroup,\r\n          new2TopicGroups,\r\n        };\r\n      } else {\r\n        return null;\r\n      }\r\n\r\n      function getDataSetOfTopicGroupCandidates(\r\n        this: CombinedEGsMaker,\r\n        topicGroup: SimilarityBlock[][],\r\n        minEngagementGroupSize: number\r\n      ) {\r\n        const topicGroupsCandidates: SimilarityBlock[][][][] = [];\r\n        const semanticConsistencies: number[] = [];\r\n\r\n        const lastRowBlocks = topicGroup[topicGroup.length - 1];\r\n        for (\r\n          let i = minEngagementGroupSize;\r\n          i < lastRowBlocks.length - minEngagementGroupSize;\r\n          i++\r\n        ) {\r\n          // for each point, calculate semantic consistency of 2EGs\r\n          const engagementGroup1 = make1EngagementGroup(topicGroup, 0, i + 1);\r\n          const engagementGroup2 = make1EngagementGroup(\r\n            topicGroup,\r\n            i + 1,\r\n            topicGroup.length\r\n          );\r\n\r\n          // Calulate with Together => Good Splits\r\n          const scOfEG1 = this.getSumOfSimilarities({\r\n            similarityBlockGroup: engagementGroup1,\r\n            utteranceObjects: this.utteranceObjects,\r\n            groupSimilaritiesWeight: this._groupSimilaritiesWeight,\r\n            borderSimilaritiesWeight: this._lineSimilaritiesWeight,\r\n            pointSimilaritiesWeight: this._pointSimilaritiesWeight,\r\n          });\r\n          const scOfEG2 = this.getSumOfSimilarities({\r\n            similarityBlockGroup: engagementGroup2,\r\n            utteranceObjects: this.utteranceObjects,\r\n            groupSimilaritiesWeight: this._groupSimilaritiesWeight,\r\n            borderSimilaritiesWeight: this._lineSimilaritiesWeight,\r\n            pointSimilaritiesWeight: this._pointSimilaritiesWeight,\r\n          });\r\n          // const semanticConsistency =\r\n          //   ((scOfEG1 + scOfEG2) /\r\n          //     ((engagementGroup1.length * (engagementGroup1.length + 1) / 2) +\r\n          //       (engagementGroup2.length * (engagementGroup2.length + 1)) / 2)) *\r\n          //   ((topicGroup.length * (topicGroup.length + 1)) / 2);\r\n          let semanticConsistency =\r\n            ((scOfEG1 + scOfEG2) /\r\n              (this.getNumberOfSimilartyBlocks(\r\n                engagementGroup1,\r\n                this._groupSimilaritiesWeight,\r\n                this._lineSimilaritiesWeight,\r\n                this._pointSimilaritiesWeight\r\n              ) +\r\n                this.getNumberOfSimilartyBlocks(\r\n                  engagementGroup2,\r\n                  this._groupSimilaritiesWeight,\r\n                  this._lineSimilaritiesWeight,\r\n                  this._pointSimilaritiesWeight\r\n                ))) *\r\n            this.getNumberOfSimilartyBlocks(\r\n              topicGroup,\r\n              this._groupSimilaritiesWeight,\r\n              this._lineSimilaritiesWeight,\r\n              this._pointSimilaritiesWeight\r\n            );\r\n\r\n          // for exception\r\n          if (\r\n            this._groupSimilaritiesWeight === 0 &&\r\n            this._lineSimilaritiesWeight === 0 &&\r\n            this._pointSimilaritiesWeight > 0\r\n          ) {\r\n            semanticConsistency *=\r\n              (topicGroup.length * (topicGroup.length + 1)) / 2;\r\n          }\r\n\r\n          if (!isNaN(semanticConsistency)) {\r\n            topicGroupsCandidates.push([engagementGroup1, engagementGroup2]);\r\n            semanticConsistencies.push(semanticConsistency);\r\n          }\r\n        }\r\n\r\n        return { topicGroupsCandidates, semanticConsistencies };\r\n      }\r\n\r\n      function findTopTopicGroupsCandidate(\r\n        topicGroupsCandidates: SimilarityBlock[][][][],\r\n        semanticConsistencies: number[]\r\n      ) {\r\n        const maxSemanticConsistency = _.max(semanticConsistencies);\r\n        if (maxSemanticConsistency) {\r\n          const indexOfMax = _.indexOf(\r\n            semanticConsistencies,\r\n            maxSemanticConsistency\r\n          );\r\n\r\n          const topTopicGroups = topicGroupsCandidates[indexOfMax];\r\n          return {\r\n            topicGroups: topTopicGroups,\r\n            semanticConsistency: maxSemanticConsistency,\r\n          };\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private trySplit2EGs(\r\n    egCandidate: SimilarityBlock[][],\r\n    minEngagementGroupSize: number,\r\n    standardSemanticConsistency: number\r\n  ): SimilarityBlock[][][] {\r\n    // mark engagement_point\r\n    const engagementPoint = egCandidate[egCandidate.length - 1][0];\r\n    engagementPoint.engagementPoint = true;\r\n\r\n    const engagementGroupsCandidates: SimilarityBlock[][][][] = [];\r\n    const semanticConsistencies: number[] = [];\r\n\r\n    const lastRowBlocks = egCandidate[egCandidate.length - 1];\r\n    for (\r\n      let i = minEngagementGroupSize;\r\n      i < lastRowBlocks.length - minEngagementGroupSize;\r\n      i++\r\n    ) {\r\n      // for each point, calculate semantic consistency of 2EGs\r\n      const engagementGroup1 = make1EngagementGroup(egCandidate, 0, i + 1);\r\n      const engagementGroup2 = make1EngagementGroup(\r\n        egCandidate,\r\n        i + 1,\r\n        egCandidate.length\r\n      );\r\n\r\n      // Calulate with Together => Good Splits\r\n      const scOfEG1 = this.getSumOfSimilarities({\r\n        similarityBlockGroup: engagementGroup1,\r\n        utteranceObjects: this.utteranceObjects,\r\n        groupSimilaritiesWeight: this._groupSimilaritiesWeight,\r\n        borderSimilaritiesWeight: this._lineSimilaritiesWeight,\r\n        pointSimilaritiesWeight: this._pointSimilaritiesWeight,\r\n      });\r\n      const scOfEG2 = this.getSumOfSimilarities({\r\n        similarityBlockGroup: engagementGroup2,\r\n        utteranceObjects: this.utteranceObjects,\r\n        groupSimilaritiesWeight: this._groupSimilaritiesWeight,\r\n        borderSimilaritiesWeight: this._lineSimilaritiesWeight,\r\n        pointSimilaritiesWeight: this._pointSimilaritiesWeight,\r\n      });\r\n      // const semanticConsistency =\r\n      //   ((scOfEG1 + scOfEG2) /\r\n      //     ((engagementGroup1.length * (engagementGroup1.length + 1) / 2) +\r\n      //       (engagementGroup2.length * (engagementGroup2.length + 1)) / 2)) *\r\n      //   ((egCandidate.length * (egCandidate.length + 1)) / 2);\r\n      let semanticConsistency =\r\n        ((scOfEG1 + scOfEG2) /\r\n          (this.getNumberOfSimilartyBlocks(\r\n            engagementGroup1,\r\n            this._groupSimilaritiesWeight,\r\n            this._lineSimilaritiesWeight,\r\n            this._pointSimilaritiesWeight\r\n          ) +\r\n            this.getNumberOfSimilartyBlocks(\r\n              engagementGroup2,\r\n              this._groupSimilaritiesWeight,\r\n              this._lineSimilaritiesWeight,\r\n              this._pointSimilaritiesWeight\r\n            ))) *\r\n        this.getNumberOfSimilartyBlocks(\r\n          egCandidate,\r\n          this._groupSimilaritiesWeight,\r\n          this._lineSimilaritiesWeight,\r\n          this._pointSimilaritiesWeight\r\n        );\r\n\r\n      // for exception\r\n      if (\r\n        this._groupSimilaritiesWeight === 0 &&\r\n        this._lineSimilaritiesWeight === 0 &&\r\n        this._pointSimilaritiesWeight > 0\r\n      ) {\r\n        semanticConsistency *=\r\n          (egCandidate.length * (egCandidate.length + 1)) / 2;\r\n      }\r\n\r\n      if (semanticConsistency >= standardSemanticConsistency) {\r\n        engagementGroupsCandidates.push([engagementGroup1, engagementGroup2]);\r\n        semanticConsistencies.push(semanticConsistency);\r\n      }\r\n    }\r\n\r\n    let engagementGroups: SimilarityBlock[][][];\r\n    if (semanticConsistencies.length !== 0) {\r\n      const maxValue = _.max(semanticConsistencies);\r\n      const indexOfMax = _.indexOf(semanticConsistencies, maxValue);\r\n      const engagementGroupsCandidate = engagementGroupsCandidates[indexOfMax];\r\n\r\n      const splittdEGs1 = this.trySplit2EGs(\r\n        engagementGroupsCandidate[0],\r\n        this.minEngagementGroupSize,\r\n        standardSemanticConsistency\r\n      );\r\n      const splittdEGs2 = this.trySplit2EGs(\r\n        engagementGroupsCandidate[1],\r\n        this.minEngagementGroupSize,\r\n        standardSemanticConsistency\r\n      );\r\n      engagementGroups = _.concat(splittdEGs1, splittdEGs2);\r\n    } else {\r\n      engagementGroups = [egCandidate];\r\n    }\r\n\r\n    return engagementGroups;\r\n  }\r\n\r\n  private trySplit2Groups(\r\n    egCandidate: SimilarityBlock[][],\r\n    minEngagementGroupSize: number,\r\n    numOfSegments: number\r\n  ): SimilarityBlock[][][] {\r\n    // mark engagement_point\r\n    const engagementPoint = egCandidate[egCandidate.length - 1][0];\r\n    engagementPoint.engagementPoint = true;\r\n\r\n    const engagementGroupsCandidates: SimilarityBlock[][][][] = [];\r\n    const semanticConsistencies: number[] = [];\r\n\r\n    const lastRowBlocks = egCandidate[egCandidate.length - 1];\r\n    for (\r\n      let i = minEngagementGroupSize;\r\n      i < lastRowBlocks.length - minEngagementGroupSize;\r\n      i++\r\n    ) {\r\n      // for each point, calculate semantic consistency of 2EGs\r\n      const engagementGroup1 = make1EngagementGroup(egCandidate, 0, i + 1);\r\n      const engagementGroup2 = make1EngagementGroup(\r\n        egCandidate,\r\n        i + 1,\r\n        egCandidate.length\r\n      );\r\n\r\n      // Calulate with Together => Good Splits\r\n      const scOfEG1 = this.getSumOfSimilarities({\r\n        similarityBlockGroup: engagementGroup1,\r\n        utteranceObjects: this.utteranceObjects,\r\n        groupSimilaritiesWeight: this._groupSimilaritiesWeight,\r\n        borderSimilaritiesWeight: this._lineSimilaritiesWeight,\r\n        pointSimilaritiesWeight: this._pointSimilaritiesWeight,\r\n      });\r\n      const scOfEG2 = this.getSumOfSimilarities({\r\n        similarityBlockGroup: engagementGroup2,\r\n        utteranceObjects: this.utteranceObjects,\r\n        groupSimilaritiesWeight: this._groupSimilaritiesWeight,\r\n        borderSimilaritiesWeight: this._lineSimilaritiesWeight,\r\n        pointSimilaritiesWeight: this._pointSimilaritiesWeight,\r\n      });\r\n      // const semanticConsistency =\r\n      //   ((scOfEG1 + scOfEG2) /\r\n      //     ((engagementGroup1.length * (engagementGroup1.length + 1) / 2) +\r\n      //       (engagementGroup2.length * (engagementGroup2.length + 1)) / 2)) *\r\n      //   ((egCandidate.length * (egCandidate.length + 1)) / 2);\r\n      let semanticConsistency =\r\n        ((scOfEG1 + scOfEG2) /\r\n          (this.getNumberOfSimilartyBlocks(\r\n            engagementGroup1,\r\n            this._groupSimilaritiesWeight,\r\n            this._lineSimilaritiesWeight,\r\n            this._pointSimilaritiesWeight\r\n          ) +\r\n            this.getNumberOfSimilartyBlocks(\r\n              engagementGroup2,\r\n              this._groupSimilaritiesWeight,\r\n              this._lineSimilaritiesWeight,\r\n              this._pointSimilaritiesWeight\r\n            ))) *\r\n        this.getNumberOfSimilartyBlocks(\r\n          egCandidate,\r\n          this._groupSimilaritiesWeight,\r\n          this._lineSimilaritiesWeight,\r\n          this._pointSimilaritiesWeight\r\n        );\r\n\r\n      // for exception\r\n      if (\r\n        this._groupSimilaritiesWeight === 0 &&\r\n        this._lineSimilaritiesWeight === 0 &&\r\n        this._pointSimilaritiesWeight > 0\r\n      ) {\r\n        semanticConsistency *=\r\n          (egCandidate.length * (egCandidate.length + 1)) / 2;\r\n      }\r\n\r\n      // if (semanticConsistency >= standardSemanticConsistency) {\r\n      engagementGroupsCandidates.push([engagementGroup1, engagementGroup2]);\r\n      semanticConsistencies.push(semanticConsistency);\r\n      // }\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  private getSumOfSimilarities(p: {\r\n    similarityBlockGroup: SimilarityBlock[][];\r\n    utteranceObjects: UtteranceObject[];\r\n    groupSimilaritiesWeight: number;\r\n    borderSimilaritiesWeight: number;\r\n    pointSimilaritiesWeight: number;\r\n  }): number {\r\n    let sum: number = 0;\r\n\r\n    _.forEach(p.similarityBlockGroup, (rowSimilarityBlocks, rowIndex) => {\r\n      _.forEach(rowSimilarityBlocks, (similarityBlock, colIndex) => {\r\n        let groupLinePointWeight: number = 0;\r\n\r\n        // group\r\n        groupLinePointWeight += p.groupSimilaritiesWeight;\r\n\r\n        // line\r\n        if (rowIndex === p.similarityBlockGroup.length - 1 || colIndex === 0) {\r\n          groupLinePointWeight += p.borderSimilaritiesWeight;\r\n        }\r\n\r\n        // point\r\n        if (rowIndex === p.similarityBlockGroup.length - 1 && colIndex === 0) {\r\n          groupLinePointWeight += p.pointSimilaritiesWeight;\r\n        }\r\n\r\n        sum +=\r\n          groupLinePointWeight *\r\n          similarityBlock.weight *\r\n          similarityBlock.similarity;\r\n      });\r\n    });\r\n\r\n    return sum;\r\n  }\r\n\r\n  private getNumberOfSimilartyBlocks(\r\n    similarityBlockGroup: SimilarityBlock[][],\r\n    groupSimilaritiesWeight: number,\r\n    borderSimilaritiesWeight: number,\r\n    pointSimilaritiesWeight: number\r\n  ): number {\r\n    // group\r\n    const numberOfGroupSimilarityBlocks: number =\r\n      groupSimilaritiesWeight *\r\n      ((similarityBlockGroup.length * (similarityBlockGroup.length + 1)) / 2);\r\n\r\n    // line\r\n    const numberOfLineSimilarityBlocks: number =\r\n      borderSimilaritiesWeight * (2 * similarityBlockGroup.length - 1);\r\n\r\n    // point\r\n    const numberOfPointSimilarityBlocks: number = pointSimilaritiesWeight * 1;\r\n\r\n    return (\r\n      numberOfGroupSimilarityBlocks +\r\n      numberOfLineSimilarityBlocks +\r\n      numberOfPointSimilarityBlocks\r\n    );\r\n  }\r\n\r\n  public set standardSemanticConsistency(standardSemanticConsistency: number) {\r\n    this._standardSemanticConsistency = standardSemanticConsistency;\r\n  }\r\n  public set groupSimilaritiesWeight(groupSimilaritiesWeight: number) {\r\n    this._groupSimilaritiesWeight = groupSimilaritiesWeight;\r\n  }\r\n  public set lineSimilaritiesWeight(lineSimilaritiesWeight: number) {\r\n    this._lineSimilaritiesWeight = lineSimilaritiesWeight;\r\n  }\r\n  public set pointSimilaritiesWeight(pointSimilaritiesWeight: number) {\r\n    this._pointSimilaritiesWeight = pointSimilaritiesWeight;\r\n  }\r\n  public set borderSimilaritiesWeight(borderSimilaritiesWeight: number) {\r\n    this._lineSimilaritiesWeight = borderSimilaritiesWeight;\r\n  }\r\n}\r\n","/**\r\n * Tooltip for Participant Rect\r\n */\r\n\r\n/* eslint-disable no-unused-vars */\r\nimport { Popover, Tooltip } from \"antd\";\r\nimport { PopoverProps } from \"antd/lib/popover\";\r\nimport _ from \"lodash\";\r\nimport { transform } from \"lodash\";\r\nimport React, { useEffect, useState, Ref } from \"react\";\r\nimport { findTopValueIndexes } from \"../../common_functions/findTopValueIndexes\";\r\nimport { DebateDataSet } from \"../../interfaces/DebateDataInterface\";\r\nimport { D3Drawer } from \"../../views/ConceptualRecurrencePlot/Drawers/D3Drawer\";\r\nimport { UtteranceObjectForDrawing } from \"../../views/ConceptualRecurrencePlot/interfaces\";\r\nimport styles from \"./ParticipantTooltip.module.scss\";\r\n\r\nexport interface SvgTooltipRef {}\r\n\r\ninterface ComponentProps {\r\n  utteranceObjectForDrawing: UtteranceObjectForDrawing | null;\r\n  // mouseoveredUtteranceIndex: number;\r\n  transform: d3.ZoomTransform | null;\r\n  visible: boolean;\r\n  d3Drawer: D3Drawer | null;\r\n  debateDataset: DebateDataSet | null;\r\n}\r\n\r\nfunction ParticipantTooltip(props: ComponentProps, ref: Ref<SvgTooltipRef>) {\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n  useEffect(() => {\r\n    setVisible(props.visible);\r\n  }, [props.visible]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        transform: props.transform\r\n          ? `translate(${props.transform.x}px, ${props.transform.y}px) scale(${props.transform.k})`\r\n          : \"\",\r\n      }}\r\n    >\r\n      <Popover\r\n        title={() => {\r\n          if (props.debateDataset && props.utteranceObjectForDrawing) {\r\n            const i = _.findIndex(\r\n              props.debateDataset.utteranceObjects,\r\n              (utteranceObject) =>\r\n                utteranceObject.utterance ===\r\n                props.utteranceObjectForDrawing!.utterance\r\n            );\r\n\r\n            const conceptVectorOfUtterance =\r\n              props.debateDataset.conceptMatrixTransposed[i];\r\n\r\n            const numOfMainKeyterms = 3;\r\n            const topValueIndexes = findTopValueIndexes(\r\n              conceptVectorOfUtterance,\r\n              numOfMainKeyterms\r\n            );\r\n            const mainKeytermObjects = _.map(\r\n              topValueIndexes,\r\n              (topValueIndex) =>\r\n                props.debateDataset!.keytermObjects[topValueIndex]\r\n            );\r\n\r\n            let mainKeytermsString: string = \"\"; //툴팁 주요 용어\r\n            if (mainKeytermObjects.length <= numOfMainKeyterms) {\r\n              mainKeytermsString = _.reduce(\r\n                mainKeytermObjects,\r\n                (result, keytermObject) => {\r\n                  return `${result} ${keytermObject.name}`;\r\n                },\r\n                \"\"\r\n              );\r\n            }\r\n            console.log(mainKeytermsString);\r\n            return `${props.utteranceObjectForDrawing.name}  [${mainKeytermsString} ]`;\r\n          } else {\r\n            return \"\";\r\n          }\r\n        }}\r\n        content={\r\n          props.utteranceObjectForDrawing\r\n            ? props.utteranceObjectForDrawing.utterance\r\n            : \"\"\r\n        }\r\n        // trigger=\"click\"\r\n        visible={visible}\r\n        onVisibleChange={handleVisibleChange}\r\n        overlayClassName={styles.popover}\r\n      >\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: getPosition(props.utteranceObjectForDrawing),\r\n            top: getPosition(props.utteranceObjectForDrawing),\r\n            width: getWidth(props.utteranceObjectForDrawing),\r\n            height: getWidth(props.utteranceObjectForDrawing),\r\n            // backgroundColor: \"yellow\",\r\n          }}\r\n          onClick={(mouseEvent) => {\r\n            if (props.d3Drawer && props.utteranceObjectForDrawing) {\r\n              props.d3Drawer.participantBlocksDrawer.click(\r\n                mouseEvent,\r\n                props.utteranceObjectForDrawing\r\n              );\r\n            }\r\n          }}\r\n        ></div>\r\n      </Popover>\r\n    </div>\r\n  );\r\n\r\n  function getPosition(\r\n    utteranceObjectForDrawing: UtteranceObjectForDrawing | null\r\n  ) {\r\n    let position: number = 0;\r\n    if (utteranceObjectForDrawing) {\r\n      position = utteranceObjectForDrawing.beginningPointOfXY;\r\n    }\r\n    return position;\r\n  }\r\n\r\n  function getWidth(\r\n    utteranceObjectForDrawing: UtteranceObjectForDrawing | null\r\n  ) {\r\n    let width: number = 0;\r\n    if (utteranceObjectForDrawing) {\r\n      width = utteranceObjectForDrawing.width;\r\n    }\r\n    return width;\r\n  }\r\n\r\n  function handleVisibleChange(visible: boolean) {\r\n    setVisible(visible);\r\n  }\r\n}\r\n\r\nexport default ParticipantTooltip;\r\n","import style from \"./Header.module.scss\";\r\nimport React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <a className={style.mainLink}>\r\n      <div className={style.navi}>DebateVis</div>\r\n    </a>\r\n  );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./ConceptualRecurrencePlot.scss\";\r\nimport _ from \"lodash\";\r\n\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"./interfaces\";\r\nimport { makeEngagementGroups } from \"./DataStructureMaker/makeEngagementGroups\";\r\nimport { D3Drawer } from \"./Drawers/D3Drawer\";\r\nimport ConceptualMapModal, {\r\n  ConceptualMapModalRef,\r\n} from \"./ConceptualMapModal/ConceptualMapModal\";\r\nimport Controllers from \"./Controllers/Controllers\";\r\nimport store from \"../../redux/store\";\r\nimport { groupEGsMaker } from \"./DataStructureMaker/GroupEGsMaker\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport TranscriptViewer from \"./TranscriptViewer/TranscriptViewer\";\r\nimport { CombinedState } from \"redux\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StandardSimilarityScoreState } from \"../../redux/reducers/standardSimilarityScoreReducer\";\r\nimport {\r\n  DebateDataSet,\r\n  EvaluationDataSet,\r\n} from \"../../interfaces/DebateDataInterface\";\r\nimport { DataStructureManager } from \"./DataStructureMaker/DataStructureManager\";\r\nimport DataImporter, { DebateName, TermType } from \"./DataImporter\";\r\nimport { CHANGE_STANDARD_SIMILARITY_SCORE } from \"../../redux/actionTypes\";\r\nimport CombinedEGsMaker from \"./DataStructureMaker/CombinedEGsMaker\";\r\nimport { extractKeytermsFromEngagementGroup } from \"./DataStructureMaker/extractTermsFromEngagementGroup\";\r\nimport ParticipantTooltip from \"../../components/ParticipantTooltip/ParticipantTooltip\";\r\nimport Header from \"./../Header/Header\";\r\nimport style from \"./rootStyle.module.scss\";\r\n\r\nfunction ConceptualRecurrencePlot() {\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const debateNameOfQuery = query.get(\"debate_name\") as DebateName;\r\n  const termTypeOfQuery = query.get(\"term_type\") as TermType;\r\n\r\n  const [debateDataset, setDebateDataset] = useState<DebateDataSet | null>(\r\n    null\r\n  );\r\n  const [\r\n    dataStructureManager,\r\n    setDataStructureManager,\r\n  ] = useState<DataStructureManager | null>(null);\r\n  const [\r\n    evaluationDataSet,\r\n    setEvaluationDataSet,\r\n  ] = useState<EvaluationDataSet | null>(null);\r\n\r\n  const [\r\n    combinedEGsMaker,\r\n    setCombinedEGsMaker,\r\n  ] = useState<CombinedEGsMaker | null>(null);\r\n  const [d3Drawer, setD3Drawer] = useState<D3Drawer | null>(null);\r\n  const conceptualMapModalRef = React.useRef<ConceptualMapModalRef>(null);\r\n\r\n  const standardSimilarityScore = useSelector<\r\n    CombinedState<{\r\n      standardSimilarityScoreReducer: StandardSimilarityScoreState;\r\n    }>,\r\n    number\r\n  >((state) => state.standardSimilarityScoreReducer.standardSimilarityScore);\r\n  const dispatch = useDispatch();\r\n\r\n  // variables for tooltip\r\n  const [\r\n    mouseoveredUtterance,\r\n    setMouseoveredUtterance,\r\n  ] = useState<UtteranceObjectForDrawing | null>(null);\r\n  const [transform, setTransform] = useState<d3.ZoomTransform | null>(null);\r\n  const [tooltipVisible, setTooltipVisible] = useState<boolean>(false);\r\n\r\n  // Import Debate Data\r\n  useEffect(() => {\r\n    if (!dataStructureManager) {\r\n      if (\r\n        debateNameOfQuery === \"sample\" ||\r\n        debateNameOfQuery === \"기본소득\" ||\r\n        debateNameOfQuery === \"정시확대\" ||\r\n        debateNameOfQuery === \"모병제\" ||\r\n        debateNameOfQuery === \"기본소득clipped\" ||\r\n        debateNameOfQuery === \"정시확대clipped\" ||\r\n        debateNameOfQuery === \"모병제clipped\"\r\n      ) {\r\n        // const debateDataset = new DataImporter(\r\n        //   debateNameOfQuery,\r\n        //   termTypeOfQuery\r\n        // ).debateDataSet as DebateDataSet;\r\n        const dataImporter = new DataImporter(\r\n          debateNameOfQuery,\r\n          termTypeOfQuery\r\n        );\r\n\r\n        const dataStructureMaker = new DataStructureManager(\r\n          debateNameOfQuery,\r\n          dataImporter.debateDataSet!\r\n        );\r\n\r\n        console.log(\"dataImporter\", dataImporter);\r\n        console.log(\"dataStructureMaker\", dataStructureMaker);\r\n\r\n        const combinedEGsMaker = new CombinedEGsMaker(\r\n          dataStructureMaker.dataStructureSet.similarityBlockManager.similarityBlockGroup,\r\n          dataImporter.debateDataSet!.utteranceObjects\r\n        );\r\n\r\n        dispatch({\r\n          type: CHANGE_STANDARD_SIMILARITY_SCORE,\r\n          payload: {\r\n            standardSimilarityScore:\r\n              dataStructureMaker.dataStructureSet.maxSimilarityScore,\r\n          },\r\n        });\r\n\r\n        setDebateDataset(dataImporter.debateDataSet);\r\n        setDataStructureManager(dataStructureMaker);\r\n        setCombinedEGsMaker(combinedEGsMaker);\r\n        setEvaluationDataSet(dataImporter.evaluationDataSet);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (dataStructureManager && debateDataset) {\r\n      const dataStructureSet = dataStructureManager.dataStructureSet;\r\n      const datasetOfManualEGs = dataStructureManager.datasetOfManualEGs;\r\n      const conceptSimilarityBlocks =\r\n        dataStructureSet.similarityBlockManager.similarityBlocks;\r\n      const conceptSimilarityMatrix =\r\n        dataStructureSet.similarityBlockManager.similarityBlockGroup;\r\n      const manualBigEGs = datasetOfManualEGs.manualBigEGs;\r\n      const manualBigEGTitles = datasetOfManualEGs.manualBigEGTitles;\r\n      const manualMiddleEGs = datasetOfManualEGs.manualMiddleEGs;\r\n      const manualMiddleEGTitles = datasetOfManualEGs.manualMiddleEGTitles;\r\n      const manualSmallEGs = datasetOfManualEGs.manualSmallEGs;\r\n      const manualSmallEGTitles = datasetOfManualEGs.manualSmallEGTitles;\r\n      const maxSimilarityScore = dataStructureSet.maxSimilarityScore;\r\n      const topicGroups = combinedEGsMaker!.makeByNumOfSegments(4);\r\n\r\n      // settings of d3Drawer\r\n      const d3Drawer = new D3Drawer(\r\n        debateDataset,\r\n        dataStructureSet,\r\n        termTypeOfQuery\r\n      );\r\n\r\n      d3Drawer.zoomListener = (transform) => {\r\n        setTransform(transform);\r\n      };\r\n      d3Drawer.participantBlocksDrawer.mouseoverListener = (\r\n        mouseEvent,\r\n        utteranceObjectForDrawing\r\n      ) => {\r\n        // console.log(\"mouseEvent\", tooltipDatum);\r\n        // setTooltipDatum({\r\n        //   utteranceObjectForDrawing,\r\n        //   transform: tooltipDatum.transform,\r\n        //   visible: true,\r\n        // });\r\n\r\n        setMouseoveredUtterance(utteranceObjectForDrawing);\r\n        setTooltipVisible(true);\r\n      };\r\n      d3Drawer.participantBlocksDrawer.mouseoutLisener = () => {\r\n        // setTooltipDatum({\r\n        //   ...tooltipDatum,\r\n        //   visible: false,\r\n        // });\r\n      };\r\n\r\n      // Engagement Group Drawer's Settings\r\n      d3Drawer.topicGroupsDrawer.topicGroups = topicGroups;\r\n      d3Drawer.topicGroupsDrawer.onTitleClicked = (\r\n        mouseEvent: MouseEvent,\r\n        engagementGroup: SimilarityBlock[][],\r\n        engagementGroupIndex: number\r\n      ) => {\r\n        // conceptualMapModalRef.current?.openModal(\r\n        //   `Engagement Group ${engagementGroupIndex}`,\r\n        //   engagementGroup\r\n        // );\r\n        const extractedKeytermObjects = extractKeytermsFromEngagementGroup(\r\n          engagementGroup,\r\n          debateDataset.conceptMatrixTransposed,\r\n          debateDataset.keytermObjects,\r\n          10\r\n        );\r\n\r\n        conceptualMapModalRef.current?.openModal(\r\n          `${_.map(extractedKeytermObjects, (o) => o.name)}`,\r\n          engagementGroup\r\n        );\r\n      };\r\n      d3Drawer.topicGroupsDrawer.visible = true;\r\n\r\n      // Manual Small Engagement Group Drawer's Settings\r\n      d3Drawer.manualSmallTGsDrawer.topicGroups = manualSmallEGs;\r\n      d3Drawer.manualSmallTGsDrawer.topicGroupTitles = manualSmallEGTitles;\r\n      d3Drawer.manualSmallTGsDrawer.onTitleClicked = (\r\n        mouseEvent: MouseEvent,\r\n        engagementGroup: SimilarityBlock[][],\r\n        engagementGroupIndex: number\r\n      ) => {\r\n        conceptualMapModalRef.current?.openModal(\r\n          `Manual Small Engagement Group ${engagementGroupIndex}`,\r\n          engagementGroup\r\n        );\r\n      };\r\n      d3Drawer.manualSmallTGsDrawer.visible = false;\r\n\r\n      // Manual Middle Engagement Group Drawer's Settings\r\n      d3Drawer.manualMiddleTGsDrawer.topicGroups = manualMiddleEGs;\r\n      d3Drawer.manualMiddleTGsDrawer.topicGroupTitles = manualMiddleEGTitles;\r\n      d3Drawer.manualMiddleTGsDrawer.onTitleClicked = (\r\n        mouseEvent: MouseEvent,\r\n        engagementGroup: SimilarityBlock[][],\r\n        engagementGroupIndex: number\r\n      ) => {\r\n        conceptualMapModalRef.current?.openModal(\r\n          `Manual Middle Engagement Group ${engagementGroupIndex}`,\r\n          engagementGroup\r\n        );\r\n      };\r\n      d3Drawer.manualMiddleTGsDrawer.visible = false;\r\n\r\n      // Manual Big Engagement Group Drawer's Settings\r\n      d3Drawer.manualBigTGsDrawer.topicGroups = manualBigEGs;\r\n      d3Drawer.manualBigTGsDrawer.topicGroupTitles = manualBigEGTitles;\r\n      d3Drawer.manualBigTGsDrawer.onTitleClicked = (\r\n        mouseEvent: MouseEvent,\r\n        engagementGroup: SimilarityBlock[][],\r\n        engagementGroupIndex: number\r\n      ) => {\r\n        conceptualMapModalRef.current?.openModal(\r\n          `Manual Big Engagement Group ${engagementGroupIndex}`,\r\n          engagementGroup\r\n        );\r\n      };\r\n      d3Drawer.manualBigTGsDrawer.visible = false;\r\n\r\n      d3Drawer.manualPeopleTGsDrawer.onTitleClicked = (\r\n        mouseEvent: MouseEvent,\r\n        engagementGroup: SimilarityBlock[][],\r\n        engagementGroupIndex: number\r\n      ) => {\r\n        conceptualMapModalRef.current?.openModal(\r\n          `Manual People Engagement Group ${engagementGroupIndex}`,\r\n          engagementGroup\r\n        );\r\n      };\r\n\r\n      d3Drawer.centerConceptualRecurrentPlot();\r\n      d3Drawer.participantBlocksDrawer.update();\r\n      d3Drawer.insistenceMarkersDrawer.update();\r\n\r\n      d3Drawer!.similarityBlocksDrawer.standardHighPointOfSimilarityScore = standardSimilarityScore;\r\n      d3Drawer.similarityBlocksDrawer.update();\r\n      d3Drawer.topicGroupsDrawer.update();\r\n      d3Drawer.manualSmallTGsDrawer.update();\r\n      d3Drawer.manualMiddleTGsDrawer.update();\r\n      d3Drawer.manualBigTGsDrawer.update();\r\n      // d3Drawer.manualPeopleTGsDrawer.update();\r\n      console.log(\"d3Drawer\", d3Drawer);\r\n\r\n      setD3Drawer(d3Drawer);\r\n    }\r\n  }, [dataStructureManager, debateDataset]);\r\n\r\n  return (\r\n    <div className=\"root-div\">\r\n      <Header />\r\n      {/* <Controllers\r\n        d3Drawer={d3Drawer}\r\n        combinedEGsMaker={combinedEGsMaker}\r\n        maxSimilarityScore={\r\n          dataStructureManager\r\n            ? dataStructureManager.dataStructureSet.maxSimilarityScore\r\n            : 0\r\n        }\r\n        debateDataset={debateDataset}\r\n        evaluationDataSet={evaluationDataSet}\r\n        dataStructureSet={\r\n          dataStructureManager ? dataStructureManager.dataStructureSet : null\r\n        }\r\n        dataStructureManager={\r\n          dataStructureManager ? dataStructureManager : null\r\n        }\r\n      ></Controllers> */}\r\n      <div className=\"concept-recurrence-plot\">\r\n        <svg>\r\n          <g className=\"svgG\"></g>\r\n        </svg>\r\n        <ParticipantTooltip\r\n          utteranceObjectForDrawing={mouseoveredUtterance}\r\n          transform={transform}\r\n          visible={tooltipVisible}\r\n          d3Drawer={d3Drawer}\r\n          debateDataset={debateDataset}\r\n        />\r\n      </div>\r\n      <TranscriptViewer\r\n        dataStructureMaker={dataStructureManager}\r\n      ></TranscriptViewer>\r\n\r\n      <ConceptualMapModal\r\n        ref={conceptualMapModalRef}\r\n        participantDict={\r\n          dataStructureManager\r\n            ? dataStructureManager.dataStructureSet.participantDict\r\n            : {}\r\n        }\r\n        utteranceObjects={debateDataset ? debateDataset.utteranceObjects : []}\r\n        termList={debateDataset ? debateDataset.termList : []}\r\n        termUtteranceBooleanMatrixTransposed={\r\n          debateDataset\r\n            ? debateDataset.termUtteranceBooleanMatrixTransposed\r\n            : []\r\n        }\r\n        termType={termTypeOfQuery}\r\n      ></ConceptualMapModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConceptualRecurrencePlot;\r\n","// export const ADD_TODO = \"ADD_TODO\";\r\n// export const TOGGLE_TODO = \"TOGGLE_TODO\";\r\n// export const SET_FILTER = \"SET_FILTER\";\r\n\r\nexport const CHANGE_STANDARD_SIMILARITY_SCORE =\r\n  \"CHANGE_STANDARD_SIMILARITY_SCORE\";\r\n","/* eslint-disable no-unused-vars */\r\nimport { Button, Checkbox } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport styles from \"./Home.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport {\r\n  aiopenAccessKey,\r\n  nodeExpressAddress,\r\n  pythonFlaskAddress,\r\n} from \"../../constants/constants\";\r\nimport { TermType } from \"../ConceptualRecurrencePlot/DataImporter\";\r\nimport { style } from \"d3-selection\";\r\n\r\ninterface ComponentProps {}\r\n\r\nfunction Home(props: ComponentProps) {\r\n  const [termType, setTermType] = useState<TermType>(\"compound_term\");\r\n\r\n  return (\r\n    <div className={styles.home}>\r\n      {/* <div className={styles.serviceTitle}>Conceptual Map of TV Debate</div> */}\r\n      <div className={styles.serviceTitle}>DebateVis</div>\r\n      {/* <div style={{ fontSize: 24 }}>\r\n        based on Conceptual Recurrence Plot & Debate Properties\r\n      </div> */}\r\n\r\n      <Checkbox\r\n        className={styles.checkbox}\r\n        defaultChecked\r\n        onChange={(event) => {\r\n          console.log(event.target.checked);\r\n\r\n          if (event.target.checked) {\r\n            setTermType(\"compound_term\");\r\n          } else {\r\n            setTermType(\"single_term\");\r\n          }\r\n        }}\r\n      >\r\n        use compound_term\r\n      </Checkbox>\r\n\r\n      <div className={styles.links}>\r\n        <Button\r\n          className={styles.button}\r\n          href={`/conceptual-recurrence-plot?debate_name=기본소득&term_type=${termType}`}\r\n        >\r\n          기본소득\r\n        </Button>\r\n        <Button\r\n          className={styles.button}\r\n          href={`/conceptual-recurrence-plot?debate_name=정시확대&term_type=${termType}`}\r\n        >\r\n          정시 확대\r\n        </Button>\r\n        {/* <Button\r\n          className={styles.button}\r\n          href={`/conceptual-recurrence-plot?debate_name=sample&term_type=${termType}`}\r\n        >\r\n          기본소득\r\n        </Button> */}\r\n      </div>\r\n      <div className={styles.links}>\r\n        <Button\r\n          className={styles.button}\r\n          href={`/conceptual-recurrence-plot?debate_name=모병제&term_type=${termType}`}\r\n        >\r\n          모병제\r\n        </Button>\r\n        {/* <Button\r\n          className={styles.button}\r\n          href=\"/conceptual-recurrence-plot?debate_name=?\"\r\n        >\r\n          (Not Activated) 집 값, 과연 이번엔 잡힐까?\r\n        </Button> */}\r\n      </div>\r\n\r\n      <div className={styles.links}>\r\n        {/* <Button\r\n          className={styles.button}\r\n          href={`/conceptual-recurrence-plot?debate_name=sample&term_type=${termType}`}\r\n        >\r\n          sample\r\n        </Button> */}\r\n      </div>\r\n\r\n      {/* <div className={styles.apiTestTitle}>API Test</div>\r\n\r\n      <div className={styles.apiButtons}>\r\n        <Button\r\n          className={styles.apiButton}\r\n          onClick={() => {\r\n            Axios.get(nodeExpressAddress)\r\n              .then((response) => {\r\n                console.log(\"response\", response);\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"error\", error);\r\n              });\r\n          }}\r\n        >\r\n          Node Express Server API Test\r\n        </Button>\r\n\r\n        <Button\r\n          className={styles.apiButton}\r\n          onClick={() => {\r\n            Axios.get(pythonFlaskAddress)\r\n              .then((response) => {\r\n                console.log(\"response\", response);\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"error\", error);\r\n              });\r\n          }}\r\n        >\r\n          Flask Server API Test\r\n        </Button>\r\n\r\n        <Button\r\n          className={styles.apiButton}\r\n          onClick={() => {\r\n            // http://aiopen.etri.re.kr:8000/WiseNLU\r\n            // http://aiopen.etri.re.kr:8000/WiseNLU_spoken\r\n            Axios.post(\"http://aiopen.etri.re.kr:8000/WiseNLU\", {\r\n              access_key: aiopenAccessKey,\r\n              argument: {\r\n                analysis_code: \"morp\",\r\n                // analysis_code: \"dparse\",\r\n                text:\r\n                  // \"관료들만 아는 암호 같은 거 하지 말고, 이런 생각이 들어서 그 재난지원금에서는 저는 그런 중요한 민주주의적 효과를 발견했습니다.\",\r\n                  // \"소득을 정부에서 뭔가 주려면 서류 작업을 열심히 해야 되고 내가 재산이 얼마인지 가서 보고해야 되고 내가 취업하려고 어디 가서 이력서 냈다는 거 내야 되고 이런 것들이 있었는데 그것이 없는 재난지원금이란 걸 모든 사람들한테 딱 주니까 이것만 해도 정말 천지개벽할 경험인 거죠.\",\r\n                  \"이게 결국에는 소득을 지급하고 지급하는 쪽이 있고요. 그 다음에 이 재원을 마련하는 쪽이 있지 않습니까? 양쪽이 다 있어요.\",\r\n              },\r\n            })\r\n              .then((response) => {\r\n                console.log(\"response\", response);\r\n              })\r\n              .catch((error) => {\r\n                console.error(\"errlr\", error);\r\n              });\r\n          }}\r\n        >\r\n          AI-Open API Test\r\n        </Button>\r\n      </div> */}\r\n\r\n      {/* <div className={styles.evaluationTitle}>Evaluation</div> */}\r\n      {/* <Button>\r\n        <Link to=\"/test-description?debate_name=기본소득clipped\">\r\n          Description of Evaluation\r\n        </Link>\r\n      </Button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect } from \"react\";\r\nimport styles from \"./FunctionComponentTemplate.module.scss\";\r\n\r\ninterface ComponentProps {}\r\n\r\nfunction FunctionComponentTemplate(props: ComponentProps) {\r\n  useEffect(() => {}, []);\r\n\r\n  return <div className={styles.component}>function-component-template</div>;\r\n}\r\n\r\nexport default FunctionComponentTemplate;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport styles from \"./ClassComponentTemplate.module.scss\";\r\n\r\ninterface ComponentProps {}\r\ninterface ComponentState {}\r\nclass ClassComponentTemplate extends React.Component<\r\n  ComponentProps,\r\n  ComponentState\r\n> {\r\n  constructor(props: ComponentProps) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return <div className={styles.component}>class-component-template</div>;\r\n  }\r\n}\r\n\r\nexport default ClassComponentTemplate;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport { UtteranceObject } from \"../../interfaces/DebateDataInterface\";\r\nimport styles from \"./TranscriptViewerM.module.scss\";\r\n\r\nconst utteranceOjbects: UtteranceObject[] = require(\"../../data/sample/utterance_objects.json\");\r\n\r\ninterface ComponentProps {\r\n  zxcvzxcv: string;\r\n}\r\ninterface ComponentState {\r\n  aaa: number;\r\n  bbb: number;\r\n  utteranceOjbects: UtteranceObject[];\r\n}\r\nclass TranscriptViewerM extends React.Component<\r\n  ComponentProps,\r\n  ComponentState\r\n> {\r\n  // Start Part\r\n  constructor(props: ComponentProps) {\r\n    console.log(\"start\");\r\n\r\n    // External Import Data\r\n    super(props);\r\n\r\n    // Current Component Data\r\n    this.state = {\r\n      utteranceOjbects,\r\n      aaa: 123,\r\n      bbb: 234,\r\n    };\r\n\r\n    console.log(\"props\", props);\r\n    console.log(\"this.state\", this.state);\r\n  }\r\n\r\n  // when the view is mounted, this method is called\r\n  componentDidMount() {\r\n    console.log(\"mount\");\r\n\r\n    // change state data\r\n    this.setState({\r\n      aaa: 23455655,\r\n    });\r\n  }\r\n\r\n  // when the state data is changed, this method is called\r\n  componentDidUpdate() {\r\n    console.log(\"update\");\r\n  }\r\n\r\n  render() {\r\n    // HTML part\r\n    return <div className={styles.component}>class-component-template</div>;\r\n  }\r\n}\r\n\r\nexport default TranscriptViewerM;\r\n","/* eslint-disable no-unused-vars */\r\n/**\r\n * Utility Functions in TestSubjects\r\n */\r\n\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport _ from \"lodash\";\r\nimport $ from \"jquery\";\r\nrequire(\"jquery-ui-bundle\");\r\nimport { SubjectRecordInTesting } from \"../ConceptualRecurrencePlot/interfaces\";\r\nimport { SentenceObject } from \"../../interfaces/DebateDataInterface\";\r\n\r\n/**\r\n *\r\n * @param currentSentenceIndex : sentenceIndex in totalSentenceIndexes\r\n * @param sentenceIndexesOfSegments\r\n */\r\nexport function makeBodyTextBackgroundColor(\r\n  currentSentenceIndex: number,\r\n  sentenceIndexesOfSegments: number[]\r\n): string {\r\n  // TODO find the segmentIndex by sentenceIndex & sentenceIndexesOfSegments\r\n  const segmentIndex = _.findIndex(\r\n    sentenceIndexesOfSegments,\r\n    (sentenceIndexOfSegment) => currentSentenceIndex <= sentenceIndexOfSegment\r\n  );\r\n\r\n  const refinedSegmentIndex: number = segmentIndex % 7;\r\n\r\n  let backgroundColor: string = \"white\";\r\n\r\n  switch (refinedSegmentIndex) {\r\n    case 0:\r\n      backgroundColor = \"#f7d0d0\";\r\n      break;\r\n    case 1:\r\n      backgroundColor = \"#f4f4d0\";\r\n      break;\r\n    case 2:\r\n      backgroundColor = \"#d0f4f4\";\r\n      break;\r\n    case 3:\r\n      backgroundColor = \"#f2d0f4\";\r\n      break;\r\n    case 4:\r\n      backgroundColor = \"#f4e3d0\";\r\n      break;\r\n    case 5:\r\n      backgroundColor = \"#d0f4d0\";\r\n      break;\r\n    case 6:\r\n      backgroundColor = \"#d0d7f4\";\r\n      break;\r\n  }\r\n\r\n  return backgroundColor;\r\n}\r\n\r\nexport function makeBodyTextBackgroundColorInMinimap(\r\n  currentSentenceIndex: number,\r\n  sentenceIndexesOfSegments: number[]\r\n): string {\r\n  // TODO find the segmentIndex by sentenceIndex & sentenceIndexesOfSegments\r\n  const segmentIndex = _.findIndex(\r\n    sentenceIndexesOfSegments,\r\n    (sentenceIndexOfSegment) => currentSentenceIndex <= sentenceIndexOfSegment\r\n  );\r\n\r\n  const refinedSegmentIndex: number = segmentIndex % 7;\r\n\r\n  let backgroundColor: string = \"white\";\r\n\r\n  switch (refinedSegmentIndex) {\r\n    case 0:\r\n      backgroundColor = \"#ef5656\";\r\n      break;\r\n    case 1:\r\n      backgroundColor = \"#efe856\";\r\n      break;\r\n    case 2:\r\n      backgroundColor = \"#56efd2\";\r\n      break;\r\n    case 3:\r\n      backgroundColor = \"#ef56d9\";\r\n      break;\r\n    case 4:\r\n      backgroundColor = \"#efb456\";\r\n      break;\r\n    case 5:\r\n      backgroundColor = \"#6def56\";\r\n      break;\r\n    case 6:\r\n      backgroundColor = \"#567fef\";\r\n      break;\r\n  }\r\n\r\n  return backgroundColor;\r\n}\r\n\r\nexport function submitTestResult(\r\n  subjectRecordInTesting: SubjectRecordInTesting\r\n): Promise<AxiosResponse<any>> {\r\n  return new Promise((resolve, reject) => {\r\n    // request 'create record' in database\r\n    axios\r\n      .post(\r\n        \"http://hapsoa.iptime.org:3001/subject-data\",\r\n        subjectRecordInTesting\r\n      )\r\n      .then((response) => {\r\n        console.log(\"resposne\", response);\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"error\", error);\r\n        reject(error);\r\n      });\r\n  });\r\n\r\n  // axios\r\n  //   .get(\"http://hapsoa.iptime.org:3001\")\r\n  //   .then((result) => {\r\n  //     console.log(\"result\", result);\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.error(\"error\", error);\r\n  //   });\r\n}\r\n\r\nexport function getSentenceDataSetAtViewport(\r\n  bodyTextContainerRef: React.RefObject<HTMLDivElement>\r\n) {\r\n  const scrollTop = $(window).scrollTop() as number;\r\n  const windowHeight = $(window).height() as number;\r\n\r\n  const $spans = $<HTMLSpanElement>(\r\n    `.${bodyTextContainerRef.current!.className} > div > span`\r\n  );\r\n\r\n  let firstSentenceInViewport: string = \"\";\r\n  let firstSentenceOverViewport: string = \"\";\r\n  _.forEach($spans, (span, spanIndex) => {\r\n    const $span = $(span);\r\n    if (\r\n      $span.offset()!.top >= scrollTop &&\r\n      $span.is(\":visible\") &&\r\n      firstSentenceInViewport === \"\"\r\n    ) {\r\n      firstSentenceInViewport = $span.text();\r\n    }\r\n\r\n    if (\r\n      $span.offset()!.top >= scrollTop + windowHeight &&\r\n      $span.is(\":visible\")\r\n    ) {\r\n      firstSentenceOverViewport = $span.text();\r\n\r\n      return false;\r\n    }\r\n\r\n    if (spanIndex === $spans.length - 1 && firstSentenceOverViewport === \"\") {\r\n      firstSentenceOverViewport = $span.text();\r\n    }\r\n  });\r\n\r\n  return { firstSentenceInViewport, firstSentenceOverViewport };\r\n}\r\n\r\nexport function findSameSentenceAndApplyScrollTopAtMinimap(\r\n  minimapRef: React.RefObject<HTMLDivElement>,\r\n  firstSentence: string,\r\n  lastSentence: string\r\n) {\r\n  const $minimapSpans = $<HTMLSpanElement>(\r\n    `.${minimapRef.current!.className} > div > div> span`\r\n  );\r\n\r\n  let firstSentenceTop: number = 0;\r\n  let firstSentenceIndex: number = Number.MAX_VALUE;\r\n  let lastSentenceTop: number = 0;\r\n  let movingTopInMinimap: number = 0;\r\n\r\n  // for bug fix\r\n  $(minimapRef.current!).scrollTop(0);\r\n  //\r\n  _.forEach($minimapSpans, (minimapSpan, minimapSpanIndex) => {\r\n    const $minimapSpan = $(minimapSpan);\r\n    const scale = 10;\r\n\r\n    if ($minimapSpan.text() === firstSentence) {\r\n      firstSentenceTop = $minimapSpan.position()!.top * scale;\r\n      firstSentenceIndex = minimapSpanIndex;\r\n    }\r\n\r\n    if (\r\n      $minimapSpan.text() === lastSentence &&\r\n      minimapSpanIndex > firstSentenceIndex\r\n    ) {\r\n      lastSentenceTop = $minimapSpan.position()!.top * scale;\r\n\r\n      movingTopInMinimap =\r\n        firstSentenceTop -\r\n        minimapRef.current!.clientHeight / 2 +\r\n        (lastSentenceTop - firstSentenceTop) / 2;\r\n\r\n      // TODO why this code is in this function?\r\n      $(minimapRef.current!).scrollTop(movingTopInMinimap);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  return { firstSentenceTop, lastSentenceTop };\r\n}\r\n\r\nexport function applyScrollTopAtTranscript(\r\n  videoCurrentSecondTime: number,\r\n  totalSentenceObjects: SentenceObject[],\r\n  bodyTextContainerRef: React.RefObject<HTMLDivElement>,\r\n  sentenceIndexesOfSegments: number[]\r\n) {\r\n  // find most transcript of nearest time\r\n  //\r\n  // times = []\r\n  // for each sentenceObject in totalSentenceObjects\r\n  //   times.push(sentenceObject.time)\r\n  //\r\n  // for time in times\r\n  //   diffs.push(Math.abs(time - currentSecondTime))\r\n  //\r\n  // min = _.min(diffs)\r\n  // minIndex = _.findIndex(diffs, diff => diff === min)\r\n  //\r\n  // theSentenceObject = totalSentenceObjects[minIndex]\r\n  //\r\n  // for each $span in $spans\r\n  //   if theSentenceObject.sentence === $span.text()\r\n  //      (transcriptRef).animate.scrollTop = $span.scrollTop\r\n  //      break\r\n  //\r\n\r\n  const secondTimes: number[] = _.map(\r\n    totalSentenceObjects,\r\n    (sentenceObject) => {\r\n      return vrewTimeToSeconds(sentenceObject.time!);\r\n    }\r\n  );\r\n\r\n  const diffs = _.map(secondTimes, (secondTime) => {\r\n    // return Math.abs(videoCurrentSecondTime - secondTime);\r\n\r\n    if (videoCurrentSecondTime - secondTime >= 0) {\r\n      return videoCurrentSecondTime - secondTime;\r\n    } else {\r\n      return Number.POSITIVE_INFINITY;\r\n    }\r\n  });\r\n\r\n  const min = _.min(diffs);\r\n  const minIndex = _.findIndex(diffs, (diff) => diff === min);\r\n\r\n  const theSentenceObject = totalSentenceObjects[minIndex];\r\n\r\n  const $spans = $<HTMLSpanElement>(\r\n    `.${bodyTextContainerRef.current!.className} > div > span`\r\n  );\r\n\r\n  const $bodyTextContainer = $(bodyTextContainerRef.current!);\r\n  $bodyTextContainer.scrollTop(0);\r\n\r\n  // console.log(\"totalSentenceObjects\", totalSentenceObjects.length);\r\n  // console.log(\"$spans\", $spans);\r\n\r\n  const $theSpan = $($spans[minIndex]);\r\n  $bodyTextContainer.scrollTop(\r\n    $theSpan.position().top - bodyTextContainerRef.current!.clientHeight / 2\r\n  );\r\n\r\n  const children = $theSpan.children(\"span\");\r\n  const pastBackgroundColor = makeBodyTextBackgroundColor(\r\n    minIndex,\r\n    sentenceIndexesOfSegments\r\n  );\r\n\r\n  children.css(\"background-color\", \"#aaaaaa\");\r\n  children\r\n    .stop(true, false)\r\n    .animate({ \"background-color\": pastBackgroundColor }, 1000);\r\n\r\n  // _.forEach($spans, (span, spanIndex) => {\r\n  //   const $span = $(span);\r\n  //   if (theSentenceObject.sentence === $span.text()) {\r\n  //     $bodyTextContainer.scrollTop(\r\n  //       $span.position().top - bodyTextContainerRef.current!.clientHeight / 2\r\n  //     );\r\n\r\n  //     // const parent = $span.parent();\r\n  //     // parent.css(\"background-color\", \"#aaaaaa\");\r\n  //     // parent.animate({ \"background-color\": \"none\" }, 1000);\r\n\r\n  //     const children = $span.children(\"span\");\r\n  //     children.css(\"background-color\", \"#aaaaaa\");\r\n  //     children.stop(true, false).animate({ \"background-color\": \"none\" }, 1000);\r\n\r\n  //     // $(bodyTextContainerRef.current!).animate(\r\n  //     //   {\r\n  //     //     scrollTop: $span.position().top,\r\n  //     //   },\r\n  //     //   500\r\n  //     // );\r\n\r\n  //     return false;\r\n  //   }\r\n  // });\r\n}\r\n\r\nfunction vrewTimeToSeconds(vrewTime: string): number {\r\n  const splittedTime = vrewTime.split(\":\");\r\n\r\n  const hour = Number(splittedTime[0]);\r\n  const minute = Number(splittedTime[1]);\r\n  const second = Number(splittedTime[2]);\r\n\r\n  let seconds = 0;\r\n\r\n  seconds += second;\r\n  seconds += minute * 60;\r\n  seconds += hour * 60 * 60;\r\n\r\n  return seconds;\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { Button, Checkbox } from \"antd\";\r\nimport { changeConfirmLocale } from \"antd/lib/modal/locale\";\r\nimport _ from \"lodash\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  makeParticipants,\r\n  Participant,\r\n  ParticipantDict,\r\n} from \"../../common_functions/makeParticipants\";\r\nimport {\r\n  SentenceObject,\r\n  UtteranceObject,\r\n} from \"../../interfaces/DebateDataInterface\";\r\nimport { DebateName } from \"../ConceptualRecurrencePlot/DataImporter\";\r\nimport {\r\n  findSameSentenceAndApplyScrollTopAtMinimap,\r\n  getSentenceDataSetAtViewport,\r\n  makeBodyTextBackgroundColor,\r\n  makeBodyTextBackgroundColorInMinimap,\r\n  submitTestResult,\r\n} from \"./TestSubjectsFunctions\";\r\nimport styles from \"./TranscriptSubjectTest.module.scss\";\r\nimport {\r\n  SubjectRecordInTesting,\r\n  UtteranceIndexSentenceIndexTotalSentenceIndexDict,\r\n} from \"../ConceptualRecurrencePlot/interfaces\";\r\n\r\ninterface ComponentProps {}\r\n\r\nfunction TranscriptSubjectTest(props: ComponentProps) {\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const locationState = useLocation<{\r\n    ageGroup: string;\r\n    gender: string;\r\n    major: string;\r\n    participationCode: string;\r\n  }>().state;\r\n  const debateNameOfQuery = query.get(\"debate_name\") as DebateName;\r\n\r\n  const [utteranceObjects, setUtteranceObjects] = useState<UtteranceObject[]>(\r\n    []\r\n  );\r\n  const [participantDict, setParticipantDict] = useState<ParticipantDict>({});\r\n  const [totalSentenceObjects, setTotalSentenceObjects] = useState<\r\n    SentenceObject[]\r\n  >([]);\r\n  const [sentenceIndexesOfSegments, setSentenceIndexesOfSegments] = useState<\r\n    number[]\r\n  >([]);\r\n  const [checkboxes, setCheckboxes] = useState<boolean[]>([]);\r\n  const [\r\n    utteranceIndexSentenceIndexTotalSentenceIndexDict,\r\n    setUtteranceIndexSentenceIndexTotalSentenceIndexDict,\r\n  ] = useState<UtteranceIndexSentenceIndexTotalSentenceIndexDict>({});\r\n\r\n  const bodyTextContainerRef = useRef<HTMLDivElement>(null);\r\n  const minimapRef = useRef<HTMLDivElement>(null);\r\n  const [minimapViewportTop, setMinimapViewportTop] = useState<number>(0);\r\n  const [minimapViewportHeight, setMinimapViewportHeight] = useState<number>(\r\n    100\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      debateNameOfQuery === \"sample\" ||\r\n      debateNameOfQuery === \"기본소득\" ||\r\n      debateNameOfQuery === \"기본소득clipped\" ||\r\n      debateNameOfQuery === \"정시확대\" ||\r\n      debateNameOfQuery === \"모병제\"\r\n    ) {\r\n      // const dataImporter = new DataImporter(debateNameOfQuery, \"single_term\");\r\n\r\n      const utteranceObjects: UtteranceObject[] = require(`../../data/${debateNameOfQuery}/utterance_objects.json`);\r\n      const totalSentenceObjects: SentenceObject[] = [];\r\n\r\n      // make totalSentenceObjects\r\n      _.forEach(utteranceObjects, (utteranceObject, utteranceIndex) => {\r\n        _.forEach(\r\n          utteranceObject.sentenceObjects,\r\n          (sentenceObject, sentenceIndex) => {\r\n            totalSentenceObjects.push(sentenceObject);\r\n          }\r\n        );\r\n      });\r\n\r\n      // make utterance_index => sentence_index => total_sentence_index\r\n      const utteranceIndexSentenceIndexTotalSentenceIndexDict: UtteranceIndexSentenceIndexTotalSentenceIndexDict = {};\r\n      let totalSentenceIndex: number = 0;\r\n      _.forEach(utteranceObjects, (utteranceObject, utteranceIndex) => {\r\n        utteranceIndexSentenceIndexTotalSentenceIndexDict[utteranceIndex] = {};\r\n        _.forEach(\r\n          utteranceObject.sentenceObjects,\r\n          (sentenceObject, sentenceIndex) => {\r\n            utteranceIndexSentenceIndexTotalSentenceIndexDict[utteranceIndex][\r\n              sentenceIndex\r\n            ] = totalSentenceIndex;\r\n            totalSentenceIndex++;\r\n          }\r\n        );\r\n      });\r\n\r\n      const participants: Participant[] = makeParticipants(\r\n        debateNameOfQuery,\r\n        utteranceObjects\r\n      );\r\n      const participantDict: ParticipantDict = _.keyBy(\r\n        participants,\r\n        (participant) => participant.name\r\n      );\r\n\r\n      setUtteranceObjects(utteranceObjects);\r\n      setTotalSentenceObjects(totalSentenceObjects);\r\n      setCheckboxes(\r\n        new Array<boolean>(totalSentenceObjects.length).fill(false)\r\n      );\r\n      setUtteranceIndexSentenceIndexTotalSentenceIndexDict(\r\n        utteranceIndexSentenceIndexTotalSentenceIndexDict\r\n      );\r\n      setParticipantDict(participantDict);\r\n\r\n      console.log(\"totalSentenceObjects\", totalSentenceObjects);\r\n      console.log(\r\n        \"utteranceIndexSentenceIndexTotalSentenceIndexDict\",\r\n        utteranceIndexSentenceIndexTotalSentenceIndexDict\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={styles.component}\r\n      onScroll={() => {\r\n        const dataSetOfSentence = getSentenceDataSetAtViewport(\r\n          bodyTextContainerRef\r\n        );\r\n        const dataSetOfSentenceInMinimap = findSameSentenceAndApplyScrollTopAtMinimap(\r\n          minimapRef,\r\n          dataSetOfSentence.firstSentenceInViewport,\r\n          dataSetOfSentence.firstSentenceOverViewport\r\n        );\r\n        setMinimapViewportTop(dataSetOfSentenceInMinimap.firstSentenceTop);\r\n        const minimapViewportHeight =\r\n          dataSetOfSentenceInMinimap.lastSentenceTop -\r\n          dataSetOfSentenceInMinimap.firstSentenceTop;\r\n        setMinimapViewportHeight(minimapViewportHeight);\r\n      }}\r\n    >\r\n      <div className={styles.simpleGuideContainer}>\r\n        <div className={styles.guideText}>\r\n          주제를 분리할 곳에 체크박스 표시해주세요.\r\n        </div>\r\n        <div className={styles.guideText}>\r\n          직접 토론을 시청하길 원하신다면 공개된{\" \"}\r\n          <a\r\n            href=\"https://www.youtube.com/watch?v=zBcLKV0nh6Y&t=1344s\"\r\n            // eslint-disable-next-line react/jsx-no-target-blank\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            유튜브 채널\r\n          </a>\r\n          에서 시청하실 수 있습니다.\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.bodyContainer}>\r\n        <div style={{ flex: 1 }}></div>\r\n        <div className={styles.bodyTextContainer} ref={bodyTextContainerRef}>\r\n          {_.map(utteranceObjects, (utteranceObject, utteranceIndex) => {\r\n            return (\r\n              <div key={`utterance-${utteranceIndex}`} style={{ width: 440 }}>\r\n                <div\r\n                  style={{ color: participantDict[utteranceObject.name].color }}\r\n                >\r\n                  {utteranceObject.name}\r\n                </div>\r\n                {_.map(\r\n                  utteranceObject.sentenceObjects,\r\n                  (sentenceObject, sentenceIndex) => {\r\n                    if (\r\n                      sentenceIndex <\r\n                      utteranceObject.sentenceObjects.length - 1\r\n                    ) {\r\n                      const totalSentenceIndex =\r\n                        utteranceIndexSentenceIndexTotalSentenceIndexDict[\r\n                          utteranceIndex\r\n                        ][sentenceIndex];\r\n                      return (\r\n                        <span\r\n                          key={`sentence-${utteranceIndex}-${sentenceIndex}`}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              backgroundColor: makeBodyTextBackgroundColor(\r\n                                totalSentenceIndex,\r\n                                sentenceIndexesOfSegments\r\n                              ),\r\n                            }}\r\n                          >\r\n                            {sentenceObject.sentence}\r\n                          </span>\r\n                          <Checkbox\r\n                            onChange={(event) => {\r\n                              checkboxes[totalSentenceIndex] =\r\n                                event.target.checked;\r\n                              setCheckboxes(checkboxes);\r\n\r\n                              const sentenceIndexesOfSegments: number[] = [];\r\n                              _.forEach(\r\n                                checkboxes,\r\n                                (checkbox, checkboxIndex) => {\r\n                                  if (checkbox) {\r\n                                    sentenceIndexesOfSegments.push(\r\n                                      checkboxIndex\r\n                                    );\r\n                                  }\r\n                                }\r\n                              );\r\n                              setSentenceIndexesOfSegments(\r\n                                sentenceIndexesOfSegments\r\n                              );\r\n                            }}\r\n                            style={{ marginRight: 8 }}\r\n                          ></Checkbox>\r\n                        </span>\r\n                      );\r\n                    } else {\r\n                      const totalSentenceIndex =\r\n                        utteranceIndexSentenceIndexTotalSentenceIndexDict[\r\n                          utteranceIndex\r\n                        ][utteranceObject.sentenceObjects.length - 1];\r\n                      return (\r\n                        <span\r\n                          key={`sentence-${utteranceIndex}-${sentenceIndex}`}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              backgroundColor: makeBodyTextBackgroundColor(\r\n                                totalSentenceIndex,\r\n                                sentenceIndexesOfSegments\r\n                              ),\r\n                            }}\r\n                          >\r\n                            {sentenceObject.sentence}\r\n                          </span>\r\n                        </span>\r\n                      );\r\n                    }\r\n                  }\r\n                )}\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <Checkbox\r\n                    onChange={(event) => {\r\n                      const totalSentenceIndex =\r\n                        utteranceIndexSentenceIndexTotalSentenceIndexDict[\r\n                          utteranceIndex\r\n                        ][utteranceObject.sentenceObjects.length - 1];\r\n                      checkboxes[totalSentenceIndex] = event.target.checked;\r\n                      setCheckboxes(checkboxes);\r\n\r\n                      const sentenceIndexesOfSegments: number[] = [];\r\n                      _.forEach(checkboxes, (checkbox, checkboxIndex) => {\r\n                        if (checkbox) {\r\n                          sentenceIndexesOfSegments.push(checkboxIndex);\r\n                        }\r\n                      });\r\n                      setSentenceIndexesOfSegments(sentenceIndexesOfSegments);\r\n                    }}\r\n                    style={{ marginTop: 8, marginBottom: 8 }}\r\n                  ></Checkbox>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div style={{ flex: 1 }}></div>\r\n      </div>\r\n\r\n      {/* <Button\r\n        onClick={() => {\r\n          console.log(\"checkboxes\", checkboxes);\r\n        }}\r\n      >\r\n        show checkboxes\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          console.log(\"sentenceIndexesOfSegments\", sentenceIndexesOfSegments);\r\n        }}\r\n      >\r\n        show sentenceIndexesOfSegments\r\n      </Button> */}\r\n\r\n      <div className={styles.buttonsContainerToSubmit}>\r\n        <Button\r\n          onClick={() => {\r\n            //\r\n          }}\r\n          style={{\r\n            marginRight: 16,\r\n          }}\r\n        >\r\n          취소\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            //\r\n          }}\r\n          style={{\r\n            marginRight: 16,\r\n          }}\r\n        >\r\n          초기화\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            const subjectRecordInTesting: SubjectRecordInTesting = {\r\n              ...locationState,\r\n              debateName: debateNameOfQuery,\r\n              sentenceIndexesOfSegments,\r\n            };\r\n\r\n            submitTestResult(subjectRecordInTesting);\r\n          }}\r\n          style={{\r\n            marginRight: 16,\r\n          }}\r\n        >\r\n          제출하기\r\n        </Button>\r\n      </div>\r\n\r\n      <div></div>\r\n\r\n      <div className={styles.minimap} ref={minimapRef}>\r\n        <div>\r\n          {_.map(utteranceObjects, (utteranceObject, utteranceIndex) => {\r\n            return (\r\n              <div\r\n                key={`utterance-${utteranceIndex}`}\r\n                style={{ width: \"100%\" }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: participantDict[utteranceObject.name].color,\r\n                  }}\r\n                >\r\n                  {utteranceObject.name}\r\n                </div>\r\n                {_.map(\r\n                  utteranceObject.sentenceObjects,\r\n                  (sentenceObject, sentenceIndex) => {\r\n                    const totalSentenceIndex =\r\n                      utteranceIndexSentenceIndexTotalSentenceIndexDict[\r\n                        utteranceIndex\r\n                      ][sentenceIndex];\r\n                    return (\r\n                      <span key={`sentence-${utteranceIndex}-${sentenceIndex}`}>\r\n                        <span\r\n                          style={{\r\n                            backgroundColor: makeBodyTextBackgroundColorInMinimap(\r\n                              totalSentenceIndex,\r\n                              sentenceIndexesOfSegments\r\n                            ),\r\n                          }}\r\n                        >\r\n                          {sentenceObject.sentence}\r\n                        </span>\r\n                      </span>\r\n                    );\r\n                  }\r\n                )}\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    marginBottom: 2,\r\n                  }}\r\n                ></div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: minimapViewportTop,\r\n            left: 0,\r\n            width: \"100%\",\r\n            // height: minimapViewportHeight,\r\n            height: 300,\r\n            backgroundColor: \"rgba(0, 0, 0, 0.3)\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n\r\n      <div className={styles.segmentCountStatus}>\r\n        분리된 주제의 수 : {sentenceIndexesOfSegments.length}개\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TranscriptSubjectTest;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Modal } from \"antd\";\r\nimport React, { forwardRef, Ref, useEffect, useImperativeHandle } from \"react\";\r\nimport styles from \"./BasicModal.module.scss\";\r\n\r\ninterface ComponentProps {}\r\n\r\nexport interface BasicModalRef {\r\n  openModal: (p: {\r\n    title: string;\r\n    text: string;\r\n    okListener: (() => void) | (() => Promise<any>) | null;\r\n    loadingOn?: boolean;\r\n  }) => void;\r\n}\r\n\r\nlet okListener: (() => void) | (() => Promise<any>) | null = null;\r\nlet loadingOn: boolean = false;\r\n\r\nfunction BasicModal(props: ComponentProps, ref: Ref<BasicModalRef>) {\r\n  const [visible, setVisible] = React.useState<boolean>(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState<boolean>(false);\r\n  const [modalTitle, setModalTitle] = React.useState<string>(\"title\");\r\n  const [modalText, setModalText] = React.useState<string>(\r\n    \"Content of the modal\"\r\n  );\r\n\r\n  const openModal = (p: {\r\n    title: string;\r\n    text: string;\r\n    okListener: (() => void) | (() => Promise<any>) | null;\r\n    loadingOn?: boolean;\r\n  }) => {\r\n    setModalTitle(p.title);\r\n    setModalText(p.text);\r\n    setConfirmLoading(false);\r\n\r\n    okListener = p.okListener;\r\n\r\n    if (p.loadingOn) {\r\n      loadingOn = p.loadingOn;\r\n    }\r\n\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    // setModalText(\"The modal will be closed after two seconds\");\r\n    // setConfirmLoading(true);\r\n    // setTimeout(() => {\r\n    //   setVisible(false);\r\n    //   setConfirmLoading(false);\r\n    // }, 2000);\r\n\r\n    // setConfirmLoading(true);\r\n\r\n    if (okListener) {\r\n      const promise = okListener();\r\n\r\n      if (promise) {\r\n        setConfirmLoading(true);\r\n        promise.then(() => {\r\n          setVisible(false);\r\n        });\r\n      } else {\r\n        setVisible(false);\r\n      }\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    openModal,\r\n  }));\r\n\r\n  return (\r\n    <Modal\r\n      title={modalTitle}\r\n      visible={visible}\r\n      onOk={handleOk}\r\n      confirmLoading={confirmLoading}\r\n      onCancel={handleCancel}\r\n      className={styles.component}\r\n      maskClosable={false}\r\n      width={undefined} // number | undefined\r\n    >\r\n      <p>{modalText}</p>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default forwardRef(BasicModal);\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  forwardRef,\r\n  Ref,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport styles from \"./VideoPlayer.module.scss\";\r\nimport videojs, { VideoJsPlayer, VideoJsPlayerOptions } from \"video.js\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { DebateName } from \"../../ConceptualRecurrencePlot/DataImporter\";\r\n\r\ninterface ComponentProps {\r\n  name: DebateName | \"test_ui_introduction\";\r\n  width?: number;\r\n}\r\n\r\nexport interface VideoPlayerRef {\r\n  getVideoCurrentSecondTime: () => number;\r\n  pause: () => void;\r\n}\r\n\r\nfunction VideoPlayer(props: ComponentProps, ref: Ref<VideoPlayerRef>) {\r\n  const [videoJsPlayer, setVideoJsPlayer] = useState<VideoJsPlayer>();\r\n  const [timeInterval, setTimeInterval] = useState<NodeJS.Timeout>();\r\n  const [videoSecondTime, setVideoSecondTime] = useState<number>(0);\r\n\r\n  const componentRef = useRef<HTMLDivElement>(null);\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  useEffect(() => {\r\n    const videoJsOptions: VideoJsPlayerOptions = {\r\n      autoplay: false,\r\n      controls: true,\r\n      sources: [\r\n        {\r\n          src: `http://hapsoa.iptime.org:3001/video?name=${props.name}`,\r\n          type: \"video/mp4\",\r\n        },\r\n      ],\r\n      width: props.width ? props.width : componentRef.current!.clientWidth - 32,\r\n      // width: 600,\r\n      playbackRates: [0.75, 1, 1.25, 1.5, 1.75, 2],\r\n    };\r\n\r\n    const resizeListener = (event: UIEvent) => {\r\n      videoJsPlayer.width(\r\n        props.width ? props.width : componentRef.current!.clientWidth - 32\r\n      );\r\n    };\r\n\r\n    const videoJsPlayer = videojs(\r\n      //@ts-ignore\r\n      videoRef.current,\r\n      videoJsOptions,\r\n      function onPlayerReady() {\r\n        console.log(\"onPlayerReady\");\r\n        let isPlaying = false;\r\n        let shiftOn = false;\r\n\r\n        // off basic double click listener\r\n        videoJsPlayer.tech().off(\"dblclick\");\r\n\r\n        videoJsPlayer.on(\"keyup\", (event: KeyboardEvent) => {\r\n          console.log(\"keyup\", event.code);\r\n          switch (event.code) {\r\n            case \"ShiftRight\":\r\n              shiftOn = false;\r\n              break;\r\n            case \"ShiftLeft\":\r\n              shiftOn = false;\r\n              break;\r\n          }\r\n        });\r\n\r\n        videoJsPlayer.on(\"keydown\", (event: KeyboardEvent) => {\r\n          // console.log(\"keydown\", event.code);\r\n          const currentPlaybackRate = videoJsPlayer.playbackRate();\r\n\r\n          switch (event.code) {\r\n            case \"Space\":\r\n              if (isPlaying) {\r\n                videoJsPlayer.pause();\r\n              } else {\r\n                videoJsPlayer.play();\r\n              }\r\n              break;\r\n            case \"ArrowLeft\":\r\n              videoJsPlayer.currentTime(videoJsPlayer.currentTime() - 5);\r\n              break;\r\n            case \"ArrowRight\":\r\n              videoJsPlayer.currentTime(videoJsPlayer.currentTime() + 5);\r\n              break;\r\n            case \"ArrowUp\":\r\n              videoJsPlayer.volume(videoJsPlayer.volume() + 0.1);\r\n              break;\r\n            case \"ArrowDown\":\r\n              videoJsPlayer.volume(videoJsPlayer.volume() - 0.1);\r\n              break;\r\n            case \"ShiftRight\":\r\n              shiftOn = true;\r\n              break;\r\n            case \"ShiftLeft\":\r\n              shiftOn = true;\r\n              break;\r\n            case \"Period\":\r\n              if (shiftOn && currentPlaybackRate < 2) {\r\n                videoJsPlayer.playbackRate(currentPlaybackRate + 0.25);\r\n              }\r\n              break;\r\n            case \"Comma\":\r\n              if (shiftOn && currentPlaybackRate > 0.75) {\r\n                videoJsPlayer.playbackRate(videoJsPlayer.playbackRate() - 0.25);\r\n              }\r\n              break;\r\n          }\r\n        });\r\n\r\n        videoJsPlayer.on(\"play\", () => {\r\n          isPlaying = true;\r\n        });\r\n        videoJsPlayer.on(\"pause\", () => {\r\n          isPlaying = false;\r\n          console.log(\"puase\", videoJsPlayer.currentTime());\r\n        });\r\n\r\n        window.addEventListener(\"resize\", resizeListener);\r\n      }\r\n    );\r\n\r\n    setVideoJsPlayer(videoJsPlayer);\r\n\r\n    // const timeInterval = setInterval(() => {\r\n    //   console.log(\r\n    //     \"video current time\",\r\n    //     Math.floor(videoJsPlayer.currentTime())\r\n    //   );\r\n    // }, 2000);\r\n    // setTimeInterval(timeInterval);\r\n\r\n    return () => {\r\n      console.log(\"unmount\");\r\n      videoJsPlayer.dispose();\r\n      window.removeEventListener(\"resize\", resizeListener);\r\n    };\r\n  }, []);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    getVideoCurrentSecondTime: () => {\r\n      return videoJsPlayer!.currentTime();\r\n    },\r\n    pause: () => {\r\n      if (videoJsPlayer) {\r\n        videoJsPlayer.currentTime(0);\r\n        videoJsPlayer.pause();\r\n      }\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <div className={styles.component} ref={componentRef} data-vjs-palyer>\r\n      <video ref={videoRef} className=\"video-js\" controls></video>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default forwardRef(VideoPlayer);\r\n","/* eslint-disable no-unused-vars */\r\nimport { Image } from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport React, { Ref, useEffect, useImperativeHandle, useRef } from \"react\";\r\nimport VideoPlayer, {\r\n  VideoPlayerRef,\r\n} from \"../../views/VideoSubjectTest/VideoPlayer/VideoPlayer\";\r\nimport styles from \"./TestDescriptionContent.module.scss\";\r\n\r\ninterface ComponentProps {}\r\n\r\nexport interface TestDescriptionContentRef {\r\n  pauseVideo: () => void;\r\n}\r\n\r\nfunction TestDescription(\r\n  props: ComponentProps,\r\n  ref: Ref<TestDescriptionContentRef>\r\n) {\r\n  useEffect(() => {}, []);\r\n  const videoPlayerRef = useRef<VideoPlayerRef>(null);\r\n\r\n  // useImperativeHandle(ref, () => ({\r\n  //   pauseVideo: () => {\r\n  //     videoPlayerRef.current!.pause();\r\n  //   },\r\n  // }));\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      <div className={styles.bodyContentZone}>\r\n        <Image src=\"/evaluation/debaters.png\" width={\"100%\"}></Image>\r\n        <div>&nbsp;</div>\r\n        <Title className={styles.subtitle} level={5}>\r\n          연구 제목\r\n        </Title>\r\n        <div className={styles.lastContentText}>\r\n          토론의 주제 분리 모델을 평가하기 위한 주제 분리 정보 수집\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        <Title className={styles.subtitle} level={5}>\r\n          연구 목적\r\n        </Title>\r\n        <div className={styles.lastContentText}>\r\n          <a\r\n            href=\"https://conceptual-map-of-debate.web.app/\"\r\n            // eslint-disable-next-line react/jsx-no-target-blank\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            토론의 주제 분리 모델\r\n          </a>\r\n          과 인간이 직접 주제를 분리한 결과가 얼마나 일치하는지 평가하고자\r\n          합니다. 이를 위해 피험자가 직접 주제 분리한 결과 정보를 수집하고자\r\n          합니다.\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        <Title className={styles.subtitle} level={5}>\r\n          연구담당자 정보\r\n        </Title>\r\n        <div className={styles.lastContentText}>\r\n          <div>- 성명: 허재종</div>\r\n          <div>\r\n            - 소속기관: 아주대학교 미디어학과 통합 디자인 연구실(Integrated\r\n            Design Lab)\r\n          </div>\r\n          <div>- 연락처: 010-8608-6708 / hapsoa@ajou.ac.kr</div>\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        <Title className={styles.subtitle} level={5}>\r\n          연구참여 시간\r\n        </Title>\r\n        <div className={styles.lastContentText}>\r\n          연구참여 제한 시간은 없으나, 예상 소요시간은 1시간 내외 정도입니다.\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        <Title className={styles.subtitle} level={5}>\r\n          연구참여 및 연구수행 방법\r\n        </Title>\r\n        <div>\r\n          여러분은{\" \"}\r\n          <b>\r\n            MBC 100분토론 TV프로그램 1회분을 처음부터 제시된 지점까지 시청하면서\r\n            주제를 분리\r\n          </b>\r\n          하시면 됩니다.\r\n        </div>\r\n        {/* <div>\r\n            &nbsp;&nbsp;여기서 주제 분리란 대화를 주제를 기준으로 나누는 것을\r\n            뜻합니다. 토론에서는 하나의 큰 주제를 놓고 여러 각도에서 쟁점\r\n            사안들을 조명하거나 작은 주제들로 나누어 의견을 교환합니다. 이러한\r\n            쟁점 사안들이나 작은 주제들로 대화를 나누는 것을 토론에서의 주제\r\n            분리라고 할 수 있습니다. 정리하면 토론에서의 주제 분리는 토론자들 간\r\n            대화의 흐름이 전환되는 지점에서 대화를 나누는 것입니다.\r\n          </div> */}\r\n        <div>\r\n          &nbsp;&nbsp;토론에서는 하나의 큰 주제를 놓고 여러 각도에서 쟁점\r\n          사안들을 조명하거나 작은 주제들로 나누어 의견을 교환합니다. 이러한{\" \"}\r\n          <b>\r\n            쟁점 사안들이나 작은 주제들로 대화의 흐름이 전환되는 지점을 나누는\r\n            행위를 토론에서의 주제 분리\r\n          </b>\r\n          라고 할 수 있습니다.\r\n        </div>\r\n        {/* <div>\r\n            &nbsp;&nbsp;주제 분리에 대한 예시를 100분토론 [&apos;정년연장,\r\n            고령화 해법인가?&apos;]로 든다면 다음과 같을 수 있습니다. 같은\r\n            색상이 칠해지는 발화 및 문장들은 하나의 주제로 분리됨을 나타냅니다.\r\n          </div> */}\r\n        <div>\r\n          &nbsp;&nbsp;토론에서의 주제 분리 예시를 [100분토론 &apos;정년연장,\r\n          고령화 해법인가?&apos;]의 대본으로 든다면 다음과 같을 수 있습니다.\r\n          대본 내용에 칠해진 각 색상(빨간색, 노란색)의 하이라이트는 나뉘어진\r\n          주제들을 나타냅니다.\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        <div>예시 1)</div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Image src=\"/evaluation/example_1.png\" width={\"100%\"}></Image>\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        <div>&nbsp;</div>\r\n        <div>예시 2)</div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Image src=\"/evaluation/example_2.png\" width={\"100%\"}></Image>\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        <div>&nbsp;</div>\r\n        <div>예시 3)</div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Image src=\"/evaluation/example_3.png\" width={\"100%\"}></Image>\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        <div>&nbsp;</div>\r\n        <div>예시 4)</div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Image src=\"/evaluation/example_4.png\" width={\"100%\"}></Image>\r\n        </div>\r\n        {/* <div>\r\n            제시된 MBC 100분토론 TV프로그램의 1회분의 토론 대본을 읽으면서\r\n            주제가 분리된다고 판단하는 곳에 아래의 예시 그림 같이 체크박스\r\n            표시하시면 됩니다.\r\n          </div> */}\r\n        <div>&nbsp;</div>\r\n        <div>&nbsp;</div>\r\n        {/* <div>\r\n            &nbsp;&nbsp;위의 예시는 저희 연구원 1명이 토론자들 간의 대화가\r\n            전환되는 지점이라고 판단이 되는 곳에 표시한 것입니다. 여러분께서는\r\n            본인이 스스로 토론자들 간의 대화가 전환되는 지점이라고 판단이 되는\r\n            곳에 표시해주시면 되겠습니다. 이렇게 여러분께서 스스로 주제 분리\r\n            지점을 표시하는 것이 이번 실험의 내용입니다.\r\n          </div> */}\r\n        <div>\r\n          &nbsp;&nbsp;위의 예시는 저희 연구원 1명이 토론자들 간의 대화가\r\n          전환되는 지점이라고 판단이 되는 곳에 표시한 것입니다. 여러분께서는\r\n          토론의 주제를 분리하는 데 있어{\" \"}\r\n          <b>본인이 생각하는 적절한 주제 분리 지점을 찾아 표시</b>해주시면\r\n          됩니다.\r\n        </div>\r\n        <div>\r\n          &nbsp;&nbsp;마지막으로 아래의 주제 분리 실험에 대한 사용자 인터페이스\r\n          환경에 대한 안내 동영상을 시청하시고 실험을 시작하시면 되겠습니다.\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        {/* <div style={{ color: \"#777777\" }}>\r\n          <div>( 동영상으로 교체 예정 )</div>\r\n          <div>1. 실험 전 화면</div>\r\n          <div>&nbsp;</div>\r\n          <div>2. 실험 중 화면</div>\r\n          <div>2.1. 동영상 단축키</div>\r\n          <div>- space : 재생/일시정지</div>\r\n          <div>- 왼쪽 오른쪽 화살표 : 5초 뒤로/앞으로</div>\r\n          <div>- 위 아래 화살표 : 소리 증가/축소</div>\r\n          <div>\r\n            - &#60;(shift + ,)&nbsp;&nbsp;&#62;(shift + .) : 재생 속도\r\n            느리게/빠르게\r\n          </div>\r\n          <div>&nbsp;</div>\r\n          <div>2.2. 스크롤 버튼</div>\r\n          <div>동영상 재생시간에 맞춰 대본 스크롤 기능</div>\r\n          <div>&nbsp;</div>\r\n          <div>2.3. 대본</div>\r\n          <div>체크박스로 주제 분리</div>\r\n          <div>&nbsp;</div>\r\n          <div>2.4. 주제 분리(체크박스)시 함께 발생하는 반응들</div>\r\n          <div>주제 분리 색상, 미니맵, 분리된 주제의 수</div>\r\n          <div>&nbsp;</div>\r\n          <div>3. 실험 후 화면</div>\r\n        </div> */}\r\n        <VideoPlayer\r\n          name=\"test_ui_introduction\"\r\n          width={600}\r\n          ref={videoPlayerRef}\r\n        ></VideoPlayer>\r\n        {/* <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Image\r\n              src=\"/evaluation/example_of_test_subjects.jpg\"\r\n              width={300}\r\n            ></Image>\r\n          </div>\r\n          <div className={styles.lastContentText}>\r\n            &nbsp;&nbsp;체크박스는 발화 혹은 문장이 끝날 때마다 있습니다. 같은\r\n            색상이 칠해지는 발화 및 문장들은 하나의 주제로 분리됨을 나타냅니다.\r\n          </div> */}\r\n        <div>&nbsp;</div>\r\n        <div>&nbsp;</div>\r\n        <Title className={styles.subtitle} level={5}>\r\n          연구대상자에게 예상되는 이익 및 해\r\n        </Title>\r\n        <div>\r\n          여러분께 직접적인 이익이 되는 점은 없으나, 참여하여 주신 연구의 정보를\r\n          바탕으로 더 나은 토론의 주제 분리 모델 개발에 기여하시게 됩니다.\r\n          이를통해 여러분께서는 학문의 외연을 넓히는 데 공헌하시게 됩니다.\r\n        </div>\r\n        <div className={styles.lastContentText}>\r\n          &nbsp;&nbsp;여러분께 예상되는 피해(모든 정신적, 사회적, 정치적,\r\n          신체적, 심리적인 불편이나 위해 등)는 미미할 것으로 예상됩니다. 제시된\r\n          대본을 읽고 글이 분리되는 곳을 표시만 하면 되는 실험이기 때문입니다.\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        <Title className={styles.subtitle} level={5}>\r\n          연구참여에 따른 혜택\r\n        </Title>\r\n        <div className={styles.lastContentText}>\r\n          소정의 사례 1만원을 드립니다.\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        <Title className={styles.subtitle} level={5}>\r\n          자발적 참여, 자유로운 동의의 철회\r\n        </Title>\r\n        <div className={styles.lastContentText}>\r\n          여러분은 언제라도 연구담당자에게 통보하여 동의를 취소할 수 있습니다.\r\n          여러분이 동의하신 것을 철회하면 연구담당자는 여러분의 주제 분리 결과\r\n          정보를 더 이상 사용할 수 없습니다.\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        <Title className={styles.subtitle} level={5}>\r\n          연구자료 및 개인정보 보호에 관한 사항\r\n        </Title>\r\n        {/* <div className={styles.lastContentText}>\r\n            본 연구를 위하여 수집하는 여러분의 개인정보는 없습니다.\r\n          </div> */}\r\n        <div className={styles.lastContentText}>\r\n          <b>본 연구를 위하여 수집하는 여러분의 개인정보</b>는{\" \"}\r\n          <b>연령대, 성별, 직업/전공</b> 입니다. 여러분의{\" \"}\r\n          <b>개인정보를 보유 및 이용하는 기간</b>은 정보수집·이용목적 달성 시\r\n          까지입니다. 여러분은 위 정보수집 및 이용에 대한 수락 여부를 자유롭게\r\n          결정하실 수 있으며, 언제라도 참여를 중단할 권리가 있음을 알려드립니다.\r\n          여러분의 신원을 파악할 수 있는 기록은 비밀로 보장됩니다.\r\n        </div>\r\n        <div>&nbsp;</div>\r\n        <Title className={styles.subtitle} level={5}>\r\n          기타\r\n        </Title>\r\n        {/* <div className={styles.lastContentText}>\r\n            연구내용 및 방법이 설명문/동의서와 다르거나, 보상이나 모집방법 등이\r\n            부당하다고 생각되시거나, 연구참여 거부로 인해 불이익을 받으셨다고\r\n            생각되시거나, 연구참여 후 다양한 문제가 발생하였을 때, 혹은\r\n            연구대상자의 권리 등에 대한 문의가 있을 때에도 아주대학교\r\n            기관생명윤리위원회(031-219-3743~4, ajouirb@ajou.ac.kr)에 연락하실 수\r\n            있습니다.\r\n          </div> */}\r\n        <div>\r\n          연구내용 및 방법이 설명문/동의서와 다르거나, 보상이나 모집방법 등이\r\n          부당하다고 생각되시거나, 연구참여 거부로 인해 불이익을 받으셨다고\r\n          생각되시거나, 연구참여 후 다양한 문제가 발생하였을 때, 혹은\r\n          연구대상자의 권리 등에 대한 문의가 있을 때 연구담당자(010-8608-6708,\r\n          hapsoa@ajou.ac.kr)에게 연락하실 수 있습니다. 연구담당자와 부득이하게\r\n          소통이 안된다면 아주대학교 기관생명윤리위원회(031-219-3743~4,\r\n          ajouirb@ajou.ac.kr)에 연락하실 수 있습니다.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestDescription;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Button, Input, Image, Select } from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport BasicModal, {\r\n  BasicModalRef,\r\n} from \"../../components/BasicModal/BasicModal\";\r\nimport TestDescriptionContent from \"../../components/TestDescriptionContent/TestDescriptionContent\";\r\nimport { DebateName } from \"../ConceptualRecurrencePlot/DataImporter\";\r\nimport styles from \"./TestDescription.module.scss\";\r\nconst { Option } = Select;\r\n\r\ninterface ComponentProps {}\r\n\r\nfunction DescriptionForManualTopicSegmentation(props: ComponentProps) {\r\n  const participationCodeSet: { [code: string]: true } = {\r\n    \"6521c43e-2ccd-4051-a2a6-31abec353205\": true, // 기본소득clipped, 재종\r\n    \"ab522bc9-6633-4d16-8658-de887467e243\": true, // 기본소득clipped, 효지형\r\n    \"6b43e2dc-f31d-417f-bf6b-c2a08fbbe3b3\": true, // 기본소득clipped, 가현\r\n    \"3ba1db51-d13b-411a-b99b-0d66a0d33cc4\": true, // 기본소득clipped, 계량\r\n    \"f5afc24f-63b3-4e6a-9fc7-bf8218b8477b\": true, // 기본소득clipped, 현\r\n    \"6722b3ab-9fa4-4a6f-ab35-f5c6d7501684\": true, // 기본소득clipped, 준우\r\n    \"bc16d03d-b48d-4e73-9fb5-55dee51a7e6f\": true, // 기본소득clipped, 제준, 동관\r\n    \"c3276230-7e18-46cf-ac4c-8dda66f7b77e\": true, // 모병제clipped, 재종\r\n    \"592e3a09-7004-4186-8089-87e3418f9fb9\": true, // 모병제clipped,\r\n    \"3106eccb-36a0-4547-8a6f-1cdcb866fb3c\": true, // 모병제clipped,\r\n    \"df721c05-752d-4178-9165-a2e1ed0185ee\": true, // 모병제clipped,\r\n    \"a851f427-0b35-4fba-aa69-dd117bceb2e7\": true, // 모병제clipped,\r\n    \"10845c4f-a22d-44fd-b1d8-5e28bc6b94ee\": true, // 모병제clipped,\r\n    \"baaae95e-5297-4d2e-a645-78c188f039e2\": true, // 모병제clipped,\r\n    \"d60c72e1-a33f-4da8-a20c-93f2dff2df19\": true, // 정시확대clipped, 재종\r\n    \"aaa5bbb1-dd24-46db-b3af-90d427fd7901\": true, // 정시확대clipped, 진철\r\n    \"7095745a-b33a-455d-85d3-b26b3e6655d3\": true, // 정시확대clipped, 현식\r\n    \"2914926c-c221-4894-add1-cb62d6bab5e7\": true, // 정시확대clipped,\r\n    \"76042868-d27b-4eb3-8bad-a221bd2ba901\": true, // 정시확대clipped,\r\n    \"71039590-a875-4aeb-af82-51dcb73f4b65\": true, // 효지형 지인 코드\r\n    \"880adc77-aae2-4db8-8dc8-8af3ab3b33fb\": true, // 정시확대clipped,\r\n    // *현식, *제준, *준우, 아버지, *광혁, *찬희, 수현, 혜림, 준우 친구들(10명..), 가현 친구들 (2명..)\r\n    // *동관, 정화, 한열\r\n    // 홍걸, 진철, 민석, 두희, 동주, 진수, *봉진\r\n    // 석균, 성배, 재성, 승현\r\n    // 지효, 윤혁, 병욱, 무석, 재성\r\n    // 준엽, 수정, 주원, 윤정\r\n    // 현우조교님, 수현, 태린\r\n    // 정인, 선주, 혜리, 형준, 양지, 혜정\r\n    // 동엽, 양섭\r\n  };\r\n\r\n  const history = useHistory();\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const debateNameOfQuery = query.get(\"debate_name\") as DebateName;\r\n  const participationCodeOfQuery = query.get(\"code\") as string;\r\n  const basicModalRef = useRef<BasicModalRef>(null);\r\n\r\n  const [ageGroup, setAgeGroup] = useState<string>(\"\");\r\n  const [gender, setGender] = useState<string>(\"\");\r\n  const [major, setMajor] = useState<string>(\"\");\r\n  const [participationCode, setParticipationCode] = useState<string>(\r\n    participationCodeOfQuery\r\n  );\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      <div className={styles.titleContainer}>\r\n        <div className={styles.title}>실험 설명문</div>\r\n      </div>\r\n      <div>&nbsp;</div>\r\n      <div>&nbsp;</div>\r\n      <TestDescriptionContent></TestDescriptionContent>\r\n      <div>&nbsp;</div>\r\n      <div>&nbsp;</div>\r\n      <div>&nbsp;</div>\r\n      <div>&nbsp;</div>\r\n      <div className={styles.previousStartStage}>\r\n        <div className={styles.subjectInfoInputContainer}>\r\n          <div\r\n            style={{\r\n              width: 70,\r\n              marginRight: 4,\r\n              lineHeight: \"200%\",\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            연령대 :\r\n          </div>\r\n          <Select\r\n            className={styles.select}\r\n            // defaultValue=\"none\"\r\n            // size=\"small\"\r\n            value={ageGroup}\r\n            onChange={(value: string) => {\r\n              setAgeGroup(value);\r\n            }}\r\n          >\r\n            <Option value=\"underTeen\">0 ~ 9세</Option>\r\n            <Option value=\"teen\">10 ~ 19세</Option>\r\n            <Option value=\"twenty\">20 ~ 29세</Option>\r\n            <Option value=\"thirty\">30 ~ 39세</Option>\r\n            <Option value=\"fourty\">40 ~ 49세</Option>\r\n            <Option value=\"fifthy\">50 ~ 59세</Option>\r\n            <Option value=\"sixty\">60 ~ 69세</Option>\r\n            <Option value=\"overSeventy\">70세 이상</Option>\r\n          </Select>\r\n        </div>\r\n\r\n        <div className={styles.subjectInfoInputContainer}>\r\n          <div\r\n            style={{\r\n              width: 70,\r\n              marginRight: 4,\r\n              lineHeight: \"200%\",\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            성별 :\r\n          </div>\r\n          <Select\r\n            className={styles.select}\r\n            // defaultValue=\"none\"\r\n            // size=\"small\"\r\n            value={gender}\r\n            onChange={(value: string) => {\r\n              setGender(value);\r\n            }}\r\n          >\r\n            <Option value=\"man\">남성</Option>\r\n            <Option value=\"woman\">여성</Option>\r\n          </Select>\r\n        </div>\r\n\r\n        <div className={styles.subjectInfoInputContainer}>\r\n          <div\r\n            style={{\r\n              width: 70,\r\n              marginRight: 4,\r\n              lineHeight: \"200%\",\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            직업/전공 :\r\n          </div>\r\n          <Input\r\n            style={{ width: 170, marginRight: 8 }}\r\n            value={major}\r\n            onChange={(event) => {\r\n              setMajor(event.target.value);\r\n            }}\r\n          ></Input>\r\n        </div>\r\n\r\n        <div className={styles.subjectInfoInputContainer}>\r\n          <div\r\n            style={{\r\n              width: 70,\r\n              marginRight: 4,\r\n              lineHeight: \"200%\",\r\n              textAlign: \"right\",\r\n            }}\r\n          >\r\n            참가 코드 :\r\n          </div>\r\n          <Input\r\n            style={{ width: 170, marginRight: 8 }}\r\n            value={participationCode}\r\n            onChange={(event) => {\r\n              setParticipationCode(event.target.value);\r\n            }}\r\n            disabled\r\n          ></Input>\r\n        </div>\r\n        <div className={styles.startContainer}>\r\n          {/* <Button style={{ marginRight: 12 }}>\r\n            <Link\r\n              to={{\r\n                pathname: \"/test-for-manual-topic-segmentation\",\r\n                state: {\r\n                  ageGroup,\r\n                  gender,\r\n                  major,\r\n                  participationCode,\r\n                },\r\n                search: \"?debate_name=기본소득clipped\",\r\n              }}\r\n            >\r\n              시작 (Only Transcript)\r\n            </Link>\r\n          </Button> */}\r\n\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              if (\r\n                ageGroup === \"\" ||\r\n                gender === \"\" ||\r\n                major === \"\" ||\r\n                participationCode === \"\"\r\n              ) {\r\n                basicModalRef.current!.openModal({\r\n                  title: \"실험 기본 정보 부족\",\r\n                  text:\r\n                    \"연령대, 성별, 직업/전공, 참가코드를 모두 입력해 주세요\",\r\n                  okListener: () => {},\r\n                });\r\n              } else if (!(participationCode in participationCodeSet)) {\r\n                //\r\n                basicModalRef.current!.openModal({\r\n                  title: \"참가 코드 오류\",\r\n                  text: \"참가 코드가 일치하지 않습니다. 다시 확인해 주세요.\",\r\n                  okListener: () => {},\r\n                });\r\n              } else {\r\n                history.push({\r\n                  pathname: \"/video-subject-test\",\r\n                  state: {\r\n                    ageGroup,\r\n                    gender,\r\n                    major,\r\n                    participationCode,\r\n                  },\r\n                  search: `?debate_name=${debateNameOfQuery}`,\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            실험 시작\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <BasicModal ref={basicModalRef}></BasicModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DescriptionForManualTopicSegmentation;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Button, Checkbox, Tooltip } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport React, {\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  Ref,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n} from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Participant,\r\n  makeParticipants,\r\n  ParticipantDict,\r\n} from \"../../../common_functions/makeParticipants\";\r\nimport BasicModal, {\r\n  BasicModalRef,\r\n} from \"../../../components/BasicModal/BasicModal\";\r\nimport {\r\n  SentenceObject,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\nimport { DebateName } from \"../../ConceptualRecurrencePlot/DataImporter\";\r\nimport {\r\n  SubjectRecordInTesting,\r\n  UtteranceIndexSentenceIndexTotalSentenceIndexDict,\r\n} from \"../../ConceptualRecurrencePlot/interfaces\";\r\nimport {\r\n  findSameSentenceAndApplyScrollTopAtMinimap,\r\n  getSentenceDataSetAtViewport,\r\n  makeBodyTextBackgroundColor,\r\n  makeBodyTextBackgroundColorInMinimap,\r\n  submitTestResult,\r\n} from \"../../TranscriptSubjectTest/TestSubjectsFunctions\";\r\nimport styles from \"./TestTranscriptComponent.module.scss\";\r\n\r\ninterface ComponentProps {\r\n  debateName: DebateName;\r\n}\r\n\r\nexport interface TestTranscriptComponentRef {\r\n  totalSentenceObjects: SentenceObject[];\r\n  bodyTextContainerRef: React.RefObject<HTMLDivElement>;\r\n  sentenceIndexesOfSegments: number[];\r\n}\r\n\r\nfunction TestTranscriptComponent(\r\n  props: ComponentProps,\r\n  ref: Ref<TestTranscriptComponentRef>\r\n) {\r\n  const history = useHistory();\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const locationState = useLocation<{\r\n    ageGroup: string;\r\n    gender: string;\r\n    major: string;\r\n    participationCode: string;\r\n  }>().state;\r\n  const debateNameOfQuery = query.get(\"debate_name\") as DebateName;\r\n\r\n  const [utteranceObjects, setUtteranceObjects] = useState<UtteranceObject[]>(\r\n    []\r\n  );\r\n  const [participantDict, setParticipantDict] = useState<ParticipantDict>({});\r\n  const [totalSentenceObjects, setTotalSentenceObjects] = useState<\r\n    SentenceObject[]\r\n  >([]);\r\n  // TODO We can insert test-result here\r\n  const [sentenceIndexesOfSegments, setSentenceIndexesOfSegments] = useState<\r\n    number[]\r\n  >([]);\r\n  const [checkboxes, setCheckboxes] = useState<boolean[]>([]);\r\n  const [\r\n    utteranceIndexSentenceIndexTotalSentenceIndexDict,\r\n    setUtteranceIndexSentenceIndexTotalSentenceIndexDict,\r\n  ] = useState<UtteranceIndexSentenceIndexTotalSentenceIndexDict>({});\r\n\r\n  const bodyTextContainerRef = useRef<HTMLDivElement>(null);\r\n  const minimapRef = useRef<HTMLDivElement>(null);\r\n  const [minimapViewportTop, setMinimapViewportTop] = useState<number>(0);\r\n  const [minimapViewportHeight, setMinimapViewportHeight] = useState<number>(\r\n    100\r\n  );\r\n  const basicModalRef = useRef<BasicModalRef>(null);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.debateName === \"sample\" ||\r\n      props.debateName === \"기본소득\" ||\r\n      props.debateName === \"정시확대\" ||\r\n      props.debateName === \"모병제\" ||\r\n      props.debateName === \"기본소득clipped\" ||\r\n      props.debateName === \"정시확대clipped\" ||\r\n      props.debateName === \"모병제clipped\" ||\r\n      props.debateName === \"집값\" ||\r\n      props.debateName === \"정년연장\"\r\n    ) {\r\n      const utteranceObjects: UtteranceObject[] = require(`../../../data/${props.debateName}/utterance_objects.json`);\r\n      const totalSentenceObjects: SentenceObject[] = [];\r\n\r\n      // make totalSentenceObjects\r\n      _.forEach(utteranceObjects, (utteranceObject, utteranceIndex) => {\r\n        _.forEach(\r\n          utteranceObject.sentenceObjects,\r\n          (sentenceObject, sentenceIndex) => {\r\n            totalSentenceObjects.push(sentenceObject);\r\n          }\r\n        );\r\n      });\r\n\r\n      // make utterance_index => sentence_index => total_sentence_index\r\n      const utteranceIndexSentenceIndexTotalSentenceIndexDict: UtteranceIndexSentenceIndexTotalSentenceIndexDict = {};\r\n      let totalSentenceIndex: number = 0;\r\n      _.forEach(utteranceObjects, (utteranceObject, utteranceIndex) => {\r\n        utteranceIndexSentenceIndexTotalSentenceIndexDict[utteranceIndex] = {};\r\n        _.forEach(\r\n          utteranceObject.sentenceObjects,\r\n          (sentenceObject, sentenceIndex) => {\r\n            utteranceIndexSentenceIndexTotalSentenceIndexDict[utteranceIndex][\r\n              sentenceIndex\r\n            ] = totalSentenceIndex;\r\n            totalSentenceIndex++;\r\n          }\r\n        );\r\n      });\r\n\r\n      const participants: Participant[] = makeParticipants(\r\n        props.debateName,\r\n        utteranceObjects\r\n      );\r\n\r\n      const participantDict: ParticipantDict = _.keyBy(\r\n        participants,\r\n        (participant) => participant.name\r\n      );\r\n\r\n      setUtteranceObjects(utteranceObjects);\r\n      setTotalSentenceObjects(totalSentenceObjects);\r\n\r\n      const checkboxes = new Array<boolean>(totalSentenceObjects.length).fill(\r\n        false\r\n      );\r\n      _.forEach(sentenceIndexesOfSegments, (totalSentenceIndex) => {\r\n        checkboxes[totalSentenceIndex] = true;\r\n      });\r\n\r\n      setCheckboxes(checkboxes);\r\n      setUtteranceIndexSentenceIndexTotalSentenceIndexDict(\r\n        utteranceIndexSentenceIndexTotalSentenceIndexDict\r\n      );\r\n      setParticipantDict(participantDict);\r\n\r\n      console.log(\"totalSentenceObjects\", totalSentenceObjects);\r\n      console.log(\r\n        \"utteranceIndexSentenceIndexTotalSentenceIndexDict\",\r\n        utteranceIndexSentenceIndexTotalSentenceIndexDict\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    totalSentenceObjects,\r\n    bodyTextContainerRef,\r\n    sentenceIndexesOfSegments,\r\n  }));\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      <div style={{ height: 50, display: \"flex\" }}>\r\n        <div className={styles.guideContainer}>\r\n          <div className={styles.guideText}>\r\n            주제를 분리할 곳에 체크박스 표시해주세요.\r\n          </div>\r\n          <div className={styles.guideText}>\r\n            {`분리된 주제의 수: ${sentenceIndexesOfSegments.length}개 `}\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: 100,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Tooltip placement=\"left\" title={\"결과물 제출하기\"}>\r\n            <Button\r\n              onClick={() => {\r\n                if (\r\n                  sentenceIndexesOfSegments[\r\n                    sentenceIndexesOfSegments.length - 1\r\n                  ] ===\r\n                  totalSentenceObjects.length - 1\r\n                ) {\r\n                  basicModalRef.current!.openModal({\r\n                    title: \"제출\",\r\n                    text:\r\n                      \"현재 분리된 주제 결과들로 결과물을 제출하시겠습니까?\",\r\n                    okListener: () => {\r\n                      return new Promise((resolve, reject) => {\r\n                        const subjectRecordInTesting: SubjectRecordInTesting = {\r\n                          ...locationState,\r\n                          debateName: debateNameOfQuery,\r\n                          sentenceIndexesOfSegments,\r\n                        };\r\n\r\n                        submitTestResult(subjectRecordInTesting)\r\n                          .then(() => {\r\n                            resolve(\"ok\");\r\n                            history.push(\"/subject-test-end\");\r\n                          })\r\n                          .catch((error) => {\r\n                            basicModalRef.current!.openModal({\r\n                              title: \"제출 실패\",\r\n                              text: `서버와 통신이 되지 않습니다. 이 오류를 복사해서 담당연구자에게 보내주시면 감사하겠습니다. 주제 분리 결과 : ${sentenceIndexesOfSegments.toString()}`,\r\n                              okListener: null,\r\n                            });\r\n                            console.log(\"server error\", error);\r\n                          });\r\n                      });\r\n                    },\r\n                  });\r\n                } else {\r\n                  basicModalRef.current!.openModal({\r\n                    title: \"경고\",\r\n                    text:\r\n                      \"대본 마지막까지 주제 분리해 주세요!\\n (대본 마지막까지 색칠되어야 합니다)\",\r\n                    okListener: () => {},\r\n                  });\r\n                }\r\n              }}\r\n              type=\"primary\"\r\n            >\r\n              제출하기\r\n            </Button>\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.transcriptContainer}>\r\n        <div\r\n          ref={bodyTextContainerRef}\r\n          className={styles.bodyTextContainer}\r\n          onScroll={_.debounce(() => {\r\n            const dataSetOfSentence = getSentenceDataSetAtViewport(\r\n              bodyTextContainerRef\r\n            );\r\n            const dataSetOfSentenceInMinimap = findSameSentenceAndApplyScrollTopAtMinimap(\r\n              minimapRef,\r\n              dataSetOfSentence.firstSentenceInViewport,\r\n              dataSetOfSentence.firstSentenceOverViewport\r\n            );\r\n            setMinimapViewportTop(dataSetOfSentenceInMinimap.firstSentenceTop);\r\n            const minimapViewportHeight =\r\n              dataSetOfSentenceInMinimap.lastSentenceTop -\r\n              dataSetOfSentenceInMinimap.firstSentenceTop;\r\n            setMinimapViewportHeight(minimapViewportHeight);\r\n          }, 50)}\r\n        >\r\n          {_.map(utteranceObjects, (utteranceObject, utteranceIndex) => {\r\n            const lastSentenceIndexInUtterance =\r\n              utteranceIndexSentenceIndexTotalSentenceIndexDict[utteranceIndex][\r\n                utteranceObject.sentenceObjects.length - 1\r\n              ];\r\n\r\n            return (\r\n              <div key={`utterance-${utteranceIndex}`} style={{ width: 392 }}>\r\n                <div>\r\n                  <span\r\n                    style={{\r\n                      color: participantDict[utteranceObject.name].color,\r\n                    }}\r\n                  >\r\n                    {utteranceObject.name}\r\n                  </span>\r\n                  <span>{` (${utteranceObject.sentenceObjects[0].time} ~ ${\r\n                    utteranceObject.sentenceObjects[\r\n                      utteranceObject.sentenceObjects.length - 1\r\n                    ].time\r\n                  })`}</span>\r\n                  {/* {`${utteranceObject.name} (${utteranceObject.sentenceObjects[0].time})`} */}\r\n                </div>\r\n                {_.map(\r\n                  utteranceObject.sentenceObjects,\r\n                  (sentenceObject, sentenceIndex) => {\r\n                    if (\r\n                      sentenceIndex <\r\n                      utteranceObject.sentenceObjects.length - 1\r\n                    ) {\r\n                      const totalSentenceIndex =\r\n                        utteranceIndexSentenceIndexTotalSentenceIndexDict[\r\n                          utteranceIndex\r\n                        ][sentenceIndex];\r\n                      return (\r\n                        <span\r\n                          key={`sentence-${utteranceIndex}-${sentenceIndex}`}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              backgroundColor: makeBodyTextBackgroundColor(\r\n                                totalSentenceIndex,\r\n                                sentenceIndexesOfSegments\r\n                              ),\r\n                            }}\r\n                          >\r\n                            {sentenceObject.sentence}\r\n                            {/* {`${sentenceObject.sentence}(${sentenceObject.time})`} */}\r\n                          </span>\r\n                          <Checkbox\r\n                            checked={checkboxes[totalSentenceIndex]}\r\n                            onChange={(event) => {\r\n                              checkboxes[totalSentenceIndex] =\r\n                                event.target.checked;\r\n                              setCheckboxes(checkboxes);\r\n\r\n                              const sentenceIndexesOfSegments: number[] = [];\r\n                              _.forEach(\r\n                                checkboxes,\r\n                                (checkbox, checkboxIndex) => {\r\n                                  if (checkbox) {\r\n                                    sentenceIndexesOfSegments.push(\r\n                                      checkboxIndex\r\n                                    );\r\n                                  }\r\n                                }\r\n                              );\r\n                              setSentenceIndexesOfSegments(\r\n                                sentenceIndexesOfSegments\r\n                              );\r\n                            }}\r\n                            style={{ marginRight: 8 }}\r\n                          ></Checkbox>\r\n                        </span>\r\n                      );\r\n                    } else {\r\n                      const totalSentenceIndex =\r\n                        utteranceIndexSentenceIndexTotalSentenceIndexDict[\r\n                          utteranceIndex\r\n                        ][utteranceObject.sentenceObjects.length - 1];\r\n                      return (\r\n                        <span\r\n                          key={`sentence-${utteranceIndex}-${sentenceIndex}`}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              backgroundColor: makeBodyTextBackgroundColor(\r\n                                totalSentenceIndex,\r\n                                sentenceIndexesOfSegments\r\n                              ),\r\n                            }}\r\n                          >\r\n                            {sentenceObject.sentence}\r\n                            {/* {`${sentenceObject.sentence}(${sentenceObject.time})`} */}\r\n                          </span>\r\n                        </span>\r\n                      );\r\n                    }\r\n                  }\r\n                )}\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <Checkbox\r\n                    checked={checkboxes[lastSentenceIndexInUtterance]}\r\n                    onChange={(event) => {\r\n                      checkboxes[lastSentenceIndexInUtterance] =\r\n                        event.target.checked;\r\n                      setCheckboxes(checkboxes);\r\n\r\n                      const sentenceIndexesOfSegments: number[] = [];\r\n                      _.forEach(checkboxes, (checkbox, checkboxIndex) => {\r\n                        if (checkbox) {\r\n                          sentenceIndexesOfSegments.push(checkboxIndex);\r\n                        }\r\n                      });\r\n                      setSentenceIndexesOfSegments(sentenceIndexesOfSegments);\r\n                    }}\r\n                    style={{ marginTop: 8, marginBottom: 8 }}\r\n                  ></Checkbox>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {/* <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button>\r\n              제출하기\r\n            </Button>\r\n          </div> */}\r\n        </div>\r\n\r\n        <div className={styles.minimap} ref={minimapRef}>\r\n          <div>\r\n            {_.map(utteranceObjects, (utteranceObject, utteranceIndex) => {\r\n              return (\r\n                <div\r\n                  key={`utterance-${utteranceIndex}`}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      color: participantDict[utteranceObject.name].color,\r\n                    }}\r\n                  >\r\n                    {utteranceObject.name}\r\n                  </div>\r\n                  {_.map(\r\n                    utteranceObject.sentenceObjects,\r\n                    (sentenceObject, sentenceIndex) => {\r\n                      const totalSentenceIndex =\r\n                        utteranceIndexSentenceIndexTotalSentenceIndexDict[\r\n                          utteranceIndex\r\n                        ][sentenceIndex];\r\n                      return (\r\n                        <span\r\n                          key={`sentence-${utteranceIndex}-${sentenceIndex}`}\r\n                        >\r\n                          <span\r\n                            style={{\r\n                              backgroundColor: makeBodyTextBackgroundColorInMinimap(\r\n                                totalSentenceIndex,\r\n                                sentenceIndexesOfSegments\r\n                              ),\r\n                            }}\r\n                          >\r\n                            {sentenceObject.sentence}\r\n                          </span>\r\n                        </span>\r\n                      );\r\n                    }\r\n                  )}\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      marginBottom: 2,\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              top: minimapViewportTop,\r\n              left: 0,\r\n              width: \"100%\",\r\n              // height: minimapViewportHeight,\r\n              height: 300,\r\n              backgroundColor: \"rgba(0, 0, 0, 0.3)\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n\r\n      <BasicModal ref={basicModalRef}></BasicModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default forwardRef(TestTranscriptComponent);\r\n","/* eslint-disable no-unused-vars */\r\nimport { Modal, Image } from \"antd\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport React, {\r\n  forwardRef,\r\n  Ref,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport TestDescriptionContent, {\r\n  TestDescriptionContentRef,\r\n} from \"../../../components/TestDescriptionContent/TestDescriptionContent\";\r\nimport styles from \"./DescriptionModal.module.scss\";\r\n\r\ninterface ComponentProps {\r\n  height: number;\r\n}\r\n\r\nexport interface DescriptionModalRef {\r\n  openModal: (p: {\r\n    title: string;\r\n    text: string;\r\n    okListener: () => void;\r\n  }) => void;\r\n}\r\n\r\nlet okListener: (() => void) | null = null;\r\n\r\nfunction DescriptionModal(\r\n  props: ComponentProps,\r\n  ref: Ref<DescriptionModalRef>\r\n) {\r\n  const [visible, setVisible] = React.useState<boolean>(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState<boolean>(false);\r\n  const [modalTitle, setModalTitle] = React.useState<string>(\"title\");\r\n  const [modalText, setModalText] = React.useState<string>(\r\n    \"Content of the modal\"\r\n  );\r\n  const [modalHeight, setModalHeight] = React.useState<number>(500);\r\n\r\n  const testDescriptionContentRef = useRef<TestDescriptionContentRef>(null);\r\n\r\n  const openModal = (p: {\r\n    title: string;\r\n    text: string;\r\n    okListener: () => void;\r\n  }) => {\r\n    setModalTitle(p.title);\r\n    setModalText(p.text);\r\n\r\n    okListener = p.okListener;\r\n\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n    if (okListener) {\r\n      okListener();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const resizeListener = (event: UIEvent) => {\r\n      // videoJsPlayer.width(componentRef.current!.clientWidth - 32);\r\n\r\n      //\r\n      setModalHeight(window.innerHeight - 300);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", resizeListener);\r\n\r\n    window.dispatchEvent(new Event(\"resize\"));\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resizeListener);\r\n    };\r\n  }, []);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    openModal,\r\n  }));\r\n\r\n  return (\r\n    <Modal\r\n      title={modalTitle}\r\n      visible={visible}\r\n      onOk={handleOk}\r\n      confirmLoading={confirmLoading}\r\n      onCancel={handleCancel}\r\n      className={styles.component}\r\n      maskClosable={false}\r\n      width={700} // number | undefined\r\n      bodyStyle={{ height: modalHeight, overflow: \"auto\" }}\r\n    >\r\n      <TestDescriptionContent\r\n      // ref={testDescriptionContentRef}\r\n      ></TestDescriptionContent>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default forwardRef(DescriptionModal);\r\n","/* eslint-disable no-unused-vars */\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { DebateName } from \"../ConceptualRecurrencePlot/DataImporter\";\r\nimport styles from \"./VideoSubjectTest.module.scss\";\r\nimport videojs, { VideoJsPlayer, VideoJsPlayerOptions } from \"video.js\";\r\nimport { Button, Tooltip } from \"antd\";\r\nimport VideoPlayer, { VideoPlayerRef } from \"./VideoPlayer/VideoPlayer\";\r\nimport TestTranscriptComponent, {\r\n  TestTranscriptComponentRef,\r\n} from \"./TestTranscriptComponent/TestTranscriptComponent\";\r\nimport { applyScrollTopAtTranscript } from \"../TranscriptSubjectTest/TestSubjectsFunctions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCoffee,\r\n  faQuestion,\r\n  faSort,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport DescriptionModal, {\r\n  DescriptionModalRef,\r\n} from \"./DescriptionModal/DescriptionModal\";\r\n\r\ninterface ComponentProps {}\r\n\r\nfunction VideoSubjectTest(props: ComponentProps) {\r\n  const history = useHistory();\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const debateNameOfQuery = query.get(\"debate_name\") as DebateName;\r\n  const locationState = useLocation<{\r\n    ageGroup: string;\r\n    gender: string;\r\n    major: string;\r\n    participationCode: string;\r\n  }>().state;\r\n\r\n  const leftPartRef = useRef<HTMLDivElement>(null);\r\n  const videoPlayerRef = useRef<VideoPlayerRef>(null);\r\n  const transcriptWithCheckboxRef = useRef<TestTranscriptComponentRef>(null);\r\n  const descriptionModalRef = useRef<DescriptionModalRef>(null);\r\n\r\n  const [debateOriginalTitle, setDebateOriginalTitle] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"locationState\", locationState);\r\n    if (\r\n      !locationState ||\r\n      locationState.ageGroup === \"\" ||\r\n      locationState.gender === \"\" ||\r\n      locationState.major === \"\" ||\r\n      locationState.participationCode === \"\"\r\n    ) {\r\n      history.push(\"/description-for-manual-topic-segmentation\");\r\n    }\r\n\r\n    switch (debateNameOfQuery) {\r\n      case \"기본소득\":\r\n        setDebateOriginalTitle(\"'기본소득' 시대, 과연 올까?\");\r\n        break;\r\n      case \"기본소득clipped\":\r\n        setDebateOriginalTitle(\"'기본소득' 시대, 과연 올까?\");\r\n        break;\r\n      case \"정시확대\":\r\n        setDebateOriginalTitle(\"'정시 확대' 논란, 무엇이 공정한가\");\r\n        break;\r\n      case \"정시확대clipped\":\r\n        setDebateOriginalTitle(\"'정시 확대' 논란, 무엇이 공정한가\");\r\n        break;\r\n      case \"모병제\":\r\n        setDebateOriginalTitle(\"다시 불거진 '모병제' 논란\");\r\n        break;\r\n      case \"모병제clipped\":\r\n        setDebateOriginalTitle(\"다시 불거진 '모병제' 논란\");\r\n        break;\r\n      case \"집값\":\r\n        setDebateOriginalTitle(\"집 값, 과연 이번엔 잡힐까?\");\r\n        break;\r\n      case \"정년연장\":\r\n        setDebateOriginalTitle(\"'정년 연장' 고령화 해법인가, 세대 갈등인가\");\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      <div className={styles.leftPart} ref={leftPartRef}>\r\n        <div className={styles.headline}>\r\n          {/* <Title level={2} className={styles.title}>\r\n            주제 분리 실험\r\n          </Title> */}\r\n          {/* <div className={styles.title}>실험 중</div> */}\r\n          <div className={styles.title}>{debateOriginalTitle}</div>\r\n\r\n          <Tooltip placement=\"right\" title={\"실험 설명문 다시보기\"}>\r\n            <Button\r\n              shape=\"circle\"\r\n              size=\"small\"\r\n              type=\"dashed\"\r\n              className={styles.questionButton}\r\n              onClick={() => {\r\n                descriptionModalRef.current!.openModal({\r\n                  title: \"실험 설명문\",\r\n                  text: \"\",\r\n                  okListener: () => {},\r\n                });\r\n              }}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={faQuestion}\r\n                className={styles.questionIcon}\r\n              />\r\n            </Button>\r\n          </Tooltip>\r\n          <DescriptionModal\r\n            ref={descriptionModalRef}\r\n            height={\r\n              leftPartRef.current\r\n                ? leftPartRef.current!.clientHeight - 300\r\n                : 600\r\n            }\r\n          ></DescriptionModal>\r\n        </div>\r\n        <div style={{ width: \"100%\" }}>\r\n          <VideoPlayer\r\n            ref={videoPlayerRef}\r\n            name={debateNameOfQuery}\r\n          ></VideoPlayer>\r\n          {/* <video controls width=\"98%\">\r\n            <source src=\"http://localhost:3001/video\" type=\"video/mp4\"></source>\r\n            Sorry, your browser does not support embedded videos.\r\n          </video> */}\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          {/* Scroll Button */}\r\n          <Button\r\n            shape=\"circle\"\r\n            size=\"large\"\r\n            style={{\r\n              marginTop: 16,\r\n              marginRight: 16,\r\n              padding: 0,\r\n              color: \"#ffffff\",\r\n              borderColor: \"#aaaaaa\",\r\n              backgroundColor: \"#aaaaaa\",\r\n            }}\r\n            onClick={() => {\r\n              applyScrollTopAtTranscript(\r\n                videoPlayerRef.current!.getVideoCurrentSecondTime(),\r\n                transcriptWithCheckboxRef.current!.totalSentenceObjects,\r\n                transcriptWithCheckboxRef.current!.bodyTextContainerRef,\r\n                transcriptWithCheckboxRef.current!.sentenceIndexesOfSegments\r\n              );\r\n            }}\r\n          >\r\n            <svg width={40} style={{ fill: \"#ffffff\" }}>\r\n              <g\r\n                style={{\r\n                  transform: \"scale(0.4) translate(0px, -2px)\",\r\n                  // transformOrigin: \"0 0\",\r\n                }}\r\n              >\r\n                <path\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  d=\"M32,41v18c0,9.9,8.1,18,18,18c9.9,0,18-8.1,18-18V41c0-9.9-8.1-18-18-18C40.1,23,32,31.1,32,41z M50,27c7.7,0,14,6.3,14,14  v18c0,7.7-6.3,14-14,14s-14-6.3-14-14V41C36,33.3,42.3,27,50,27z\"\r\n                />\r\n                <path\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  d=\"M50,44c1.1,0,2-0.9,2-2v-6c0-1.1-0.9-2-2-2s-2,0.9-2,2v6C48,43.1,48.9,44,50,44z\"\r\n                />\r\n                <path\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  d=\"M48.6,92.4C49,92.8,49.5,93,50,93s1-0.2,1.4-0.6l5-5c0.8-0.8,0.8-2,0-2.8s-2-0.8-2.8,0L50,88.2l-3.6-3.6  c-0.8-0.8-2-0.8-2.8,0c-0.8,0.8-0.8,2,0,2.8L48.6,92.4z\"\r\n                />\r\n                <path\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  d=\"M48.6,7.6l-5,5c-0.8,0.8-0.8,2,0,2.8C44,15.8,44.5,16,45,16s1-0.2,1.4-0.6l3.6-3.6l3.6,3.6C54,15.8,54.5,16,55,16  s1-0.2,1.4-0.6c0.8-0.8,0.8-2,0-2.8l-5-5C50.6,6.8,49.4,6.8,48.6,7.6z\"\r\n                />\r\n              </g>\r\n            </svg>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className={styles.rightPart}>\r\n        <TestTranscriptComponent\r\n          ref={transcriptWithCheckboxRef}\r\n          debateName={debateNameOfQuery}\r\n        ></TestTranscriptComponent>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoSubjectTest;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect } from \"react\";\r\nimport styles from \"./SubjectTestEnd.module.scss\";\r\n\r\ninterface ComponentProps {}\r\n\r\nfunction SubjectTestEnd(props: ComponentProps) {\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      <div className={styles.text} style={{ marginTop: \"10%\" }}>\r\n        실험이 끝났습니다\r\n      </div>\r\n      <div className={styles.text}>감사합니다</div>\r\n      <div style={{ width: 600, marginTop: 32 }}>\r\n        실험이 마음에 드셨나요? 혹시 그렇다면 다른 토론으로 실험에 다시 참여하실\r\n        수 있습니다. 실험에 참가한 수만큼 실험 참가 사례를 중복해 드립니다. 관심\r\n        있으신 분은 연구담당자 허재종(010-8608-6708, hapsoa@ajou.ac.kr)에게\r\n        연락주세요.\r\n      </div>\r\n      <div>&nbsp;</div>\r\n      <div>실험에 참여해주신 모든 여러분께 감사드립니다. 좋은 하루 되세요!</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubjectTestEnd;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Checkbox } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { ParticipantDict } from \"../../common_functions/makeParticipants\";\r\nimport {\r\n  SentenceObject,\r\n  UtteranceObject,\r\n} from \"../../interfaces/DebateDataInterface\";\r\nimport { UtteranceIndexSentenceIndexTotalSentenceIndexDict } from \"../ConceptualRecurrencePlot/interfaces\";\r\nimport {\r\n  getSentenceDataSetAtViewport,\r\n  findSameSentenceAndApplyScrollTopAtMinimap,\r\n  makeBodyTextBackgroundColor,\r\n} from \"../TranscriptSubjectTest/TestSubjectsFunctions\";\r\nimport styles from \"./SampleViewOfTopicSegmentation.module.scss\";\r\n\r\ninterface ComponentProps {}\r\n\r\nfunction SampleViewOfTopicSegmentation(props: ComponentProps) {\r\n  const [utteranceObjects, setUtteranceObjects] = useState<UtteranceObject[]>(\r\n    []\r\n  );\r\n  const [participantDict, setParticipantDict] = useState<ParticipantDict>({});\r\n  // const [totalSentenceObjects, setTotalSentenceObjects] = useState<\r\n  //   SentenceObject[]\r\n  // >([]);\r\n  const [sentenceIndexesOfSegments, setSentenceIndexesOfSegments] = useState<\r\n    number[]\r\n  >([]);\r\n  const [checkboxes, setCheckboxes] = useState<boolean[]>([]);\r\n  const [\r\n    utteranceIndexSentenceIndexTotalSentenceIndexDict,\r\n    setUtteranceIndexSentenceIndexTotalSentenceIndexDict,\r\n  ] = useState<UtteranceIndexSentenceIndexTotalSentenceIndexDict>({});\r\n  const bodyTextContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const sampleName: string = \"sample_4\";\r\n\r\n    if (\r\n      sampleName === \"sample_1\" ||\r\n      sampleName === \"sample_2\" ||\r\n      sampleName === \"sample_3\" ||\r\n      sampleName === \"sample_4\"\r\n    ) {\r\n      const utteranceObjects: UtteranceObject[] = require(`../../data/test_description_samples/${sampleName}.json`);\r\n      const totalSentenceObjects: SentenceObject[] = [];\r\n\r\n      // make totalSentenceObjects\r\n      _.forEach(utteranceObjects, (utteranceObject, utteranceIndex) => {\r\n        _.forEach(\r\n          utteranceObject.sentenceObjects,\r\n          (sentenceObject, sentenceIndex) => {\r\n            totalSentenceObjects.push(sentenceObject);\r\n          }\r\n        );\r\n      });\r\n\r\n      // make utterance_index => sentence_index => total_sentence_index\r\n      const utteranceIndexSentenceIndexTotalSentenceIndexDict: UtteranceIndexSentenceIndexTotalSentenceIndexDict = {};\r\n      let totalSentenceIndex: number = 0;\r\n      _.forEach(utteranceObjects, (utteranceObject, utteranceIndex) => {\r\n        utteranceIndexSentenceIndexTotalSentenceIndexDict[utteranceIndex] = {};\r\n        _.forEach(\r\n          utteranceObject.sentenceObjects,\r\n          (sentenceObject, sentenceIndex) => {\r\n            utteranceIndexSentenceIndexTotalSentenceIndexDict[utteranceIndex][\r\n              sentenceIndex\r\n            ] = totalSentenceIndex;\r\n            totalSentenceIndex++;\r\n          }\r\n        );\r\n      });\r\n\r\n      const colorDictionary: { [index: number]: string } = {\r\n        0: \"#C941AF\",\r\n        1: \"#C98E41\",\r\n        2: \"#4161C9\",\r\n        3: \"#41C9C9\",\r\n        4: \"#333333\",\r\n      };\r\n\r\n      const participantDict: ParticipantDict = {\r\n        정영진: {\r\n          name: \"정영진\",\r\n          color: \"#C941AF\",\r\n          team: 1,\r\n        },\r\n        박연미: {\r\n          name: \"박연미\",\r\n          color: \"#4161C9\",\r\n          team: 2,\r\n        },\r\n        사회자: {\r\n          name: \"사회자\",\r\n          color: \"#333333\",\r\n          team: -1,\r\n        },\r\n        이지만: {\r\n          name: \"이지만\",\r\n          color: \"#C98E41\",\r\n          team: 1,\r\n        },\r\n        김범중: {\r\n          name: \"김범중\",\r\n          color: \"#41C9C9\",\r\n          team: 2,\r\n        },\r\n      };\r\n\r\n      setUtteranceObjects(utteranceObjects);\r\n      setCheckboxes(\r\n        new Array<boolean>(totalSentenceObjects.length).fill(false)\r\n      );\r\n      setUtteranceIndexSentenceIndexTotalSentenceIndexDict(\r\n        utteranceIndexSentenceIndexTotalSentenceIndexDict\r\n      );\r\n      setParticipantDict(participantDict);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      <div ref={bodyTextContainerRef} className={styles.bodyTextContainer}>\r\n        <div className={styles.omitting}>······</div>\r\n        {_.map(utteranceObjects, (utteranceObject, utteranceIndex) => {\r\n          return (\r\n            <div key={`utterance-${utteranceIndex}`} style={{ width: 392 }}>\r\n              <div>\r\n                <span\r\n                  style={{\r\n                    color: participantDict[utteranceObject.name].color,\r\n                  }}\r\n                >\r\n                  {utteranceObject.name}\r\n                </span>\r\n                {/* <span>{` (${utteranceObject.sentenceObjects[0].time} ~ ${\r\n                  utteranceObject.sentenceObjects[\r\n                    utteranceObject.sentenceObjects.length - 1\r\n                  ].time\r\n                })`}</span> */}\r\n                {/* {`${utteranceObject.name} (${utteranceObject.sentenceObjects[0].time})`} */}\r\n              </div>\r\n              {_.map(\r\n                utteranceObject.sentenceObjects,\r\n                (sentenceObject, sentenceIndex) => {\r\n                  if (\r\n                    sentenceIndex <\r\n                    utteranceObject.sentenceObjects.length - 1\r\n                  ) {\r\n                    const totalSentenceIndex =\r\n                      utteranceIndexSentenceIndexTotalSentenceIndexDict[\r\n                        utteranceIndex\r\n                      ][sentenceIndex];\r\n                    return (\r\n                      <span key={`sentence-${utteranceIndex}-${sentenceIndex}`}>\r\n                        <span\r\n                          style={{\r\n                            backgroundColor: makeBodyTextBackgroundColor(\r\n                              totalSentenceIndex,\r\n                              sentenceIndexesOfSegments\r\n                            ),\r\n                          }}\r\n                        >\r\n                          {sentenceObject.sentence}\r\n                          {/* {`${sentenceObject.sentence}(${sentenceObject.time})`} */}\r\n                        </span>\r\n                        <Checkbox\r\n                          onChange={(event) => {\r\n                            checkboxes[totalSentenceIndex] =\r\n                              event.target.checked;\r\n                            setCheckboxes(checkboxes);\r\n\r\n                            const sentenceIndexesOfSegments: number[] = [];\r\n                            _.forEach(checkboxes, (checkbox, checkboxIndex) => {\r\n                              if (checkbox) {\r\n                                sentenceIndexesOfSegments.push(checkboxIndex);\r\n                              }\r\n                            });\r\n                            setSentenceIndexesOfSegments(\r\n                              sentenceIndexesOfSegments\r\n                            );\r\n                          }}\r\n                          style={{ marginRight: 8 }}\r\n                        ></Checkbox>\r\n                      </span>\r\n                    );\r\n                  } else {\r\n                    const totalSentenceIndex =\r\n                      utteranceIndexSentenceIndexTotalSentenceIndexDict[\r\n                        utteranceIndex\r\n                      ][utteranceObject.sentenceObjects.length - 1];\r\n                    return (\r\n                      <span key={`sentence-${utteranceIndex}-${sentenceIndex}`}>\r\n                        <span\r\n                          style={{\r\n                            backgroundColor: makeBodyTextBackgroundColor(\r\n                              totalSentenceIndex,\r\n                              sentenceIndexesOfSegments\r\n                            ),\r\n                          }}\r\n                        >\r\n                          {sentenceObject.sentence}\r\n                          {/* {`${sentenceObject.sentence}(${sentenceObject.time})`} */}\r\n                        </span>\r\n                      </span>\r\n                    );\r\n                  }\r\n                }\r\n              )}\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Checkbox\r\n                  onChange={(event) => {\r\n                    const totalSentenceIndex =\r\n                      utteranceIndexSentenceIndexTotalSentenceIndexDict[\r\n                        utteranceIndex\r\n                      ][utteranceObject.sentenceObjects.length - 1];\r\n                    checkboxes[totalSentenceIndex] = event.target.checked;\r\n                    setCheckboxes(checkboxes);\r\n\r\n                    const sentenceIndexesOfSegments: number[] = [];\r\n                    _.forEach(checkboxes, (checkbox, checkboxIndex) => {\r\n                      if (checkbox) {\r\n                        sentenceIndexesOfSegments.push(checkboxIndex);\r\n                      }\r\n                    });\r\n                    setSentenceIndexesOfSegments(sentenceIndexesOfSegments);\r\n                  }}\r\n                  style={{ marginTop: 8, marginBottom: 8 }}\r\n                ></Checkbox>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div className={styles.omitting}>······</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SampleViewOfTopicSegmentation;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // Link\r\n  useLocation,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport \"./App.scss\";\r\n\r\nimport Timeline from \"./views/Timeline/Timeline\";\r\nimport ConceptualRecurrencePlot from \"./views/ConceptualRecurrencePlot/ConceptualRecurrencePlot\";\r\nimport Home from \"./views/Home/Home\";\r\nimport FunctionComponentTemplate from \"./views/FunctionComponentTemplate/FunctionComponentTemplate\";\r\nimport ClassComponentTemplate from \"./views/ClassComponentTemplate/ClassComponentTemplate\";\r\nimport TranscriptViewerM from \"./views/TranscriptViewerM/TranscriptViewerM\";\r\nimport TranscriptSubjectTest from \"./views/TranscriptSubjectTest/TranscriptSubjectTest\";\r\nimport DescriptionForManualTopicSegmentation from \"./views/TestDescription/TestDescription\";\r\nimport VideoSubjectTest from \"./views/VideoSubjectTest/VideoSubjectTest\";\r\nimport SubjectTestEnd from \"./views/SubjectTestEnd/SubjectTestEnd\";\r\nimport SampleViewOfTopicSegmentation from \"./views/SampleViewOfTopicSegmentation/SampleViewOfTopicSegmentation\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/class-component-template\">\r\n            <ClassComponentTemplate />\r\n          </Route>\r\n          <Route path=\"/function-component-template\">\r\n            <FunctionComponentTemplate />\r\n          </Route>\r\n          <Route path=\"/transcripter-viewer-m\">\r\n            <TranscriptViewerM zxcvzxcv=\"ccccccc\" />\r\n          </Route>\r\n          <Route path=\"/timeline\">\r\n            <Timeline></Timeline>\r\n          </Route>\r\n          <Route path=\"/sample-of-topic-segmentation\">\r\n            <SampleViewOfTopicSegmentation></SampleViewOfTopicSegmentation>\r\n          </Route>\r\n          <Route path=\"/test-for-manual-topic-segmentation\">\r\n            <TranscriptSubjectTest />\r\n          </Route>\r\n          <Route path=\"/subject-test-end\">\r\n            <SubjectTestEnd />\r\n          </Route>\r\n          <Route path=\"/video-subject-test\">\r\n            <VideoSubjectTest />\r\n          </Route>\r\n          <Route path=\"/test-description\">\r\n            <DescriptionForManualTopicSegmentation />\r\n          </Route>\r\n          <Route path=\"/conceptual-recurrence-plot\">\r\n            <ConceptualRecurrencePlot></ConceptualRecurrencePlot>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable no-unused-vars */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { CHANGE_STANDARD_SIMILARITY_SCORE } from \"../actionTypes\";\r\nimport { Reducer } from \"redux\";\r\nimport { ChangeStandardSimilarityScoreAction } from \"../actions\";\r\n// import { maxSimilarityScore } from \"../../views/ConceptualRecurrencePlot/DataStructureMaker\";\r\n\r\nexport interface StandardSimilarityScoreState {\r\n  standardSimilarityScore: number;\r\n}\r\nconst initialState: StandardSimilarityScoreState = {\r\n  // standardSimilarityScore: maxSimilarityScore,\r\n  standardSimilarityScore: 100000,\r\n};\r\n\r\nconst standardSimilarityScoreReducer: Reducer<\r\n  StandardSimilarityScoreState,\r\n  ChangeStandardSimilarityScoreAction\r\n> = (state = initialState, action: ChangeStandardSimilarityScoreAction) => {\r\n  switch (action.type) {\r\n    case CHANGE_STANDARD_SIMILARITY_SCORE: {\r\n      return {\r\n        ...state,\r\n        standardSimilarityScore: action.payload.standardSimilarityScore,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default standardSimilarityScoreReducer;\r\n","import { combineReducers } from \"redux\";\r\n// import visibilityFilter from \"./visibilityFilter\";\r\n// import todos from \"./todos\";\r\nimport standardSimilarityScoreReducer from \"./standardSimilarityScoreReducer\";\r\n\r\n// export default combineReducers({ todos, visibilityFilter });\r\n\r\nconst combinedReducers = combineReducers({\r\n  standardSimilarityScoreReducer,\r\n});\r\nexport default combinedReducers;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}