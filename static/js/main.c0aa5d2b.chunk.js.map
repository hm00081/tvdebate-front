{"version":3,"sources":["views/ConceptualRecurrencePlot/ConceptualMapModal/ConceptualMapControllers/ConceptualMapControllers.module.scss","views/Home/Home.module.scss","components/SliderWithInput/SliderWithInput.module.scss","views/Header/Header.module.scss","views/Header/HeaderTwo.module.scss","views/ConceptualRecurrencePlot/ConceptualMapModal/ConceptualMapModal.module.scss","views/ConceptualRecurrencePlot/TranscriptViewer/TranscriptViewer.module.scss","data sync /^/.//.*//utterance_objects/.json$","data sync /^/.//.*//stopword_dict/.json$","data sync /^/.//.*//concept_matrix/.json$","data sync /^/.//.*//keyterm_objects/.json$","data sync /^/.//.*//similarity_matrix/.json$","data sync /^/.//.*//term_list/.json$","data sync /^/.//.*//term_utterance_boolean_matrix/.json$","data sync /^/.//.*//frequency_vector/.json$","data sync /^/.//.*//sentenceindex_lexicalchains_dict/.json$","data sync /^/.//.*//evaluation_results//merged_by_close_sentence/.json$","views/ConceptualRecurrencePlot/Drawers/SimilarityBlocksDrawer.ts","common_functions/hexToRgb.ts","common_functions/findTopValueIndexes.ts","views/ConceptualRecurrencePlot/Drawers/ParticipantBlocksDrawer.ts","views/ConceptualRecurrencePlot/ConceptualMapModal/TermCountDictOfEGMaker.ts","views/ConceptualRecurrencePlot/Drawers/TopicGroupsDrawer.ts","views/ConceptualRecurrencePlot/DataStructureMaker/extractTermsFromEngagementGroup.ts","views/ConceptualRecurrencePlot/Drawers/InsistenceMarkersDrawer.ts","views/ConceptualRecurrencePlot/Drawers/RefutationIconDrawer.ts","views/ConceptualRecurrencePlot/Drawers/InsistenceIconDrawer.ts","views/ConceptualRecurrencePlot/Drawers/InsistenceIconDrawerTwo.ts","views/ConceptualRecurrencePlot/Drawers/RefutationIconDrawerTwo.ts","views/ConceptualRecurrencePlot/Drawers/D3Drawer.ts","views/ConceptualRecurrencePlot/ConceptualMapModal/ConceptualMapDrawerInternalFunctions.ts","views/ConceptualRecurrencePlot/ConceptualMapModal/ConceptualMapDrawer.ts","views/ConceptualRecurrencePlot/ConceptualMapModal/OccurrenceMaker.ts","constants/constants.ts","views/ConceptualRecurrencePlot/ConceptualMapModal/GraphDataStructureMaker.ts","components/SliderWithInput/SliderWithInput.tsx","views/ConceptualRecurrencePlot/ConceptualMapModal/ConceptualMapControllers/ConceptualMapControllers.tsx","views/ConceptualRecurrencePlot/ConceptualMapModal/ConceptualMapModal.tsx","views/ConceptualRecurrencePlot/TranscriptViewer/TranscriptViewer.tsx","views/ConceptualRecurrencePlot/DataStructureMaker/make1EngagementGroup.ts","views/ConceptualRecurrencePlot/DataStructureMaker/makeManualEGs.ts","views/ConceptualRecurrencePlot/DataStructureMaker/UtteranceObjectsForDrawingManager.ts","views/ConceptualRecurrencePlot/DataStructureMaker/SimilarityBlockManager.ts","views/ConceptualRecurrencePlot/DataStructureMaker/DataStructureManager.ts","common_functions/makeParticipants.ts","views/ConceptualRecurrencePlot/DataImporter.ts","views/ConceptualRecurrencePlot/DataStructureMaker/CombinedEGsMaker.ts","views/Header/Header.tsx","views/Header/HeaderTwo.tsx","views/ConceptualRecurrencePlot/BubbleEng.tsx","views/ConceptualRecurrencePlot/SubChart.tsx","views/ConceptualRecurrencePlot/ConceptualRecurrencePlot.tsx","redux/actionTypes.ts","views/Home/Home.tsx","App.tsx","serviceWorker.ts","redux/reducers/standardSimilarityScoreReducer.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","SimilarityBlocksDrawer","utteranceObjectsForDrawing","similarityBlocks","similarityBlockGroup","participantDict","svgSelection","conceptSimilarityRectGSelection","_coloringSelfSimilarities","_showEngagementPoint","_coloringRebuttal","_standardHighPointOfSimilarityScore","_findDisagreeScaleScore","_clickListener","_mouseoverListener","_mouseoutListener","this","append","standardHighPointOfSimilarityScore","findDisagreeScaleScore","mostHighSimilarityBlock","_","maxBy","similarityBlock","weight","similarity","similarityRectGSelectionDataBound","selectAll","data","enter","merge","attr","d","beginningPointOfX","beginningPointOfY","width","height","style","visible","conceptSimilarityMatrix","limitConstant","coloringSelfSimilarities","coloringRebuttal","opacity","indexDiff","Math","abs","columnUtteranceIndex","rowUtteranceIndex","realWeightValue","weightedSimilaritySample","color","rowUtteranceObject","other","rgb","hex","replace","m","r","g","b","result","exec","parseInt","hexToRgb","name","refutation","selectedColor","finalColors","adjustedOpacity","sqrt","finalOpacity","adjustedOpacityValues","rgbaColor","alpha","slice","hexToRGBA","fillColorOfSimilarityBlock","engagementPoint","on","mouseEvent","console","log","stopPropagation","text","i","u","exit","remove","allOpacityValues","showEngagementPoint","clickListener","mouseoverListener","mouseoutListener","findTopValueIndexes","array","numOfTop","sortedArray","orderBy","topValueIndexes","numberOfSame","indexWanted","indexOf","push","ParticipantBlocksDrawer","conceptSimilarityBlocks","conceptMatrixTransposed","keytermObjects","participantRectGSlection","selectedParticipants","_selectedParticipantClickListener","sort","a","findDisagreeScale","update","beginningPointOfXY","participantRectGSlectionDataBound","join","newEnter","setAttributes","selection","mainKeytermObjects","topValueIndex","mainKeytermsString","reduce","keytermObject","utterance","utteranceObjectForDrawing","selectedParticipant","length","forEach","rowParticipantName","colParticipantName","participant1","participant2","TermCountDictOfEGMaker","utteranceObjectsOfEG","termType","termCountDictOfEG","termBooleanCountDictOfEG","termCountDetailDictOfEG","termBooleanCountDetailDictOfEG","defaultParticipantNameCountDict","chain","participant","count","sentiment","value","utteranceObject","sentenceObjects","sentenceObject","termCountDict","singleTermCountDict","compoundTermCountDict","term","cloneDeep","TopicGroupsDrawer","debateDataSet","dataStructureSet","topicGuideRectGSelection","topicGuideTextGSelection","_topicGroups","_topicGroupTitles","_showTopicGroupTitle","_showTopicGroup","_guideColor","onTitleClicked","topicGroups","topicGroupTitles","showTopicGroup","showTopicGroupTitle","guideColor","excludedIndex","excludedIndexTwo","filteredData","filter","group","index","includes","secFilteredData","call","showEngagementGroup","eg","mostLeftTopBlock","lastHorizontalLine","mostRightBottomBlock","bind","splitTextToLines","words","split","lines","line","word","trim","arg","xPoint","xPoints","highFrequencyTerms","engagementGroup","utteranceObjects","rowSimilarityBlocks","utteranceIndex","getTermCountDictOfEG","termCountObjectsOfEG","sortedTermCountObjectsOfEG","termCountObject","numOfFrequencyTerms","extractFrequencyTermsFromEG","each","textElem","d3","textLines","j","engagementGroupIndex","extractedTerms","termUtteranceBooleanMatrixTransposed","termList","grouptermCountDict","verticalSimilarityBlocks","termBooleans","termBoolean","termIndex","termsOfGroup","extractTermsFromEngagementGroup","InsistenceMarkersDrawer","insistenceMarkerGSlection","_visible","hasRefutation","rowIndex","insistence","RefutationIconDrawer","_similarityBlock","_participantBlock","insistenceIconGSlectionTwo","cbrt","defaultXPos","defaultYPos","transformProperty","textXPos","textYPos","compoundTermCounts","key","countCompoundTerms","entries","keyword","node","getBoundingClientRect","x","y","participantBlock","InsistenceIconDrawer","insistenceIconGSlection","colUtteranceObject","InsistenceIconDrawerTwo","refutationIconGSlectionTwo","RefutationIconDrawerTwo","refutationIconGSlection","D3Drawer","conceptRecurrencePlotDiv","svgGSelection","participantBlocksDrawer","insistenceMarkersDrawer","refutationIconDrawer","refutationIconDrawerTwo","insistenceIconDrawer","uncertainIconDrawer","insistenceIconDrawerTwo","similarityBlocksDrawer","topicGroupsDrawer","manualSmallTGsDrawer","manualMiddleTGsDrawer","manualBigTGsDrawer","manualPeopleTGsDrawer","lcsegEGsDrawer","svgWidth","svgHeight","_zoomListener","window","innerWidth","innerHeight","select","scaleExtent","event","transform","utteranceObjectsForDrawingManager","similarityBlockManager","colUtteranceName","rowUtteranceName","iconDrawer","ar","arr","toFixed","lastUtteranceObjectForDrawing","minusWidth","adjustedWidth","adjustedHeight","element","document","createElement","zoomTransform","translate","warn","zoomListener","SvgGSelectionsMaker","conceptualMapDivSelection","makePieData","ConceptualMapDrawer","coneptualMapDivClassName","_participantDict","linksGSelection","nodesGSelection","nodePiesGSelection","circlesOfNodePiesGSelection","nodeTextsGSelection","_nodeLinkDict","_nodeSizeMultiplier","_sentimentMarkerVisible","gradient","tinygradient","nodeLinkDict","nodeSizeMultiplier","sentimentMarkerVisible","nodes","links","svgGSelectionsMaker","appendSvgSelection","appendSvgGSelection","appendLinksGSelection","appendNodePiesGSelection","appendCirclesOfNodePiesGSelection","appendNodesGSelection","appendTextsGSelection","simulation","force","strength","makeSimulation","drag","active","alphaTarget","restart","subject","fx","fy","sortedNodes","participantData","participantCounts","time","createParticipantData","source","that","nodeDatum","participantCount","innerRadius","outerRadius","arcMaker","makeArcDAttribute","arcDatum","ratios","totalCount","reduced","frontCount","distance","cos","PI","sin","target","OccurrenceMaker","utteranceOjbectsOfEG","termListOfEG","termCountDictType","sentenceWindow","_occurrenceVector","_cooccurrenceMatrix","occurrenceDict","termCountDictsOfWS","windowSentenceElements","utteranceOjbect","termCountDictOfWS","windowSentenceElement","shift","sentence","search","math","term1","term1Index","term2","term2Index","pythonFlaskAddress","keyDict","aiopen","apiHostAddressDictionary","nodeExpress","pythonFlask","GraphDataStructureMaker","cooccurrenceMatrixOfEG","startIndex","endIndex","termCountDictOfEGMaker","getTermBooleanCountDictOfEG","getTermCountDetailDictOfEG","getTermBooleanCountDetailDictOfEG","makeTermListOfEG","frequencyVectorOfEG","makeFrequencyVectorOfEG","booleanFrequencyVectorOfEG","occurrenceMaker","cooccurrenceMatrix","makeNodes","standardCooccurrenceToGenerateLinks","maxOfLinksPerNode","isNodeNotHavingLinksShown","makeLinks","filterNodes","nodeDict","keyBy","findIndex","link","values","standardHighCount","Promise","reject","axios","post","then","response","catch","reason","termTime","utteranceObjectFound","find","some","sentenceObjectFound","parts","part","convertTimeToSeconds","booleanCount","participantBooleanCounts","standardHighCooccurrence","maxOflinksPerNode","linkCandidateDict","sourceTerm","sourceTermIndex","selectedTargetObjects","cooccurrenceVectorOfATerm","targetObjects","targetObject","filteredTargetObjects","selectedTargetObject","targetTerm","linkId","filteredLinkDict","filteredLinkCandidates","linkDatum","SliderWithInput","props","onChange","changedValue","onChangeListener","state","className","styles","sliderContainer","slider","min","max","step","trackStyle","backgroundColor","trackColor","handleStyle","border","marginTop","sliderWidth","size","inputNumber","React","Component","ConceptualMapControllers","conceptualMapControllers","conceptualMapDrawer","setNodeSizeMultiplier","updateGraph","setState","maxCooccurrence","standardTermCount","nodesAndLinks","graphDataStructureMaker","generateNodesAndLinks","showNodeNotHavingLinks","setGraphData","standardTermCountSliderListener","maxOfLinksPerNodeSliderListener","checkbox","defaultChecked","checked","showNodeNotHavingLinksCheckboxListener","marginBottom","ConceptualMapModal","ref","modalRef","useRef","useState","modalVisible","setModalVisible","modalTitle","setModalTitle","setMaxCooccurrence","standardTermCountToGenerateNode","setStandardTermCountToGenerateNode","setMaxOfLinksPerNode","setShowNodeNotHavingLinks","setConceptualMapDrawer","setGraphDataStructureMaker","useEffect","modalContentWidth","modalContentHeight","setParticipantDict","useImperativeHandle","openModal","removeDrawing","getCooccurrenceMatrixOfEG","ceiledMedian","ceil","sortedNodeArray","nodeDictionary","sortedNodeDictionary","createNodeDictionary","termFreqKeywrods","emptyArr","cooccurrenceVector","title","bodyStyle","onCancel","maskClosable","conceptualMapModalContent","forwardRef","TranscriptViewer","isOpen","transcriptViewer","dataStructureMaker","make1EngagementGroup","conceptSimilarityGroup","startRowIndex","endRowIndex","rowSimilarityLine","makeManualTGs","totalSimilarityBlockGroup","startRowIndexesForSplit","manualTGs","topicGroup","make1TopicGroup","UtteranceObjectsForDrawingManager","_utteranceObjectsForDrawing","_positiveSumStandard","_sentenceSentimentStandard","_columnLongStandard","getPositiveOrNot","positiveSumStandard","columnLongStandard","sentenceSentimentStandard","newUtteranceObject","conceptVector","p","applyPositive","require","SimilarityBlockManager","_similarityBlocks","_similarityBlockGroup","_selfConsistencyWeight","_otherConsistencyWeight","_refutationWeight","_insistenceWeight","_negativeSumStandard","_colUtteranceLongStandard","_hostWeight","_hostLongStandard","_debaterWeights","_debaterIndexDict","utteranceRowIndex","utteranceColIndex","rowUtteranceConcept","colUtteranceConcept","partsOfSimilarity","keytermScore1","similarityScore","sum","conceptSimilarityBlock","applyRefutation","negativeSumStandard","colUtteranceLongStandard","refutationScore","filtered","rowSimilarityBlock","utteranceIndexOfrowSimilarityBlock","isFilter","utteranceOjbect1","utteranceOjbect2","team1","team","team2","utteranceObjectOfRebuttalTarget","condition","selfConsistencyWeight","applyWeight","otherConsistencyWeight","refutationWeight","insistenceWeight","hostWeight","hostLongStandard","DataStructureManager","debateName","_dataStructureSet","_datasetOfManualEGs","participants","debateUtterances","nameDictionary","names","colorDictionary","0","1","2","3","4","5","makeParticipants","maxSimilarityScore","utteranceIndexSentenceIndexTotalSentenceIndexDict","totalSentenceIndex","sentenceIndex","manualSmallEGs","manualMiddleEGs","manualBigEGs","manualSmallEGTitles","manualMiddleEGTitles","manualBigEGTitles","DataImporter","_debateDataset","_evaluationDataSet","stopwordDict","conceptMatrix","similarityMatrix","termUtteranceBooleanMatrix","frequencyVector","sentenceIndexLexicalChainsDict","sentenceIndexesForSegmentsOfPeople","CombinedEGsMaker","minEngagementGroupSize","_standardSemanticConsistency","_groupSimilaritiesWeight","_lineSimilaritiesWeight","_pointSimilaritiesWeight","segmentCounting","trySplit2EGs","numOfSegments","choosedDataSet","findNew2TopicGroups","oldTopicGroup","concat","new2TopicGroups","topicGroupsCandidatesOfEachTop","semanticConsistenciesOfEachTop","dataSetOfTopicGroupCandidates","getDataSetOfTopicGroupCandidates","dataSetOfTopTopicGroupsCandidate","topicGroupsCandidates","semanticConsistencies","maxSemanticConsistency","indexOfMax","semanticConsistency","findTopTopicGroupsCandidate","maxValue","lastRowBlocks","engagementGroup1","engagementGroup2","getSumOfSimilarities","groupSimilaritiesWeight","borderSimilaritiesWeight","pointSimilaritiesWeight","getNumberOfSimilartyBlocks","isNaN","egCandidate","standardSemanticConsistency","engagementGroups","engagementGroupsCandidates","engagementGroupsCandidate","splittdEGs1","splittdEGs2","colIndex","groupLinePointWeight","lineSimilaritiesWeight","Header","setIsOpen","mainLink","navi","participantColors","label","topicColors","LegendItem","isOutlineOnly","labelStyle","svgStyle","marginRight","marginLeft","fill","stroke","strokeWidth","naviTwo","fontWeight","display","alignItems","justifyContent","item","scale","onClick","prev","background","borderRadius","BubbleEng","xmlns","xmlnsXlink","viewBox","enableBackground","xmlSpace","type","cx","cy","rx","ry","SubChart","ConceptualRecurrencePlot","query","URLSearchParams","useLocation","debateNameOfQuery","get","termTypeOfQuery","debateDataset","setDebateDataset","dataStructureManager","setDataStructureManager","setEvaluationDataSet","combinedEGsMaker","setCombinedEGsMaker","d3Drawer","setD3Drawer","conceptualMapModalRef","standardSimilarityScore","useSelector","standardSimilarityScoreReducer","dispatch","useDispatch","d3Container","setMouseoveredUtterance","setMouseoveredSimilarity","setTransform","setTooltipVisible","sortOrder","sortByFindDis","sortByIndex","dataImporter","payload","evaluationDataSet","datasetOfManualEGs","makeByNumOfSegments","current","mouseoutLisener","extractedKeytermObjects","sumOfKeytermScores","keytermScores","extractKeytermsFromEngagementGroup","centerConceptualRecurrentPlot","overflow","borderBottom","position","zIndex","fontSize","textAlign","toString","undefined","Home","home","serviceTitle","to","button","App","path","Boolean","location","hostname","match","initialState","action","combinedReducers","combineReducers","store","createStore","rootReducer","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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CA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAMIC,EACH1B,EACCE,KAAKyB,KACHzB,KAAKC,IACHvB,EAAgBwB,qBACdxB,EAAgByB,oBAGxB,GAEEuB,EAAuB,EAGrBC,EAAwB,CAC5B,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,YAIAL,EADExB,GAAW,EACGyB,EAAY,GACnBzB,EAAU,IACHyB,EAAY,GACnBzB,EAAU,GACHyB,EAAY,GACnBzB,EAAU,GACHyB,EAAY,GACnBzB,EAAU,GACHyB,EAAY,GACnBzB,EAAU,GACHyB,EAAY,GACnBzB,EAAU,IACHyB,EAAY,GACnBzB,GAAW,QACJyB,EAAY,GACnBzB,GAAW,QACJyB,EAAY,GACnBzB,GAAW,QACJyB,EAAY,GACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACnBzB,GAAW,QACJyB,EAAY,IACPA,EAAY,IAQ/BG,EANAF,GAAmBG,EAAsB,GAEzCjD,EAAgByB,kBACdzB,EAAgBwB,qBAClB,GAEe,EAEA,IAERsB,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","file":"static/js/main.c0aa5d2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"conceptualMapControllers\":\"ConceptualMapControllers_conceptualMapControllers__3_OAf\",\"checkbox\":\"ConceptualMapControllers_checkbox__1XZVE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__3Xdg2\",\"serviceTitle\":\"Home_serviceTitle__27EHx\",\"checkbox\":\"Home_checkbox__1Ux90\",\"links\":\"Home_links__4o1xP\",\"button\":\"Home_button__ricmW\",\"apiTestTitle\":\"Home_apiTestTitle__2k4eK\",\"apiButtons\":\"Home_apiButtons__3gwdZ\",\"apiButton\":\"Home_apiButton__2IWfE\",\"evaluationTitle\":\"Home_evaluationTitle__W6l1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderContainer\":\"SliderWithInput_sliderContainer__2Hn1o\",\"slider\":\"SliderWithInput_slider__143VZ\",\"inputNumber\":\"SliderWithInput_inputNumber__1ePnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainLink\":\"Header_mainLink__30omw\",\"navi\":\"Header_navi__TU2oj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainLink\":\"HeaderTwo_mainLink__3ekp-\",\"naviTwo\":\"HeaderTwo_naviTwo__26D-T\",\"st0\":\"HeaderTwo_st0__1E0wn\",\"st1\":\"HeaderTwo_st1__E7Dsx\",\"st2\":\"HeaderTwo_st2__1x2Cy\",\"st3\":\"HeaderTwo_st3__mztKH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conceptualMapModalContent\":\"ConceptualMapModal_conceptualMapModalContent__3JSaY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transcriptViewer\":\"TranscriptViewer_transcriptViewer__6JlVW\"};","var map = {\n\t\"./sample/utterance_objects.json\": 341,\n\t\"./기본소득/utterance_objects.json\": 342,\n\t\"./기본소득clipped/utterance_objects.json\": 343,\n\t\"./모병제/utterance_objects.json\": 344,\n\t\"./모병제clipped/utterance_objects.json\": 345,\n\t\"./정년연장/utterance_objects.json\": 346,\n\t\"./정시확대/utterance_objects.json\": 347,\n\t\"./정시확대clipped/utterance_objects.json\": 348,\n\t\"./지방소멸/utterance_objects.json\": 349,\n\t\"./집값/utterance_objects.json\": 350\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 340;","var map = {\n\t\"./sample/stopword_dict.json\": 352,\n\t\"./기본소득/stopword_dict.json\": 353,\n\t\"./기본소득clipped/stopword_dict.json\": 354,\n\t\"./모병제/stopword_dict.json\": 355,\n\t\"./모병제clipped/stopword_dict.json\": 356,\n\t\"./정년연장/stopword_dict.json\": 357,\n\t\"./정시확대/stopword_dict.json\": 358,\n\t\"./정시확대clipped/stopword_dict.json\": 359,\n\t\"./지방소멸/stopword_dict.json\": 360,\n\t\"./집값/stopword_dict.json\": 361\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 351;","var map = {\n\t\"./sample/compound_term/concept_matrix.json\": 363,\n\t\"./sample/single_term/concept_matrix.json\": 364,\n\t\"./기본소득/compound_term/concept_matrix.json\": 365,\n\t\"./기본소득/single_term/concept_matrix.json\": 366,\n\t\"./기본소득clipped/compound_term/concept_matrix.json\": 367,\n\t\"./기본소득clipped/single_term/concept_matrix.json\": 368,\n\t\"./모병제/compound_term/concept_matrix.json\": 369,\n\t\"./모병제/single_term/concept_matrix.json\": 370,\n\t\"./모병제clipped/compound_term/concept_matrix.json\": 371,\n\t\"./모병제clipped/single_term/concept_matrix.json\": 372,\n\t\"./정시확대/compound_term/concept_matrix.json\": 373,\n\t\"./정시확대/single_term/concept_matrix.json\": 374,\n\t\"./정시확대clipped/compound_term/concept_matrix.json\": 375,\n\t\"./정시확대clipped/single_term/concept_matrix.json\": 376\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 362;","var map = {\n\t\"./sample/compound_term/keyterm_objects.json\": 378,\n\t\"./sample/single_term/keyterm_objects.json\": 379,\n\t\"./기본소득/compound_term/keyterm_objects.json\": 380,\n\t\"./기본소득/single_term/keyterm_objects.json\": 381,\n\t\"./기본소득clipped/compound_term/keyterm_objects.json\": 382,\n\t\"./기본소득clipped/single_term/keyterm_objects.json\": 383,\n\t\"./모병제/compound_term/keyterm_objects.json\": 384,\n\t\"./모병제/single_term/keyterm_objects.json\": 385,\n\t\"./모병제clipped/compound_term/keyterm_objects.json\": 386,\n\t\"./모병제clipped/single_term/keyterm_objects.json\": 387,\n\t\"./정년연장/compound_term/keyterm_objects.json\": 388,\n\t\"./정년연장/single_term/keyterm_objects.json\": 389,\n\t\"./정시확대/compound_term/keyterm_objects.json\": 390,\n\t\"./정시확대/single_term/keyterm_objects.json\": 391,\n\t\"./정시확대clipped/compound_term/keyterm_objects.json\": 392,\n\t\"./정시확대clipped/single_term/keyterm_objects.json\": 393,\n\t\"./지방소멸/keyterm_objects.json\": 394,\n\t\"./집값/compound_term/keyterm_objects.json\": 395,\n\t\"./집값/single_term/keyterm_objects.json\": 396\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 377;","var map = {\n\t\"./sample/compound_term/similarity_matrix.json\": 398,\n\t\"./sample/single_term/similarity_matrix.json\": 399,\n\t\"./기본소득/compound_term/similarity_matrix.json\": 400,\n\t\"./기본소득/single_term/similarity_matrix.json\": 401,\n\t\"./기본소득clipped/compound_term/similarity_matrix.json\": 402,\n\t\"./기본소득clipped/single_term/similarity_matrix.json\": 403,\n\t\"./모병제/compound_term/similarity_matrix.json\": 404,\n\t\"./모병제/single_term/similarity_matrix.json\": 405,\n\t\"./모병제clipped/compound_term/similarity_matrix.json\": 406,\n\t\"./모병제clipped/single_term/similarity_matrix.json\": 407,\n\t\"./정시확대/compound_term/similarity_matrix.json\": 408,\n\t\"./정시확대/single_term/similarity_matrix.json\": 409,\n\t\"./정시확대clipped/compound_term/similarity_matrix.json\": 410,\n\t\"./정시확대clipped/single_term/similarity_matrix.json\": 411\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 397;","var map = {\n\t\"./sample/compound_term/term_list.json\": 413,\n\t\"./sample/single_term/term_list.json\": 414,\n\t\"./기본소득/compound_term/term_list.json\": 415,\n\t\"./기본소득/single_term/term_list.json\": 416,\n\t\"./기본소득clipped/compound_term/term_list.json\": 417,\n\t\"./기본소득clipped/single_term/term_list.json\": 418,\n\t\"./모병제/compound_term/term_list.json\": 419,\n\t\"./모병제/single_term/term_list.json\": 420,\n\t\"./모병제clipped/compound_term/term_list.json\": 421,\n\t\"./모병제clipped/single_term/term_list.json\": 422,\n\t\"./정년연장/compound_term/term_list.json\": 423,\n\t\"./정년연장/single_term/term_list.json\": 424,\n\t\"./정시확대/compound_term/term_list.json\": 425,\n\t\"./정시확대/single_term/term_list.json\": 426,\n\t\"./정시확대clipped/compound_term/term_list.json\": 427,\n\t\"./정시확대clipped/single_term/term_list.json\": 428,\n\t\"./지방소멸/term_list.json\": 429,\n\t\"./집값/compound_term/term_list.json\": 430,\n\t\"./집값/single_term/term_list.json\": 431\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 412;","var map = {\n\t\"./sample/compound_term/term_utterance_boolean_matrix.json\": 433,\n\t\"./sample/single_term/term_utterance_boolean_matrix.json\": 434,\n\t\"./기본소득/compound_term/term_utterance_boolean_matrix.json\": 435,\n\t\"./기본소득/single_term/term_utterance_boolean_matrix.json\": 436,\n\t\"./기본소득clipped/compound_term/term_utterance_boolean_matrix.json\": 437,\n\t\"./기본소득clipped/single_term/term_utterance_boolean_matrix.json\": 438,\n\t\"./모병제/compound_term/term_utterance_boolean_matrix.json\": 439,\n\t\"./모병제/single_term/term_utterance_boolean_matrix.json\": 440,\n\t\"./모병제clipped/compound_term/term_utterance_boolean_matrix.json\": 441,\n\t\"./모병제clipped/single_term/term_utterance_boolean_matrix.json\": 442,\n\t\"./정시확대/compound_term/term_utterance_boolean_matrix.json\": 443,\n\t\"./정시확대/single_term/term_utterance_boolean_matrix.json\": 444,\n\t\"./정시확대clipped/compound_term/term_utterance_boolean_matrix.json\": 445,\n\t\"./정시확대clipped/single_term/term_utterance_boolean_matrix.json\": 446,\n\t\"./지방소멸/term_utterance_boolean_matrix.json\": 447\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 432;","var map = {\n\t\"./sample/compound_term/frequency_vector.json\": 449,\n\t\"./sample/single_term/frequency_vector.json\": 450,\n\t\"./기본소득/compound_term/frequency_vector.json\": 451,\n\t\"./기본소득/single_term/frequency_vector.json\": 452,\n\t\"./기본소득clipped/compound_term/frequency_vector.json\": 453,\n\t\"./기본소득clipped/single_term/frequency_vector.json\": 454,\n\t\"./모병제/compound_term/frequency_vector.json\": 455,\n\t\"./모병제/single_term/frequency_vector.json\": 456,\n\t\"./모병제clipped/compound_term/frequency_vector.json\": 457,\n\t\"./모병제clipped/single_term/frequency_vector.json\": 458,\n\t\"./정년연장/compound_term/frequency_vector.json\": 459,\n\t\"./정년연장/single_term/frequency_vector.json\": 460,\n\t\"./정시확대/compound_term/frequency_vector.json\": 461,\n\t\"./정시확대/single_term/frequency_vector.json\": 462,\n\t\"./정시확대clipped/compound_term/frequency_vector.json\": 463,\n\t\"./정시확대clipped/single_term/frequency_vector.json\": 464,\n\t\"./지방소멸/frequency_vector.json\": 465,\n\t\"./집값/compound_term/frequency_vector.json\": 466,\n\t\"./집값/single_term/frequency_vector.json\": 467\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 448;","var map = {\n\t\"./sample/compound_term/sentenceindex_lexicalchains_dict.json\": 469,\n\t\"./sample/single_term/sentenceindex_lexicalchains_dict.json\": 470,\n\t\"./기본소득/compound_term/sentenceindex_lexicalchains_dict.json\": 471,\n\t\"./기본소득/single_term/sentenceindex_lexicalchains_dict.json\": 472,\n\t\"./기본소득clipped/compound_term/sentenceindex_lexicalchains_dict.json\": 473,\n\t\"./기본소득clipped/single_term/sentenceindex_lexicalchains_dict.json\": 474,\n\t\"./모병제/compound_term/sentenceindex_lexicalchains_dict.json\": 475,\n\t\"./모병제/single_term/sentenceindex_lexicalchains_dict.json\": 476,\n\t\"./모병제clipped/compound_term/sentenceindex_lexicalchains_dict.json\": 477,\n\t\"./모병제clipped/single_term/sentenceindex_lexicalchains_dict.json\": 478,\n\t\"./정시확대/compound_term/sentenceindex_lexicalchains_dict.json\": 479,\n\t\"./정시확대/single_term/sentenceindex_lexicalchains_dict.json\": 480,\n\t\"./정시확대clipped/compound_term/sentenceindex_lexicalchains_dict.json\": 481,\n\t\"./정시확대clipped/single_term/sentenceindex_lexicalchains_dict.json\": 482\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 468;","var map = {\n\t\"./기본소득/evaluation_results/merged_by_close_sentence.json\": 484,\n\t\"./기본소득clipped/evaluation_results/merged_by_close_sentence.json\": 485,\n\t\"./모병제/evaluation_results/merged_by_close_sentence.json\": 486,\n\t\"./모병제clipped/evaluation_results/merged_by_close_sentence.json\": 487,\n\t\"./정시확대/evaluation_results/merged_by_close_sentence.json\": 488,\n\t\"./정시확대clipped/evaluation_results/merged_by_close_sentence.json\": 489\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 483;","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport { hexToRgb } from \"../../../common_functions/hexToRgb\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport { SentenceObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { UtteranceObjectForDrawing } from \"../interfaces\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\nimport * as fs from \"fs\";\r\n\r\nexport type ColoringSelfSimilarities =\r\n  | \"none\"\r\n  | \"oneColor\"\r\n  | \"participantColors\";\r\n\r\nexport class SimilarityBlocksDrawer {\r\n  private readonly conceptSimilarityRectGSelection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n\r\n  private _coloringSelfSimilarities: ColoringSelfSimilarities = \"none\";\r\n  private _showEngagementPoint: boolean = false;\r\n  private _coloringRebuttal: boolean = true; // 토론의 주장과 반박 연쇄 일어나는 구간 색상 부여\r\n  private _standardHighPointOfSimilarityScore!: number;\r\n  private _findDisagreeScaleScore!: number;\r\n\r\n  private _clickListener:\r\n    | ((e: MouseEvent, d: SimilarityBlock) => void)\r\n    | null = null;\r\n  private _mouseoverListener:\r\n    | null\r\n    | ((\r\n        mouseEvent: MouseEvent,\r\n        similarityBlock: SimilarityBlock\r\n      ) => void) = null;\r\n  private _mouseoutListener: null | (() => void) = null;\r\n\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    private readonly similarityBlocks: SimilarityBlock[],\r\n    private readonly similarityBlockGroup: SimilarityBlock[][],\r\n    private readonly participantDict: ParticipantDict,\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    //\r\n    this.conceptSimilarityRectGSelection = svgSelection.append(\"g\");\r\n  }\r\n\r\n  public set standardHighPointOfSimilarityScore(\r\n    standardHighPointOfSimilarityScore: number\r\n  ) {\r\n    this._standardHighPointOfSimilarityScore = standardHighPointOfSimilarityScore;\r\n  }\r\n\r\n  public set findDisagreeScaleScore(findDisagreeScaleScore: number) {\r\n    this._findDisagreeScaleScore = findDisagreeScaleScore;\r\n  }\r\n\r\n  public applyColorRatioSettingByTopSimilarityBlock() {\r\n    const mostHighSimilarityBlock = _.maxBy(\r\n      this.similarityBlocks,\r\n      (similarityBlock) => similarityBlock.weight * similarityBlock.similarity\r\n    )!;\r\n    this._standardHighPointOfSimilarityScore =\r\n      mostHighSimilarityBlock.weight * mostHighSimilarityBlock.similarity;\r\n  }\r\n\r\n  public update() {\r\n    const similarityRectGSelectionDataBound = this.conceptSimilarityRectGSelection\r\n      .selectAll<SVGRectElement, unknown>(\"rect\")\r\n      .data(this.similarityBlocks);\r\n\r\n    const enter = similarityRectGSelectionDataBound.enter().append(\"rect\");\r\n\r\n    similarityRectGSelectionDataBound\r\n      .merge(enter) // Merge enter and update selections\r\n      .attr(\"x\", (d) => d.beginningPointOfX)\r\n      .attr(\"y\", (d) => d.beginningPointOfY)\r\n      .attr(\"width\", (d) => d.width)\r\n      .attr(\"height\", (d) => d.height)\r\n      .style(\"fill\", (d) => {\r\n        return d.visible\r\n          ? fillColorOfSimilarityBlock(\r\n              d,\r\n              this.utteranceObjectsForDrawing,\r\n              this.similarityBlockGroup,\r\n              this.participantDict,\r\n              this._standardHighPointOfSimilarityScore,\r\n              this._coloringSelfSimilarities,\r\n              this._coloringRebuttal\r\n            )\r\n          : \"none\";\r\n      })\r\n      .style(\"stroke-width\", 3)\r\n      .style(\"stroke\", (d) =>\r\n        this._showEngagementPoint && d.engagementPoint\r\n          ? \"rgb(97, 64, 65)\"\r\n          : null\r\n      )\r\n      .on(\"click\", (e, d) => {\r\n        const mouseEvent = (e as unknown) as MouseEvent;\r\n        console.log(\"similarity block clicked\");\r\n        mouseEvent.stopPropagation();\r\n        const similarityBlock = (d as unknown) as SimilarityBlock;\r\n        if (this._clickListener) {\r\n          this._clickListener(mouseEvent, similarityBlock);\r\n        }\r\n      })\r\n      .append(\"title\")\r\n      .text(\r\n        (d, i) =>\r\n          `findArgument: ${\r\n            d.refutation ? d.refutation : \"none\"\r\n          },\\n선행발화자 Index: ${d.columnUtteranceIndex},\\n후행발화자 Index: ${\r\n            d.rowUtteranceIndex\r\n          },\\nargumentScore: ${\r\n            ((d.similarity * d.weight) /\r\n              // Math.abs(d.columnUtteranceIndex - d.rowUtteranceIndex)) *\r\n              Math.sqrt(\r\n                Math.abs(d.columnUtteranceIndex - d.rowUtteranceIndex)\r\n              )) *\r\n            1\r\n            // d.similarity * d.weight\r\n          }\r\n          )}`\r\n      )\r\n      .on(\"mouseover\", (e, u) => {\r\n        const mouseEvent = (e as unknown) as MouseEvent;\r\n        mouseEvent.stopPropagation();\r\n        const similarityBlock = (u as unknown) as SimilarityBlock;\r\n\r\n        //TODO adjust insist, refutation-view\r\n        if (this._mouseoverListener) {\r\n          this._mouseoverListener(mouseEvent, similarityBlock);\r\n        }\r\n      })\r\n      .on(\"mouseout\", (e, u) => {\r\n        const mouseEvent = (e as unknown) as MouseEvent;\r\n        if (this._mouseoutListener) {\r\n          this._mouseoutListener();\r\n        }\r\n      });\r\n\r\n    similarityRectGSelectionDataBound.exit().remove();\r\n\r\n    function fillColorOfSimilarityBlock(\r\n      similarityBlock: SimilarityBlock,\r\n      utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n      conceptSimilarityMatrix: SimilarityBlock[][],\r\n      participantDict: ParticipantDict,\r\n      limitConstant: number,\r\n      coloringSelfSimilarities: ColoringSelfSimilarities,\r\n      coloringRebuttal: boolean\r\n    ): string {\r\n      let opacity: number = 0;\r\n      const indexDiff = Math.abs(\r\n        similarityBlock.columnUtteranceIndex - similarityBlock.rowUtteranceIndex\r\n      );\r\n      const realWeightValue =\r\n        similarityBlock.weight * similarityBlock.similarity;\r\n      // const weightedSimilarity =\r\n      //   ((similarityBlock.weight * similarityBlock.similarity) /\r\n      //     (indexDiff * indexDiff)) *\r\n      //   50;\r\n      const weightedSimilaritySample =\r\n        ((realWeightValue / indexDiff) * 10) / 16.3560974414804;\r\n      // weightedSimilaritySample > 0.4: red, 0.04 : oragne, else: yellow\r\n\r\n      if (realWeightValue > limitConstant) {\r\n        opacity = 1;\r\n      } else {\r\n        //const opacityScore = similarityBlock.similarity * 10;\r\n        //const normalizedOpacityScore = Math.min(opacityScore, 1);\r\n        // delete limitConstant\r\n\r\n        opacity = weightedSimilaritySample;\r\n        // opacity = weightedSimilarity / limitConstant;\r\n      }\r\n\r\n      let color = `rgba(247, 191, 100, ${opacity * 0})`; // 피라미드 색상\r\n\r\n      const rowUtteranceObject =\r\n        utteranceObjectsForDrawing[similarityBlock.rowUtteranceIndex];\r\n      const colUtteranceObject =\r\n        utteranceObjectsForDrawing[similarityBlock.columnUtteranceIndex];\r\n\r\n      // Update Coloring Self Similarities\r\n      if (!similarityBlock.other) {\r\n        switch (coloringSelfSimilarities) {\r\n          case \"oneColor\":\r\n            color = `rgba(198, 66, 66, ${opacity})`;\r\n            break;\r\n          case \"participantColors\":\r\n            // eslint-disable-next-line no-case-declarations\r\n            const rgb = hexToRgb(\r\n              participantDict[rowUtteranceObject.name].color\r\n            );\r\n            color = `rgba(${rgb!.r}, ${rgb!.g}, ${rgb!.b}, ${opacity})`;\r\n            // color = `rgba(198, 66, 66, ${opacity})`;\r\n            break;\r\n        }\r\n      }\r\n      const allOpacityValues: number[] = [];\r\n\r\n      function hexToRGBA(hex: string, alpha: number) {\r\n        const r = parseInt(hex.slice(1, 3), 16);\r\n        const g = parseInt(hex.slice(3, 5), 16);\r\n        const b = parseInt(hex.slice(5, 7), 16);\r\n        return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n      }\r\n\r\n      if (coloringRebuttal && similarityBlock.refutation) {\r\n        const finalColorss = [\r\n          \"#400000\",\r\n          \"#755005\",\r\n          \"#7e5605\",\r\n          \"#885c07\",\r\n          \"#916209\",\r\n          \"#9b680d\",\r\n          \"#a46f12\",\r\n          \"#ad7517\",\r\n          \"#b67c1d\",\r\n          \"#c08324\",\r\n          \"#c88a2c\",\r\n          \"#d19134\",\r\n          \"#d9993e\",\r\n          \"#e1a048\",\r\n          \"#e9a854\",\r\n          \"#efb060\",\r\n          \"#f5b86f\",\r\n          \"#fac17f\",\r\n          \"#fffbf8\", // 18\r\n          \"#fed4a9\",\r\n          \"#fcdec3\",\r\n        ];\r\n\r\n        const finalColors = [\r\n          \"#200611\",\r\n          \"#280909\",\r\n          \"#400000\",\r\n          \"#4a0101\",\r\n          \"#540402\",\r\n          \"#5d0904\",\r\n          \"#661005\",\r\n          \"#6e1807\",\r\n          \"#762008\",\r\n          \"#7d2809\",\r\n          \"#84300a\",\r\n          \"#8b380a\",\r\n          \"#91410b\",\r\n          \"#974a0d\",\r\n          \"#9c520e\",\r\n          \"#a15b10\",\r\n          \"#a66412\",\r\n          \"#aa6d15\",\r\n          \"#ae7619\",\r\n          \"#b77d22\",\r\n          \"#bf842c\", // 18\r\n          \"#c68c37\",\r\n          \"#cd9343\",\r\n          \"#d49b4f\",\r\n          \"#dba35b\",\r\n          \"#e1ab68\",\r\n          \"#e7b376\",\r\n          \"#ecbb84\",\r\n          \"#f1c493\",\r\n          \"#f5cca3\",\r\n          \"#f9d5b3\",\r\n          \"#fcdec3\",\r\n        ];\r\n\r\n        let selectedColor;\r\n\r\n        // 수정된 코드\r\n        const adjustedOpacity =\r\n          (opacity /\r\n            Math.sqrt(\r\n              Math.abs(\r\n                similarityBlock.columnUtteranceIndex -\r\n                  similarityBlock.rowUtteranceIndex\r\n              )\r\n            )) *\r\n          50;\r\n\r\n        let finalOpacity: number = 1;\r\n\r\n        // console.log(adjustedOpacity);\r\n        const adjustedOpacityValues = [\r\n          18.82751331,\r\n          6.981868806,\r\n          3.869509114,\r\n          2.468925094,\r\n          1.903323926,\r\n          1.542776171,\r\n          1.213284972,\r\n          1.088114596,\r\n          0.942875687,\r\n          0.828912509,\r\n          0.706295081,\r\n          0.63287685,\r\n          0.591230262,\r\n          0.538005371,\r\n          0.463493915,\r\n          0.427013104,\r\n          0.384948635,\r\n          0.34470879,\r\n          0.319079873,\r\n          0.292835439,\r\n          0.270182682,\r\n          0.258855898,\r\n          0.250068499,\r\n          0.232544626,\r\n          0.219586255,\r\n          0.202812561,\r\n          0.190284102,\r\n          0.174569335,\r\n          0.16811274,\r\n          0.15309027,\r\n          0.145516623,\r\n          0.136490058,\r\n          0.129594874,\r\n          0.123529022,\r\n          0.111817947,\r\n          0.107986048,\r\n          0.101794567,\r\n          0.093841692,\r\n          0.089619484,\r\n          0.087219676,\r\n          0.085178754,\r\n          0.078508682,\r\n          0.071999629,\r\n          0.070674205,\r\n          0.066783795,\r\n          0.058822291,\r\n          0.042814651,\r\n          0.038027543,\r\n          0.035979082,\r\n          0.025598677,\r\n          0.021260026,\r\n          0.016818621,\r\n          0.01293302,\r\n          0.005213995,\r\n        ]; // 전체 refutation 54개 단위로 끊은 값.\r\n\r\n        if (opacity >= 1) {\r\n          selectedColor = finalColors[0];\r\n        } else if (opacity > 0.57) {\r\n          selectedColor = finalColors[1];\r\n        } else if (opacity > 0.5) {\r\n          selectedColor = finalColors[2];\r\n        } else if (opacity > 0.4) {\r\n          selectedColor = finalColors[3];\r\n        } else if (opacity > 0.3) {\r\n          selectedColor = finalColors[4];\r\n        } else if (opacity > 0.2) {\r\n          selectedColor = finalColors[5];\r\n        } else if (opacity > 0.15) {\r\n          selectedColor = finalColors[6];\r\n        } else if (opacity >= 0.083147) {\r\n          selectedColor = finalColors[7];\r\n        } else if (opacity >= 0.059303) {\r\n          selectedColor = finalColors[8];\r\n        } else if (opacity >= 0.044627) {\r\n          selectedColor = finalColors[9];\r\n        } else if (opacity >= 0.036694) {\r\n          selectedColor = finalColors[10];\r\n        } else if (opacity >= 0.031783) {\r\n          selectedColor = finalColors[11];\r\n        } else if (opacity >= 0.028122) {\r\n          selectedColor = finalColors[12];\r\n        } else if (opacity >= 0.023232) {\r\n          selectedColor = finalColors[13];\r\n        } else if (opacity >= 0.020771) {\r\n          selectedColor = finalColors[14];\r\n        } else if (opacity >= 0.018342) {\r\n          selectedColor = finalColors[15];\r\n        } else if (opacity >= 0.014674) {\r\n          selectedColor = finalColors[16];\r\n        } else if (opacity >= 0.012841) {\r\n          selectedColor = finalColors[17];\r\n        } else if (opacity >= 0.011471) {\r\n          selectedColor = finalColors[18];\r\n        } else if (opacity >= 0.010447) {\r\n          selectedColor = finalColors[19];\r\n        } else if (opacity >= 0.008954) {\r\n          selectedColor = finalColors[20];\r\n        } else if (opacity >= 0.005116) {\r\n          selectedColor = finalColors[21];\r\n        } else if (opacity >= 0.003529) {\r\n          selectedColor = finalColors[22];\r\n        } else if (opacity >= 0.002281) {\r\n          selectedColor = finalColors[23];\r\n        } else selectedColor = finalColors[24];\r\n\r\n        if (adjustedOpacity >= adjustedOpacityValues[0]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 1;\r\n          } else {\r\n            finalOpacity = 0.74;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[1]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.96;\r\n          } else {\r\n            finalOpacity = 0.7;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[2]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.92;\r\n          } else {\r\n            finalOpacity = 0.68;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[3]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.88;\r\n          } else {\r\n            finalOpacity = 0.64;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[4]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.84;\r\n          } else {\r\n            finalOpacity = 0.6;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[5]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.8;\r\n          } else {\r\n            finalOpacity = 0.56;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[6]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.76;\r\n          } else {\r\n            finalOpacity = 0.52;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[7]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.72;\r\n          } else {\r\n            finalOpacity = 0.48;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[8]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.68;\r\n          } else {\r\n            finalOpacity = 0.44;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[9]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.64;\r\n          } else {\r\n            finalOpacity = 0.4;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[10]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.6;\r\n          } else {\r\n            finalOpacity = 0.36;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[11]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.55;\r\n          } else {\r\n            finalOpacity = 0.31;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[12]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.5;\r\n          } else {\r\n            finalOpacity = 0.26;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[13]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.45;\r\n          } else {\r\n            finalOpacity = 0.21;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[14]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.43;\r\n          } else {\r\n            finalOpacity = 0.19;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[15]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.4;\r\n          } else {\r\n            finalOpacity = 0.16;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[16]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.36;\r\n          } else {\r\n            finalOpacity = 0.12;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[17]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.32;\r\n          } else {\r\n            finalOpacity = 0.08;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[18]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.25;\r\n          } else {\r\n            finalOpacity = 0.05;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[19]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.2;\r\n          } else {\r\n            finalOpacity = 0.04;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[20]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.16;\r\n          } else {\r\n            finalOpacity = 0.035;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[21]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.14;\r\n          } else {\r\n            finalOpacity = 0.033;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[22]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.11;\r\n          } else {\r\n            finalOpacity = 0.03;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[23]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.08;\r\n          } else {\r\n            finalOpacity = 0.025;\r\n          }\r\n        } else if (adjustedOpacity >= adjustedOpacityValues[24]) {\r\n          if (\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n            33\r\n          ) {\r\n            finalOpacity = 0.06;\r\n          } else {\r\n            finalOpacity = 0.02;\r\n          }\r\n        } else {\r\n          finalOpacity = 0.05;\r\n        }\r\n\r\n        const rgbaColor = hexToRGBA(selectedColor, finalOpacity * 0.9);\r\n\r\n        color = rgbaColor;\r\n      }\r\n      return color;\r\n    }\r\n  }\r\n  public get allOpacityValues(): number[] {\r\n    return this.allOpacityValues;\r\n  }\r\n\r\n  public set coloringSelfSimilarities(\r\n    coloringSelfSimilarities: ColoringSelfSimilarities\r\n  ) {\r\n    this._coloringSelfSimilarities = coloringSelfSimilarities;\r\n  }\r\n\r\n  public set showEngagementPoint(showEngagementPoint: boolean) {\r\n    this._showEngagementPoint = showEngagementPoint;\r\n    console.log(\"setter inner\", this._showEngagementPoint);\r\n  }\r\n\r\n  public set coloringRebuttal(coloringRebuttal: boolean) {\r\n    this._coloringRebuttal = coloringRebuttal;\r\n  }\r\n\r\n  public set clickListener(\r\n    clickListener: (e: MouseEvent, d: SimilarityBlock) => void\r\n  ) {\r\n    this._clickListener = clickListener;\r\n  }\r\n\r\n  public set mouseoverListener(\r\n    mouseoverListener: (\r\n      mouseEvent: MouseEvent,\r\n      similarityBlock: SimilarityBlock\r\n    ) => void\r\n  ) {\r\n    this._mouseoverListener = mouseoverListener;\r\n  }\r\n\r\n  public set mouseoutLisener(mouseoutListener: () => void) {\r\n    this._mouseoutListener = mouseoutListener;\r\n  }\r\n}\r\n","export function hexToRgb(hex: string) {\r\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n    return r + r + g + g + b + b;\r\n  });\r\n\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n      }\r\n    : null;\r\n}\r\n","import _ from \"lodash\";\r\n\r\n/**\r\n * Find top value indexes from number array\r\n * @param array\r\n * @param numOfTop\r\n */\r\nexport function findTopValueIndexes(\r\n  array: Array<number>,\r\n  numOfTop: number\r\n): number[] {\r\n  const sortedArray = _.orderBy(array, [], [\"desc\"]);\r\n  // console.log(\"sortedArray\", sortedArray);\r\n\r\n  const topValueIndexes: number[] = [];\r\n\r\n  let i = 0;\r\n  let numberOfSame = 0;\r\n  while (i < numOfTop) {\r\n    let indexWanted: number = 0;\r\n    while (indexWanted != -1) {\r\n      indexWanted = _.indexOf(array, sortedArray[i], indexWanted);\r\n\r\n      if (indexWanted >= 0) {\r\n        topValueIndexes.push(indexWanted);\r\n        indexWanted++;\r\n        numberOfSame++;\r\n      }\r\n    }\r\n\r\n    if (numberOfSame === 0) break;\r\n\r\n    i += numberOfSame;\r\n    numberOfSame = 0;\r\n  }\r\n\r\n  return topValueIndexes;\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { ParticipantDict } from \"./../../../common_functions/makeParticipants\";\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\nimport { Participant } from \"../../../common_functions/makeParticipants\";\r\nimport _ from \"lodash\";\r\nimport { KeytermObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { findTopValueIndexes } from \"../../../common_functions/findTopValueIndexes\";\r\nimport { string } from \"mathjs\";\r\n\r\nexport class ParticipantBlocksDrawer {\r\n  private readonly participantRectGSlection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  private selectedParticipants: Participant[] = [];\r\n  private _clickListener:\r\n    | null\r\n    | ((\r\n        mouseEvent: MouseEvent,\r\n        utteranceObjectForDrawing: UtteranceObjectForDrawing\r\n      ) => void) = null;\r\n\r\n  private _selectedParticipantClickListener:\r\n    | null\r\n    | ((selectedParticipant: Participant) => void) = null;\r\n  private _mouseoverListener:\r\n    | null\r\n    | ((\r\n        mouseEvent: MouseEvent,\r\n        utteranceObjectForDrawing: UtteranceObjectForDrawing\r\n      ) => void) = null;\r\n  private _mouseoutListener: null | (() => void) = null;\r\n\r\n  public sortByFindDis() {\r\n    this.utteranceObjectsForDrawing.sort((a, b) => {\r\n      return a.findDisagreeScale - b.findDisagreeScale;\r\n    });\r\n    console.log(\"After sorting: \", this.utteranceObjectsForDrawing);\r\n    this.update();\r\n  }\r\n\r\n  public sortByIndex() {\r\n    this.utteranceObjectsForDrawing.sort((a, b) => {\r\n      return a.beginningPointOfXY - b.beginningPointOfXY;\r\n    });\r\n    console.log(\"After sorting: \", this.utteranceObjectsForDrawing);\r\n    this.update();\r\n  }\r\n\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    private readonly participantDict: ParticipantDict,\r\n    private readonly conceptSimilarityBlocks: SimilarityBlock[],\r\n    private readonly conceptMatrixTransposed: number[][],\r\n    private readonly keytermObjects: KeytermObject[],\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    this.participantRectGSlection = svgSelection.append(\"g\");\r\n  }\r\n\r\n  public update() {\r\n    //@ts-ignore\r\n    const participantRectGSlectionDataBound = this.participantRectGSlection\r\n      .selectAll<SVGRectElement, UtteranceObjectForDrawing>(\"rect\")\r\n      .data(this.utteranceObjectsForDrawing, (d) => d)\r\n      .join(\r\n        (enter) => {\r\n          const newEnter = enter.append(\"rect\");\r\n          this.setAttributes(\r\n            newEnter,\r\n            this.participantDict,\r\n            this.conceptMatrixTransposed,\r\n            this.keytermObjects\r\n          );\r\n          return newEnter;\r\n        },\r\n        (update) => {\r\n          this.setAttributes(\r\n            update,\r\n            this.participantDict,\r\n            this.conceptMatrixTransposed,\r\n            this.keytermObjects\r\n          );\r\n          return update;\r\n        },\r\n        (exit) => exit.remove()\r\n      );\r\n\r\n    this.setAttributes(\r\n      participantRectGSlectionDataBound,\r\n      this.participantDict,\r\n      this.conceptMatrixTransposed,\r\n      this.keytermObjects\r\n    );\r\n  }\r\n\r\n  private setAttributes(\r\n    this: ParticipantBlocksDrawer,\r\n    selection: d3.Selection<\r\n      SVGRectElement,\r\n      UtteranceObjectForDrawing,\r\n      SVGGElement,\r\n      unknown\r\n    >,\r\n    participantDict: { [participant: string]: Participant },\r\n    conceptMatrixTransposed: number[][],\r\n    keytermObjects: KeytermObject[]\r\n  ) {\r\n    selection // utterance_objects 데이터 적용\r\n      // .transition()\r\n      // .duration(750)\r\n      .attr(\"x\", (d) => d.beginningPointOfXY)\r\n      .attr(\"y\", (d) => d.beginningPointOfXY)\r\n      .attr(\"width\", (d) => d.width) // 노드 두께\r\n      .attr(\"height\", (d) => d.width) // 노드 높이\r\n      .style(\"fill\", (d) => participantDict[d.name].color);\r\n\r\n    selection\r\n      .selectAll(\"title\")\r\n      .data((d) => [d])\r\n      .join(\"title\")\r\n      .text((d, i) => {\r\n        const conceptVectorOfUtterance = conceptMatrixTransposed[i];\r\n        // console.log(conceptVectorOfUtterance);\r\n        const topValueIndexes = findTopValueIndexes(\r\n          conceptVectorOfUtterance,\r\n          3 // 최대 보여줄 키워드 수.\r\n        );\r\n        const mainKeytermObjects = _.map(\r\n          topValueIndexes,\r\n          (topValueIndex) => keytermObjects[topValueIndex]\r\n        );\r\n        // console.log(topValueIndexes);\r\n        const mainKeytermsString = _.reduce(\r\n          mainKeytermObjects,\r\n          (result, keytermObject) => {\r\n            return `${result} ${keytermObject.name}`;\r\n          },\r\n          \"\"\r\n        );\r\n        return `keywords:${mainKeytermsString}\\n ${d.name}: ${d.utterance}\r\n            `;\r\n      })\r\n      .on(\"mouseover\", (e, u) => {\r\n        const mouseEvent = (e as unknown) as MouseEvent;\r\n        mouseEvent.stopPropagation();\r\n        const utteranceObjectForDrawing = (u as unknown) as UtteranceObjectForDrawing;\r\n\r\n        // TODO adjust transcript-view\r\n        if (this._mouseoverListener) {\r\n          this._mouseoverListener(mouseEvent, utteranceObjectForDrawing);\r\n        }\r\n      })\r\n      .on(\"mouseout\", (e, u) => {\r\n        if (this._mouseoutListener) {\r\n          this._mouseoutListener();\r\n        }\r\n      });\r\n  }\r\n\r\n  public click(\r\n    e: MouseEvent | React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    u: UtteranceObjectForDrawing\r\n  ) {\r\n    const mouseEvent = e;\r\n    mouseEvent.stopPropagation();\r\n    const selectedParticipant = u;\r\n\r\n    this.selectedParticipants.push(\r\n      this.participantDict[selectedParticipant.name]\r\n    );\r\n\r\n    //console.log(\"this.selectedParticipants\", this.selectedParticipants);\r\n\r\n    if (this.selectedParticipants.length === 1) {\r\n      // remain same participant's similairity_block. remove other participant's similarity_block\r\n      _.forEach(this.conceptSimilarityBlocks, (similarityBlock) => {\r\n        const rowParticipantName = this.utteranceObjectsForDrawing[\r\n          similarityBlock.rowUtteranceIndex\r\n        ].name;\r\n        const colParticipantName = this.utteranceObjectsForDrawing[\r\n          similarityBlock.columnUtteranceIndex\r\n        ].name;\r\n        if (\r\n          selectedParticipant.name === rowParticipantName ||\r\n          selectedParticipant.name === colParticipantName\r\n        ) {\r\n          similarityBlock.visible = true;\r\n        } else {\r\n          similarityBlock.visible = false;\r\n        }\r\n      });\r\n    } else if (this.selectedParticipants.length === 2) {\r\n      //\r\n      const participant1 = this.selectedParticipants[0];\r\n      const participant2 = this.selectedParticipants[1];\r\n\r\n      _.forEach(this.conceptSimilarityBlocks, (similarityBlock) => {\r\n        const rowParticipantName = this.utteranceObjectsForDrawing[\r\n          similarityBlock.rowUtteranceIndex\r\n        ].name;\r\n        const colParticipantName = this.utteranceObjectsForDrawing[\r\n          similarityBlock.columnUtteranceIndex\r\n        ].name;\r\n        if (\r\n          (rowParticipantName === participant1.name &&\r\n            colParticipantName === participant2.name) ||\r\n          (rowParticipantName === participant2.name &&\r\n            colParticipantName === participant1.name) ||\r\n          (rowParticipantName === participant1.name &&\r\n            colParticipantName === participant1.name) ||\r\n          (rowParticipantName === participant2.name &&\r\n            colParticipantName === participant2.name)\r\n        ) {\r\n          similarityBlock.visible = true;\r\n        } else {\r\n          similarityBlock.visible = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public emptySelectedParticipants() {\r\n    this.selectedParticipants = [];\r\n  }\r\n\r\n  public set clickListener(\r\n    clickListener: (e: MouseEvent, d: UtteranceObjectForDrawing) => void\r\n  ) {\r\n    this._clickListener = clickListener;\r\n  }\r\n\r\n  public set mouseoverListener(\r\n    mouseoverListener: (\r\n      mouseEvent: MouseEvent,\r\n      utteranceObjectForDrawing: UtteranceObjectForDrawing\r\n    ) => void\r\n  ) {\r\n    this._mouseoverListener = mouseoverListener;\r\n  }\r\n\r\n  public set mouseoutLisener(mouseoutListener: () => void) {\r\n    this._mouseoutListener = mouseoutListener;\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport {\r\n  TermCountDict,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\nimport { TermType } from \"../DataImporter\";\r\n\r\nexport interface ParticipantCount {\r\n  name: string;\r\n  count: number;\r\n  sentiment: number; // sum of sentiments of sentences\r\n}\r\n\r\nexport interface TermCountDetailDict {\r\n  [term: string]: {\r\n    [name: string]: ParticipantCount;\r\n  };\r\n}\r\n\r\nexport class TermCountDictOfEGMaker {\r\n  private readonly termCountDictOfEG: TermCountDict = {};\r\n  private readonly termBooleanCountDictOfEG: TermCountDict = {};\r\n  private readonly termCountDetailDictOfEG: TermCountDetailDict = {};\r\n  private readonly termBooleanCountDetailDictOfEG: TermCountDetailDict = {};\r\n\r\n  public constructor(\r\n    utteranceObjectsOfEG: UtteranceObject[],\r\n    participantDict: ParticipantDict,\r\n    termType: TermType\r\n  ) {\r\n    // object for deepcopy\r\n    const defaultParticipantNameCountDict: {\r\n      [name: string]: ParticipantCount;\r\n    } = {};\r\n    _.chain(participantDict)\r\n      .map((participant) => participant.name)\r\n      .forEach((name) => {\r\n        defaultParticipantNameCountDict[name] = {\r\n          name,\r\n          count: 0,\r\n          sentiment: 0,\r\n        };\r\n      })\r\n      .value();\r\n\r\n    _.forEach(utteranceObjectsOfEG, (utteranceObject) => {\r\n      _.forEach(utteranceObject.sentenceObjects, (sentenceObject) => {\r\n        const termCountDict =\r\n          termType === \"single_term\"\r\n            ? (sentenceObject.singleTermCountDict as TermCountDict)\r\n            : (sentenceObject.compoundTermCountDict as TermCountDict);\r\n        _.forEach(termCountDict, (count, term) => {\r\n          if (!(term in this.termCountDictOfEG)) {\r\n            this.termCountDictOfEG[term] = 0;\r\n          }\r\n          this.termCountDictOfEG[term] += termCountDict[term];\r\n\r\n          if (!(term in this.termBooleanCountDictOfEG)) {\r\n            this.termBooleanCountDictOfEG[term] = 0;\r\n          }\r\n          this.termBooleanCountDictOfEG[term] += 1;\r\n\r\n          if (!(term in this.termCountDetailDictOfEG)) {\r\n            this.termCountDetailDictOfEG[term] = _.cloneDeep(\r\n              defaultParticipantNameCountDict\r\n            );\r\n          }\r\n          this.termCountDetailDictOfEG[term][utteranceObject.name].count +=\r\n            termCountDict[term];\r\n          this.termCountDetailDictOfEG[term][utteranceObject.name].sentiment +=\r\n            sentenceObject.sentiment;\r\n\r\n          if (!(term in this.termBooleanCountDetailDictOfEG)) {\r\n            this.termBooleanCountDetailDictOfEG[term] = _.cloneDeep(\r\n              defaultParticipantNameCountDict\r\n            );\r\n          }\r\n          this.termBooleanCountDetailDictOfEG[term][\r\n            utteranceObject.name\r\n          ].count += 1;\r\n          this.termBooleanCountDetailDictOfEG[term][\r\n            utteranceObject.name\r\n          ].sentiment += sentenceObject.sentiment;\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  public getTermCountDictOfEG() {\r\n    return this.termCountDictOfEG;\r\n  }\r\n\r\n  public getTermBooleanCountDictOfEG() {\r\n    return this.termBooleanCountDictOfEG;\r\n  }\r\n\r\n  public getTermBooleanCountDetailDictOfEG() {\r\n    return this.termBooleanCountDetailDictOfEG;\r\n  }\r\n\r\n  public getTermCountDetailDictOfEG() {\r\n    return this.termCountDetailDictOfEG;\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { TermType } from \"../DataImporter\";\r\nimport { DataStructureSet } from \"../DataStructureMaker/DataStructureManager\";\r\nimport { DebateDataSet } from \"../../../interfaces/DebateDataInterface\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\nimport * as d3 from \"d3\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  extractFrequencyTermsFromEG,\r\n  extractKeytermsFromEngagementGroup,\r\n  extractTermsFromEngagementGroup,\r\n} from \"../DataStructureMaker/extractTermsFromEngagementGroup\";\r\nimport { KeytermObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { constants } from \"http2\";\r\n\r\nexport class TopicGroupsDrawer {\r\n  private readonly topicGuideRectGSelection: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  private readonly topicGuideTextGSelection: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  private _topicGroups: SimilarityBlock[][][] = [];\r\n  private _topicGroupTitles: string[] = [];\r\n  private _showTopicGroupTitle: boolean = true;\r\n  private _showTopicGroup: boolean = true;\r\n  private _guideColor: string = \"green\";\r\n\r\n  public onTitleClicked:\r\n    | null\r\n    | ((\r\n        mouseEvent: MouseEvent,\r\n        engagementGroup: SimilarityBlock[][],\r\n        engagementGroupIndex: number\r\n      ) => void) = null;\r\n\r\n  public constructor(\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>,\r\n    private readonly debateDataSet: DebateDataSet,\r\n    private readonly dataStructureSet: DataStructureSet,\r\n    private readonly termType: TermType\r\n  ) {\r\n    this.topicGuideRectGSelection = svgSelection.append(\"g\");\r\n    this.topicGuideTextGSelection = svgSelection.append(\"g\");\r\n  }\r\n\r\n  public set topicGroups(topicGroups: SimilarityBlock[][][]) {\r\n    this._topicGroups = topicGroups;\r\n  }\r\n  public get topicGroups() {\r\n    return this._topicGroups;\r\n  }\r\n  public set topicGroupTitles(topicGroupTitles: string[]) {\r\n    this._topicGroupTitles = topicGroupTitles;\r\n  }\r\n  public set visible(showTopicGroup: boolean) {\r\n    this._showTopicGroup = showTopicGroup;\r\n  }\r\n  public set showTopicGroupTitle(showTopicGroupTitle: boolean) {\r\n    this._showTopicGroupTitle = showTopicGroupTitle;\r\n  }\r\n  public set color(guideColor: string) {\r\n    this._guideColor = guideColor;\r\n  }\r\n\r\n  public update() {\r\n    const excludedIndex = [1, 3, 5];\r\n    const excludedIndexTwo = [1, 3, 5];\r\n    const self = this;\r\n    // 주제별로 보고 싶다면 this._guideColor로 필터링 적용해도 될듯함.\r\n    // filter 후 데이터 제공.\r\n    const filteredData = this._topicGroups.filter(\r\n      (group, index) => !excludedIndex.includes(index)\r\n    );\r\n    const secFilteredData = this._topicGroups.filter(\r\n      (group, index) => !excludedIndexTwo.includes(index)\r\n    );\r\n    //console.log(filteredData);\r\n    //console.log(this._guideColor);\r\n    const topicGuideRectGSelection = this.topicGuideRectGSelection\r\n      .selectAll<SVGRectElement, unknown>(\"rect\")\r\n      //.data(this._topicGroups)\r\n      // 색상 조금만 변경해서 이런식으로 조건주면 될듯함.\r\n      .data(this._guideColor === \"#ff0000\" ? filteredData : secFilteredData)\r\n      .join(\"rect\")\r\n      //.style(\"visibility\", (eg) => ( ? \"visible\" : \"none\"))\r\n      .style(\"opacity\", 0.45);\r\n    topicGuideRectGSelection.call(\r\n      setAttributesOfTopicGuides.bind(\r\n        this,\r\n        topicGuideRectGSelection,\r\n        this._showTopicGroup,\r\n        this._guideColor\r\n      )\r\n    );\r\n\r\n    const topicGuideTextGSelection = this.topicGuideTextGSelection\r\n      .selectAll<SVGTextElement, unknown>(\"text\")\r\n      .data(this._topicGroups)\r\n      .join(\"text\");\r\n\r\n    topicGuideTextGSelection.call(\r\n      setAttributesOfTopicText.bind(this, topicGuideTextGSelection, {\r\n        topicGroupTitles: this._topicGroupTitles,\r\n        showTopicGroup: this._showTopicGroup,\r\n        showTopicGroupTitle: this._showTopicGroupTitle,\r\n        guideColor: this._guideColor,\r\n        conceptMatrixTransposed: this.debateDataSet.conceptMatrixTransposed,\r\n        keytermObjects: this.debateDataSet.keytermObjects,\r\n        termList: this.debateDataSet.termList,\r\n        termUtteranceBooleanMatrixTransposed: this.debateDataSet\r\n          .termUtteranceBooleanMatrixTransposed,\r\n      })\r\n    );\r\n\r\n    function splitTextToLines(text: string | undefined | null): string[] {\r\n      if (!text) return [];\r\n      const maxLength = 30;\r\n      const words = text.split(\" \");\r\n      const lines: string[] = [];\r\n      let line = \"\";\r\n\r\n      for (const word of words) {\r\n        if ((line + word).length > maxLength) {\r\n          lines.push(line.trim());\r\n          line = \"\";\r\n        }\r\n        line += `${word} `;\r\n      }\r\n\r\n      if (line.trim() !== \"\") lines.push(line.trim());\r\n\r\n      return lines;\r\n    }\r\n\r\n    function setAttributesOfTopicGuides(\r\n      this: TopicGroupsDrawer,\r\n      selection: d3.Selection<\r\n        SVGRectElement,\r\n        SimilarityBlock[][],\r\n        SVGGElement,\r\n        unknown\r\n      >,\r\n      showEngagementGroup: boolean,\r\n      guideColor: string\r\n    ) {\r\n      selection\r\n        .attr(\"x\", (eg) => eg[0][0].beginningPointOfX)\r\n        .attr(\"y\", (eg) => eg[0][0].beginningPointOfY)\r\n        .style(\"visibility\", (eg) => (showEngagementGroup ? \"visible\" : \"none\"))\r\n        .attr(\"width\", (eg) => {\r\n          const mostLeftTopBlock = eg[0][0];\r\n          const lastHorizontalLine = eg[eg.length - 1];\r\n          const mostRightBottomBlock =\r\n            lastHorizontalLine[lastHorizontalLine.length - 1];\r\n          const width =\r\n            mostRightBottomBlock.beginningPointOfX +\r\n            mostRightBottomBlock.width -\r\n            mostLeftTopBlock.beginningPointOfX;\r\n          return width;\r\n        })\r\n        .attr(\"height\", (eg) => {\r\n          const mostLeftTopBlock = eg[0][0];\r\n          const lastHorizontalLine = eg[eg.length - 1];\r\n          const mostRightBottomBlock =\r\n            lastHorizontalLine[lastHorizontalLine.length - 1];\r\n          const height =\r\n            mostRightBottomBlock.beginningPointOfY +\r\n            mostRightBottomBlock.height -\r\n            mostLeftTopBlock.beginningPointOfY;\r\n          return height;\r\n        })\r\n        .style(\"fill\", this._guideColor === \"#ff0000\" ? \"none\" : \"none\")\r\n        .style(\"clip-path\", \"polygon(0% 0%, 0% 0%, 100% 100%, 0% 100%)\")\r\n        .style(\"stroke-width\", 1)\r\n        .style(\"stroke\", () => (showEngagementGroup ? guideColor : \"none\"));\r\n      // .style(\"stroke\", () => (showEngagementGroup ? \"none\" : \"none\"));\r\n    }\r\n\r\n    function setAttributesOfTopicText(\r\n      this: TopicGroupsDrawer,\r\n      selection: d3.Selection<\r\n        SVGTextElement,\r\n        SimilarityBlock[][],\r\n        SVGGElement,\r\n        unknown\r\n      >,\r\n      arg: {\r\n        topicGroupTitles: string[] | null;\r\n        showTopicGroup: boolean;\r\n        showTopicGroupTitle: boolean;\r\n        guideColor: string;\r\n        conceptMatrixTransposed: number[][];\r\n        keytermObjects: KeytermObject[];\r\n        termList: string[];\r\n        termUtteranceBooleanMatrixTransposed: number[][];\r\n      }\r\n    ) {\r\n      selection\r\n        .attr(\"x\", (eg, i) => {\r\n          //@ts-ignore\r\n          const mostLeftTopBlock = eg[0][0];\r\n          const lastHorizontalLine = eg[eg.length - 1];\r\n          //@ts-ignore\r\n          const mostRightBottomBlock =\r\n            lastHorizontalLine[lastHorizontalLine.length - 1];\r\n          // 지금 나머지 xPoint들은 적용이 안되고 있는 상태.(수정완료)\r\n          if (this._topicGroupTitles) {\r\n            let xPoint = 0;\r\n            const xPoints = [];\r\n            for (let i = 0; i < this._topicGroupTitles.length; i++) {\r\n              if (this._topicGroupTitles[i]) {\r\n                if (this._guideColor === \"#ff0000\") {\r\n                  switch (i) {\r\n                    case 0:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 +\r\n                        25;\r\n                      break;\r\n                    case 1:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 +\r\n                        20000;\r\n                      break;\r\n                    case 2:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 +\r\n                        15; // 그냥 멀리 버려버리기.\r\n                      break;\r\n                    case 3:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 -\r\n                        20000;\r\n                      break;\r\n                    case 4:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 +\r\n                        3;\r\n                      break;\r\n                    case 5:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 -\r\n                        20000;\r\n                      break;\r\n                    case 6:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 -\r\n                        25;\r\n                      break;\r\n                    case 7:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 -\r\n                        0;\r\n                      break;\r\n                    case 8:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 -\r\n                        55;\r\n                      break;\r\n                    default:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 +\r\n                        0;\r\n                    // break;\r\n                  }\r\n                  xPoints[i] = xPoint;\r\n                } else {\r\n                  // #ff0001 pos\r\n                  switch (i) {\r\n                    // middleTopicGroup\r\n                    case 0:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 +\r\n                        15;\r\n                      break;\r\n                    case 1:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 +\r\n                        20000;\r\n                      break;\r\n                    case 2:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 -\r\n                        3;\r\n                      break;\r\n                    case 3:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 -\r\n                        20000;\r\n                      break;\r\n                    case 4:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 -\r\n                        15;\r\n                      break;\r\n                    case 5:\r\n                      xPoint =\r\n                        mostLeftTopBlock.beginningPointOfY +\r\n                        mostRightBottomBlock.beginningPointOfY / 2 -\r\n                        20000;\r\n                      break;\r\n                  }\r\n                  xPoints[i] = xPoint;\r\n                }\r\n              }\r\n            }\r\n            //console.log(xPoints[i]);\r\n            return xPoints[i];\r\n          } else return null;\r\n        })\r\n        .attr(\"y\", (eg, i) => {\r\n          const mostLeftTopBlock = eg[0][0];\r\n          //TODO 객체의 topicGroup별로 yPoint 다르게 설정해야함.\r\n          // console.log(arg.topicGroupTitles ? arg.topicGroupTitles : null);\r\n          // const yPoint = mostLeftTopBlock.beginningPointOfY - 5;\r\n          // const yPoint = 30;\r\n          if (this._guideColor !== \"#ff0000\") {\r\n            const yPoint = -150; // Middle Engagement Group\r\n            return yPoint;\r\n          } else {\r\n            const yPoint = -130; // Small Engagement Group\r\n            return yPoint;\r\n          }\r\n          // return yPoint;\r\n        }) // draw topic text\r\n        // .text((eg, i) => {\r\n        //   //@ts-ignore\r\n        //   //const parent = d3.select(this);\r\n        //   //parent.selectAll(\"tspan\").remove;\r\n\r\n        //   if (arg.showTopicGroupTitle) {\r\n        //     if (arg.topicGroupTitles) {\r\n        //       const textLines = splitTextToLines(arg.topicGroupTitles[i] || \"\");\r\n\r\n        //       return arg.topicGroupTitles[i];\r\n        //     } else {\r\n        //       const highFrequencyTerms = extractFrequencyTermsFromEG(\r\n        //         eg,\r\n        //         this.debateDataSet.utteranceObjects,\r\n        //         this.dataStructureSet.participantDict,\r\n        //         this.termType\r\n        //       );\r\n        //       return `${highFrequencyTerms}`;\r\n        //     }\r\n        //   } else {\r\n        //     return \"\";\r\n        //   }\r\n        // })\r\n        .text((eg, i) => {\r\n          if (arg.showTopicGroupTitle) {\r\n            if (arg.topicGroupTitles) {\r\n              const textLines = splitTextToLines(arg.topicGroupTitles[i] || \"\");\r\n\r\n              // 첫 번째 줄만 반환합니다.\r\n              return textLines[0] || \"\";\r\n            } else {\r\n              const highFrequencyTerms = extractFrequencyTermsFromEG(\r\n                eg,\r\n                this.debateDataSet.utteranceObjects,\r\n                this.dataStructureSet.participantDict,\r\n                this.termType\r\n              );\r\n              return `${highFrequencyTerms}`;\r\n            }\r\n          } else {\r\n            return \"\";\r\n          }\r\n        })\r\n        .each(function (eg, i) {\r\n          const textElem = d3.select(this);\r\n          textElem.selectAll(\"tspan\").remove();\r\n\r\n          if (arg.showTopicGroupTitle && arg.topicGroupTitles) {\r\n            const textLines = splitTextToLines(arg.topicGroupTitles[i] || \"\");\r\n            for (let j = 1; j < textLines.length; j++) {\r\n              textElem\r\n                .append(\"tspan\")\r\n                .attr(\"x\", textElem.attr(\"x\"))\r\n                .attr(\"dy\", \"1.2em\")\r\n                .text(textLines[j]);\r\n            }\r\n          }\r\n        })\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .style(\"font-size\", this._guideColor === \"#ff0000\" ? \"6.8\" : \"7.5\")\r\n        .style(\"font-weight\", \"bold\")\r\n        // .style(\"fill\", () => (arg.showTopicGroup ? \"none\" : \"none\"))\r\n        .style(\"fill\", () => (arg.showTopicGroup ? arg.guideColor : \"none\"))\r\n        .style(\"cursor\", \"pointer\")\r\n        .attr(\"transform\", \"rotate(-135) scale(-1, 1)\")\r\n        .on(\"click\", (e, d) => {\r\n          const mouseEvent = (e as unknown) as MouseEvent;\r\n          const engagementGroup = (d as unknown) as SimilarityBlock[][];\r\n          mouseEvent.stopPropagation();\r\n          const engagementGroupIndex = _.indexOf(\r\n            this._topicGroups,\r\n            engagementGroup\r\n          );\r\n\r\n          // Draw conceptual_map of the engagement_group\r\n          if (this.onTitleClicked !== null) {\r\n            this.onTitleClicked(\r\n              mouseEvent,\r\n              engagementGroup,\r\n              engagementGroupIndex\r\n            );\r\n          }\r\n        })\r\n        .append(\"title\")\r\n        .text((eg) => {\r\n          const extractedTerms = extractTermsFromEngagementGroup(\r\n            eg,\r\n            arg.termUtteranceBooleanMatrixTransposed,\r\n            arg.termList\r\n          );\r\n          return `terms: ${extractedTerms}`; // terms: ~.\r\n        });\r\n    }\r\n  }\r\n}\r\n","import {\r\n  KeytermObject,\r\n  UtteranceObject,\r\n} from \"./../../../interfaces/DebateDataInterface\";\r\nimport _ from \"lodash\";\r\nimport * as math from \"mathjs\";\r\nimport { findTopValueIndexes } from \"../../../common_functions/findTopValueIndexes\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\nimport { TermCountDictOfEGMaker } from \"../ConceptualMapModal/TermCountDictOfEGMaker\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport { TermType } from \"../DataImporter\";\r\n\r\nexport function extractKeytermsFromEngagementGroup(\r\n  engagementGroup: SimilarityBlock[][],\r\n  conceptMatrixTransposed: number[][],\r\n  keytermObjects: KeytermObject[],\r\n  numOfTop: number\r\n): KeytermObject[] {\r\n  // make sum of keytermScores\r\n  let sumOfKeytermScores = math.zeros([\r\n    conceptMatrixTransposed[0].length,\r\n  ]) as number[];\r\n  _.forEach(engagementGroup, (rowSimilarityBlocks) => {\r\n    const utteranceIndex = rowSimilarityBlocks[0].rowUtteranceIndex - 1;\r\n    const keytermScores = conceptMatrixTransposed[utteranceIndex];\r\n\r\n    sumOfKeytermScores = math.add(\r\n      sumOfKeytermScores,\r\n      keytermScores\r\n    ) as number[];\r\n  });\r\n\r\n  const topValueIndexes = findTopValueIndexes(sumOfKeytermScores, numOfTop);\r\n  const highScoredKeytermObjects = _.map(\r\n    topValueIndexes,\r\n    (topValueIndex) => keytermObjects[topValueIndex]\r\n  );\r\n\r\n  return highScoredKeytermObjects;\r\n}\r\n\r\nexport function extractFrequencyTermsFromEG(\r\n  engagementGroup: SimilarityBlock[][],\r\n  utteranceObjects: UtteranceObject[],\r\n  participantDict: ParticipantDict,\r\n  termType: TermType\r\n): string[] {\r\n  const utteranceObjectsOfEG = _.map(engagementGroup, (rowSimilarityBlocks) => {\r\n    const utteranceIndex = rowSimilarityBlocks[0].rowUtteranceIndex - 1;\r\n    return utteranceObjects[utteranceIndex];\r\n  });\r\n\r\n  const termCountDictOfEGMaker = new TermCountDictOfEGMaker(\r\n    utteranceObjectsOfEG,\r\n    participantDict,\r\n    termType\r\n  );\r\n\r\n  const termCountDictOfEG = termCountDictOfEGMaker.getTermCountDictOfEG();\r\n\r\n  const termCountObjectsOfEG = _.map(termCountDictOfEG, (count, term) => {\r\n    return {\r\n      term,\r\n      count,\r\n    };\r\n  });\r\n  const sortedTermCountObjectsOfEG = _.orderBy(\r\n    termCountObjectsOfEG,\r\n    (termCountObject) => termCountObject.count,\r\n    [\"desc\"]\r\n  );\r\n\r\n  const highFrequencyTerms: string[] = [];\r\n  const numOfFrequencyTerms =\r\n    7 < sortedTermCountObjectsOfEG.length\r\n      ? 7\r\n      : sortedTermCountObjectsOfEG.length;\r\n  for (let i = 0; i < numOfFrequencyTerms; i++) {\r\n    highFrequencyTerms.push(sortedTermCountObjectsOfEG[i].term);\r\n  }\r\n\r\n  return highFrequencyTerms;\r\n}\r\n\r\nexport function extractTermsFromEngagementGroup(\r\n  engagementGroup: SimilarityBlock[][],\r\n  termUtteranceBooleanMatrixTransposed: number[][],\r\n  termList: string[]\r\n): string[] {\r\n  const standardHighCount: number = 0;\r\n\r\n  const grouptermCountDict: { [term: string]: number } = {};\r\n  _.forEach(engagementGroup, (verticalSimilarityBlocks, utteranceIndex) => {\r\n    // find terms\r\n    const termBooleans = termUtteranceBooleanMatrixTransposed[utteranceIndex];\r\n    _.forEach(termBooleans, (termBoolean, termIndex) => {\r\n      //\r\n      if (termBoolean === 1) {\r\n        const term = termList[termIndex];\r\n        if (term in grouptermCountDict) {\r\n          grouptermCountDict[term] += 1;\r\n        } else {\r\n          grouptermCountDict[term] = 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // console.log(\"highScoredKeyTermDict\", highScoredKeyTermDict);\r\n  // console.log(\"grouptermCountDict\", grouptermCountDict);\r\n  const termsOfGroup: string[] = [];\r\n  _.forEach(grouptermCountDict, (count, term) => {\r\n    if (count > standardHighCount) termsOfGroup.push(term);\r\n  });\r\n  // console.log(\"termsOfGroup\", termsOfGroup);\r\n  return termsOfGroup.sort();\r\n}\r\n\r\n// export async function makeOccurrenceVector(\r\n//   engagementGroup: SimilarityBlock[][],\r\n//   utteranceObjects: UtteranceObject[],\r\n//   termUtteranceBooleanMatrixTransposed: number[][],\r\n//   termList: string[]\r\n// ) {\r\n//   const standardHighCount: number = 3;\r\n//   const grouptermCountDict: { [term: string]: number } = {};\r\n//   _.forEach(engagementGroup, (verticalSimilarityBlocks, lineIndexOfEG) => {\r\n//     if (verticalSimilarityBlocks.length > 0) {\r\n//       const utteranceIndex: number =\r\n//         verticalSimilarityBlocks[0].utteranceRowIndex;\r\n//       // find terms\r\n//       const termBooleans = termUtteranceBooleanMatrixTransposed[utteranceIndex];\r\n//       _.forEach(termBooleans, (termBoolean, termIndex) => {\r\n//         //\r\n//         if (termBoolean === 1) {\r\n//           const term = termList[termIndex];\r\n//           if (term in grouptermCountDict) {\r\n//             grouptermCountDict[term] += 1;\r\n//           } else {\r\n//             grouptermCountDict[term] = 1;\r\n//           }\r\n//         }\r\n//       });\r\n//     }\r\n//   });\r\n\r\n//   //\r\n//   const termListOfEG: string[] = [];\r\n//   _.forEach(grouptermCountDict, (count, term) => {\r\n//     if (count >= standardHighCount) termListOfEG.push(term);\r\n//   });\r\n//   termListOfEG.sort();\r\n\r\n//   //\r\n//   const occurrenceVectorOfEG: number[] = _.map(\r\n//     termListOfEG,\r\n//     (term) => grouptermCountDict[term]\r\n//   );\r\n\r\n//   const startIndex = engagementGroup[1][0].utteranceColumnIndex;\r\n//   const endIndex =\r\n//     engagementGroup[engagementGroup.length - 1][0].utteranceRowIndex;\r\n//   const utteranceObjectsOfEG = _.filter(\r\n//     utteranceObjects,\r\n//     (utteranceObject, utteranceIndex) =>\r\n//       utteranceIndex >= startIndex && utteranceIndex <= endIndex ? true : false\r\n//   );\r\n\r\n//   //\r\n//   const cooccurrenceMatrixOfEG = (\r\n//     await axios.post<number[][]>(\r\n//       \"http://localhost:5000/make-cooccurrence-matrix\",\r\n//       {\r\n//         utteranceObjectsOfEG,\r\n//         termListOfEG,\r\n//       }\r\n//     )\r\n//   ).data;\r\n\r\n//   axios\r\n//     .post(\"http://localhost:5000/make-cooccurrence-matrix\", {\r\n//       utteranceObjectsOfEG,\r\n//       termListOfEG,\r\n//     })\r\n//     .then((response) => {\r\n//       console.log(\"axios response\", response);\r\n//     })\r\n//     .catch((error) => {\r\n//       console.error(\"axios error\", error);\r\n//     });\r\n// }\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\n\r\nexport class InsistenceMarkersDrawer {\r\n  private readonly insistenceMarkerGSlection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  // private readonly similarityBlockGroupTransposed: SimilarityBlock[][];\r\n  private _visible: boolean = false;\r\n\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    private readonly similarityBlockGroup: SimilarityBlock[][],\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    this.insistenceMarkerGSlection = svgSelection.append(\"g\");\r\n    // this.similarityBlockGroupTransposed = math.transpose(similarityBlockGroup);\r\n  }\r\n\r\n  public update() {\r\n    const InsistenceCircleGSelection = this.insistenceMarkerGSlection\r\n      .selectAll<SVGCircleElement, unknown>(\"circle\")\r\n      .data(this.utteranceObjectsForDrawing)\r\n      .join(\"circle\");\r\n\r\n    InsistenceCircleGSelection.attr(\r\n      \"cx\",\r\n      (d) => d.beginningPointOfXY + d.width / 2\r\n    )\r\n      .attr(\"cy\", (d) => d.beginningPointOfXY - 3)\r\n      .attr(\"r\", 2)\r\n      .style(\"fill\", (d, i) => {\r\n        let hasRefutation: boolean = false;\r\n        _.forEach(\r\n          this.similarityBlockGroup,\r\n          (rowSimilarityBlocks, rowIndex) => {\r\n            if (rowIndex >= i && rowSimilarityBlocks[i].refutation) {\r\n              hasRefutation = true;\r\n              return false;\r\n            }\r\n          }\r\n        );\r\n\r\n        if (this._visible && d.insistence && hasRefutation) {\r\n          return `rgba(79, 198, 66, 1)`;\r\n        } else {\r\n          return \"none\";\r\n        }\r\n      });\r\n  }\r\n\r\n  public set visible(visible: boolean) {\r\n    this._visible = visible;\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\n/* 오른쪽 기준(rowUtteracne)을 그려주는 구간 */\r\n/* right green icon*/\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\nimport { SentenceObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { wrapText } from \"./D3Drawer\";\r\nexport class RefutationIconDrawer {\r\n  private _visible: boolean = false;\r\n  private _similarityBlock: SimilarityBlock | null = null;\r\n  private _participantBlock: UtteranceObjectForDrawing | null = null;\r\n\r\n  private readonly insistenceIconGSlectionTwo!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    this.insistenceIconGSlectionTwo = svgSelection\r\n      .append(\"g\")\r\n      .style(\"visibility\", \"hidden\");\r\n    this.insistenceIconGSlectionTwo\r\n      .append(\"circle\")\r\n      .data(this.utteranceObjectsForDrawing)\r\n      .attr(\"cx\", 309.8)\r\n      .attr(\"cy\", 309.8)\r\n      .attr(\r\n        \"r\",\r\n        (d) =>\r\n          309.8 *\r\n          (Math.cbrt(d.findDisagreeScale) *\r\n            Math.cbrt(d.findDisagreeScale) *\r\n            0.6 || 1)\r\n      )\r\n      .attr(\"fill\", \"#339900\");\r\n    this.insistenceIconGSlectionTwo\r\n      .append(\"path\")\r\n      .attr(\r\n        \"d\",\r\n        \"M 239.8 183 c -10.6 -10.6 -10.6 -27.9 0 -38.5 s 27.9 -10.6 38.5 0 l 0.8 0.8 l 5.4 5.4 c -7.4 -7.5 -7.4 -19.6 0 -27.1 c 7.5 -7.5 19.6 -7.6 27.2 -0.1 l 11 11 c 31.4 31.5 62.8 62.8 94.3 94.2 c 7.7 7.7 22.7 17.9 24.6 29.4 c 0.6 3.6 -0.2 7.3 -0.4 11 c -0.7 16.1 16.8 27.4 27.2 37.8 l 25.7 25.6 L 374.7 451.8 l -53.6 -53.6 c -1.5 -1.5 -7.5 2.2 -8.9 2.8 c -4.4 2 -7 2.9 -11.7 2.7 c -11.6 -0.5 -23.1 -1.9 -34.6 -3.9 c -20.3 -3.7 -42 -8 -59.9 -0.4 c -9.2 3.9 -16.8 10.9 -22.4 19 c -4 5.7 -7.1 12.1 -12.1 16.9 c -5 4.8 -12.6 7.7 -19.7 4.9 c -4.4 -1.7 -7.9 -5.4 -10.5 -9.4 c -8.3 -12.8 -7.6 -29.1 -1.3 -41.5 c 6.2 -12.3 17.2 -21.2 28.7 -28.8 c 8.8 -5.8 18.5 -12.4 25.8 -20.4 c 9.5 -10.4 14.9 -23.2 8.7 -39.7 L 180 277.3 L 165.7 263 c -10.5 -10.6 -11.2 -28.4 -0.5 -39.1 c 10.5 -10.6 27.7 -10.7 38.4 -0.2 l -4.7 -4.6 c -10.1 -10.5 -10.1 -27.2 0 -37.8 c 10.4 -10.8 27.7 -11.2 38.5 -0.8 L 239.8 183 L 239.8 183 Z\"\r\n      )\r\n      .attr(\"fill\", \"white\");\r\n  }\r\n\r\n  public update() {\r\n    if (this._participantBlock) {\r\n      // Change this block to compare the participant's name instead of the similarityBlock\r\n      if (\r\n        this._participantBlock.name === \"장경태\" ||\r\n        this._participantBlock.name === \"김종대\"\r\n      ) {\r\n        this.insistenceIconGSlectionTwo.style(\"visibility\", \"hidden\");\r\n        this.insistenceIconGSlectionTwo.selectAll(\"text\").remove();\r\n      } else {\r\n        // Draw Red Icon\r\n        // Rest of the code as before...\r\n      }\r\n    } else {\r\n      this.insistenceIconGSlectionTwo.style(\"visibility\", \"hidden\");\r\n      this.insistenceIconGSlectionTwo.selectAll(\"text\").remove();\r\n    }\r\n    //\r\n    if (this._similarityBlock !== null) {\r\n      const rowUtteranceObject = this.utteranceObjectsForDrawing[\r\n        this._similarityBlock.rowUtteranceIndex\r\n      ];\r\n      if (\r\n        rowUtteranceObject.name === \"장경태\" ||\r\n        rowUtteranceObject.name === \"김종대\"\r\n      ) {\r\n        const iconXOffset = 7; // 원하는 고정된 X 오프셋 값을 설정합니다.\r\n        const iconYOffset = -8; // 원하는 고정된 Y 오프셋 값을 설정합니다.\r\n        const rotationAngle = 45; // 텍스트 회전 각도\r\n        const defaultXPos =\r\n          rowUtteranceObject.beginningPointOfXY +\r\n          rowUtteranceObject.width / 2 +\r\n          iconXOffset;\r\n        const defaultYPos = rowUtteranceObject.beginningPointOfXY + iconYOffset;\r\n        const transformProperty = `translate(${defaultXPos}, ${defaultYPos}) scale(0.01, 0.01)`;\r\n        const fixedTextOffset = 20; // 원하는 고정된 텍스트 오프셋 값을 설정합니다.\r\n        const textXPos = defaultXPos + fixedTextOffset; // 노드 아이콘에 대한 텍스트의 X 위치를 조정합니다.\r\n        const textYPos = defaultYPos + fixedTextOffset;\r\n        this.insistenceIconGSlectionTwo.selectAll(\"text\").remove();\r\n        this.insistenceIconGSlectionTwo\r\n          .attr(\"transform\", transformProperty)\r\n          .style(\"visibility\", \"visible\")\r\n          .data(this.utteranceObjectsForDrawing)\r\n          .each((d, i) => {\r\n            const data = rowUtteranceObject.sentenceObjects;\r\n            const countCompoundTerms = (\r\n              data: SentenceObject[]\r\n            ): { [key: string]: number } => {\r\n              const result: { [key: string]: number } = {};\r\n\r\n              data.forEach(({ compoundTermCountDict }) => {\r\n                Object.keys(compoundTermCountDict).forEach((key) => {\r\n                  if (result[key]) {\r\n                    result[key] += compoundTermCountDict[key];\r\n                  } else {\r\n                    result[key] = compoundTermCountDict[key];\r\n                  }\r\n                });\r\n              });\r\n              return result;\r\n            };\r\n            const compoundTermCounts = countCompoundTerms(data);\r\n            const compoundTermCount = Object.entries(compoundTermCounts).map(\r\n              ([term, count]) => {\r\n                return { term, count: parseInt(count as any) };\r\n              }\r\n            );\r\n            // 내림차순 정렬\r\n            const sortedCompoundTermCounts = compoundTermCount.sort(\r\n              (a, b) => b.count - a.count\r\n            );\r\n            // 상위 8가지 키워드 추출\r\n            const topFreqKeywords = sortedCompoundTermCounts.slice(0, 3);\r\n            // 텍스트 요소에 키워드를 추가합니다.\r\n            topFreqKeywords.forEach((keyword, index) => {\r\n              this.insistenceIconGSlectionTwo\r\n                .append(\"text\")\r\n                .attr(\"font-size\", \"300px\")\r\n                .attr(\"font-weight\", \"bold\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .attr(\r\n                  \"transform\",\r\n                  `rotate(${rotationAngle}, ${textXPos}, ${textYPos}) scale(1, -1)`\r\n                )\r\n                .attr(\r\n                  \"x\",\r\n                  //@ts-ignore\r\n                  this.insistenceIconGSlectionTwo.node().getBoundingClientRect()\r\n                    .x - 0\r\n                )\r\n                .attr(\r\n                  \"y\",\r\n                  //@ts-ignore\r\n                  this.insistenceIconGSlectionTwo.node().getBoundingClientRect()\r\n                    .y +\r\n                    380 * index +\r\n                    380\r\n                )\r\n                .text(`· ${keyword.term}`);\r\n            });\r\n          })\r\n          .style(\"visibility\", \"visible\");\r\n      } else {\r\n        this.insistenceIconGSlectionTwo.style(\"visibility\", \"hidden\");\r\n        this.insistenceIconGSlectionTwo.selectAll(\"text\").remove();\r\n      }\r\n    } else {\r\n      this.insistenceIconGSlectionTwo.style(\"visibility\", \"hidden\");\r\n      this.insistenceIconGSlectionTwo.selectAll(\"text\").remove();\r\n    }\r\n  }\r\n\r\n  public set similarityBlock(similarityBlock: SimilarityBlock | null) {\r\n    this._similarityBlock = similarityBlock;\r\n  }\r\n\r\n  public set participantBlock(\r\n    participantBlock: UtteranceObjectForDrawing | null\r\n  ) {\r\n    this._participantBlock = participantBlock;\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\n/* 왼쪽 기준(columnUtteracne)을 그려주는 구간 */\r\n/* left green icon*/\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\nimport { SentenceObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { wrapText } from \"./D3Drawer\";\r\nexport class InsistenceIconDrawer {\r\n  private _visible: boolean = false;\r\n  private _similarityBlock: SimilarityBlock | null = null;\r\n  private _participantBlock: UtteranceObjectForDrawing | null = null;\r\n\r\n  private readonly insistenceIconGSlection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    // green 따봉\r\n    this.insistenceIconGSlection = svgSelection\r\n      .append(\"g\")\r\n      .style(\"visibility\", \"hidden\");\r\n    this.insistenceIconGSlection\r\n      .append(\"circle\")\r\n      .data(this.utteranceObjectsForDrawing)\r\n      .attr(\"cx\", 309.8)\r\n      .attr(\"cy\", 309.8)\r\n      .attr(\r\n        \"r\",\r\n        (d) =>\r\n          309.8 *\r\n          (Math.cbrt(d.findDisagreeScale) *\r\n            Math.cbrt(d.findDisagreeScale) *\r\n            0.6 || 1)\r\n      )\r\n      .attr(\"fill\", \"#339900\");\r\n    this.insistenceIconGSlection\r\n      .append(\"path\")\r\n      .data(this.utteranceObjectsForDrawing)\r\n      .attr(\r\n        \"d\",\r\n        \"M436.41,379.59l2.47,2.48a27.25,27.25,0,0,1-38.53,38.53l-4.65-4.66a27.13,27.13,0,0,1-.18,38.36c-10.63,10.64-28.52,10-39.07-.54l-14.28-14.28-23.24-23.25c-16.55-6.21-29.32-.81-39.71,8.71-8,7.31-14.54,17.05-20.35,25.83-7.57,11.45-16.51,22.41-28.82,28.66s-28.66,7-41.46-1.32c-4-2.6-7.67-6.16-9.39-10.55-2.77-7.07.14-14.66,4.91-19.67s11.15-8.17,16.85-12.13c8.15-5.65,15.07-13.17,19-22.41,7.62-17.9,3.35-39.57-.36-59.9a260.81,260.81,0,0,1-3.95-34.56c-.23-4.69.74-7.26,2.71-11.69.61-1.39,4.27-7.45,2.79-8.93L167.59,244.7,287,125.33,312.57,151c10.4,10.4,21.69,27.89,37.84,27.17,3.66-.16,7.34-1,10.95-.36,11.49,1.91,21.77,16.94,29.42,24.62q47,47.2,94.18,94.31L496,307.75a19.23,19.23,0,0,1-27.2,27.19l5.37,5.37.76.76a27.24,27.24,0,0,1-38.53,38.52Z\"\r\n      )\r\n      .attr(\"fill\", \"white\");\r\n  }\r\n  public update() {\r\n    if (this._participantBlock) {\r\n      // Change this block to compare the participant's name instead of the similarityBlock\r\n      if (\r\n        this._participantBlock.name === \"장경태\" ||\r\n        this._participantBlock.name === \"김종대\"\r\n      ) {\r\n        this.insistenceIconGSlection.style(\"visibility\", \"hidden\");\r\n        this.insistenceIconGSlection.selectAll(\"text\").remove();\r\n      } else {\r\n        // Draw Red Icon\r\n        // Rest of the code as before...\r\n      }\r\n    } else {\r\n      this.insistenceIconGSlection.style(\"visibility\", \"hidden\");\r\n      this.insistenceIconGSlection.selectAll(\"text\").remove();\r\n    }\r\n    //\r\n    if (this._similarityBlock) {\r\n      const colUtteranceObject = this.utteranceObjectsForDrawing[\r\n        this._similarityBlock.columnUtteranceIndex\r\n      ];\r\n\r\n      if (\r\n        colUtteranceObject.name === \"장경태\" ||\r\n        colUtteranceObject.name === \"김종대\"\r\n      ) {\r\n        console.log(this.insistenceIconGSlection);\r\n        // Draw Agree Icon\r\n        const iconXOffset = 7; // 원하는 고정된 X 오프셋 값을 설정합니다.\r\n        const iconYOffset = -8; // 원하는 고정된 Y 오프셋 값을 설정합니다.\r\n        const rotationAngle = 45; // 텍스트 회전 각도\r\n        const defaultXPos =\r\n          colUtteranceObject.beginningPointOfXY +\r\n          colUtteranceObject.width / 2 +\r\n          iconXOffset;\r\n        const defaultYPos = colUtteranceObject.beginningPointOfXY + iconYOffset;\r\n        const transformProperty = `translate(${defaultXPos}, ${defaultYPos}) scale(0.01, 0.01)`;\r\n        const fixedTextOffset = 20; // 원하는 고정된 텍스트 오프셋 값을 설정합니다.\r\n        const textXPos = defaultXPos + fixedTextOffset; // 노드 아이콘에 대한 텍스트의 X 위치를 조정합니다.\r\n        const textYPos = defaultYPos + fixedTextOffset;\r\n        this.insistenceIconGSlection.selectAll(\"text\").remove();\r\n        this.insistenceIconGSlection\r\n          .attr(\"transform\", transformProperty)\r\n          .style(\"visibility\", \"visible\")\r\n          //.data(this.utteranceObjectsForDrawing)\r\n          .each((d, i) => {\r\n            const data = colUtteranceObject.sentenceObjects;\r\n            const countCompoundTerms = (\r\n              data: SentenceObject[]\r\n            ): { [key: string]: number } => {\r\n              const result: { [key: string]: number } = {};\r\n\r\n              data.forEach(({ compoundTermCountDict }) => {\r\n                Object.keys(compoundTermCountDict).forEach((key) => {\r\n                  if (result[key]) {\r\n                    result[key] += compoundTermCountDict[key];\r\n                  } else {\r\n                    result[key] = compoundTermCountDict[key];\r\n                  }\r\n                });\r\n              });\r\n              return result;\r\n            };\r\n            const compoundTermCounts = countCompoundTerms(data);\r\n            const compoundTermCount = Object.entries(compoundTermCounts).map(\r\n              ([term, count]) => {\r\n                return { term, count: parseInt(count as any) };\r\n              }\r\n            );\r\n            // 내림차순 정렬\r\n            const sortedCompoundTermCounts = compoundTermCount.sort(\r\n              (a, b) => b.count - a.count\r\n            );\r\n            // 상위 8가지 키워드 추출\r\n            const topFreqKeywords = sortedCompoundTermCounts.slice(0, 3);\r\n            // 텍스트 요소에 키워드를 추가\r\n            topFreqKeywords.forEach((keyword, index) => {\r\n              this.insistenceIconGSlection\r\n                .append(\"text\")\r\n                .attr(\"font-size\", \"300px\")\r\n                .attr(\"font-weight\", \"bold\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .attr(\r\n                  \"transform\",\r\n                  `rotate(${rotationAngle}, ${textXPos}, ${textYPos}) scale(1, -1)`\r\n                )\r\n                .attr(\r\n                  \"x\",\r\n                  //@ts-ignore\r\n                  this.insistenceIconGSlection.node().getBoundingClientRect()\r\n                    .x - 0\r\n                )\r\n                .attr(\r\n                  \"y\",\r\n                  //@ts-ignore\r\n                  this.insistenceIconGSlection.node().getBoundingClientRect()\r\n                    .y +\r\n                    380 * index +\r\n                    380\r\n                )\r\n                .text(`· ${keyword.term}`);\r\n            });\r\n          })\r\n          .style(\"visibility\", \"visible\");\r\n      } else {\r\n        this.insistenceIconGSlection.style(\"visibility\", \"hidden\");\r\n        this.insistenceIconGSlection.selectAll(\"text\").remove();\r\n      }\r\n    } else {\r\n      this.insistenceIconGSlection.style(\"visibility\", \"hidden\");\r\n      this.insistenceIconGSlection.selectAll(\"text\").remove();\r\n    }\r\n  }\r\n\r\n  public set similarityBlock(similarityBlock: SimilarityBlock | null) {\r\n    this._similarityBlock = similarityBlock;\r\n  }\r\n\r\n  public set participantBlock(\r\n    participantBlock: UtteranceObjectForDrawing | null\r\n  ) {\r\n    this._participantBlock = participantBlock;\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\n/* 왼쪽 기준(columnUtteracne)을 그려주는 구간 */\r\n/* left red icon*/\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\nimport { SentenceObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { wrapText } from \"./D3Drawer\";\r\nexport class InsistenceIconDrawerTwo {\r\n  private _similarityBlock: SimilarityBlock | null = null;\r\n  private _participantBlock: UtteranceObjectForDrawing | null = null;\r\n\r\n  private readonly refutationIconGSlectionTwo!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    this.refutationIconGSlectionTwo = svgSelection\r\n      .append(\"g\")\r\n      .style(\"visibility\", \"hidden\");\r\n    this.refutationIconGSlectionTwo\r\n      .append(\"circle\")\r\n      .data(this.utteranceObjectsForDrawing)\r\n      .attr(\"cx\", 309.8)\r\n      .attr(\"cy\", 309.8)\r\n      .attr(\r\n        \"r\",\r\n        (d) =>\r\n          309.8 *\r\n          (Math.cbrt(d.findDisagreeScale) *\r\n            Math.cbrt(d.findDisagreeScale) *\r\n            0.6 || 1)\r\n      )\r\n      .attr(\"fill\", \"#ED2933\");\r\n    this.refutationIconGSlectionTwo\r\n      .append(\"path\")\r\n      .attr(\r\n        \"d\",\r\n        \"M 379.6 474.8 c -10.7 10.6 -27.9 10.6 -38.5 0 l -0.8 -0.8 l -5.3 -5.4 l 0 0 c 7.5 7.5 7.5 19.7 0 27.2 s -19.7 7.5 -27.2 0 l -11 -11 c -31.4 -31.5 -62.8 -62.8 -94.3 -94.2 c -7.7 -7.6 -22.7 -17.9 -24.6 -29.4 c -0.6 -3.6 0.2 -7.3 0.4 -11 c 0.7 -16.1 -16.8 -27.4 -27.2 -37.8 l -25.6 -25.6 l 119.4 -119.4 l 53.6 53.6 c 1.5 1.5 7.5 -2.2 8.9 -2.8 c 4.4 -2 7 -2.9 11.7 -2.7 c 11.6 0.5 23.1 1.9 34.6 4 c 20.3 3.7 42 8 59.9 0.4 c 9.2 -3.9 16.8 -10.8 22.4 -19 c 4 -5.7 7.1 -12.1 12.1 -16.9 s 12.6 -7.7 19.7 -4.9 c 4.4 1.7 7.9 5.4 10.5 9.4 c 8.3 12.8 7.6 29.1 1.3 41.5 s -17.2 21.2 -28.7 28.8 c -8.8 5.8 -18.5 12.4 -25.8 20.4 c -9.5 10.4 -14.9 23.2 -8.7 39.7 l 23.2 23.2 l 14.3 14.3 c 10.5 10.5 11.2 28.4 0.5 39.1 c -10.5 10.6 -27.7 10.7 -38.3 0.2 l 4.6 4.6 c 10.1 10.5 10.1 27.2 0 37.8 c -10.4 10.8 -27.7 11.2 -38.5 0.8 l -2.5 -2.5 C 390.2 446.9 390.2 464.2 379.6 474.8 Z\"\r\n      )\r\n      .attr(\"fill\", \"white\");\r\n  }\r\n\r\n  public update() {\r\n    if (this._participantBlock) {\r\n      // Change this block to compare the participant's name instead of the similarityBlock\r\n      if (\r\n        this._participantBlock.name === \"장경태\" ||\r\n        this._participantBlock.name === \"김종대\"\r\n      ) {\r\n        this.refutationIconGSlectionTwo.style(\"visibility\", \"hidden\");\r\n        this.refutationIconGSlectionTwo.selectAll(\"text\").remove();\r\n      } else {\r\n        // Draw Red Icon\r\n        // Rest of the code as before...\r\n      }\r\n    } else {\r\n      this.refutationIconGSlectionTwo.style(\"visibility\", \"hidden\");\r\n      this.refutationIconGSlectionTwo.selectAll(\"text\").remove();\r\n    }\r\n    //\r\n    if (this._similarityBlock) {\r\n      const colUtteranceObject = this.utteranceObjectsForDrawing[\r\n        this._similarityBlock.columnUtteranceIndex\r\n      ];\r\n      const rowUtteranceObject = this.utteranceObjectsForDrawing[\r\n        this._similarityBlock.rowUtteranceIndex\r\n      ];\r\n      // 모병제\r\n      if (\r\n        colUtteranceObject.name === \"장경태\" ||\r\n        colUtteranceObject.name === \"김종대\"\r\n      ) {\r\n        this.refutationIconGSlectionTwo.style(\"visibility\", \"hidden\");\r\n        this.refutationIconGSlectionTwo.selectAll(\"text\").remove();\r\n      } else {\r\n        // Draw Red Icon\r\n        const iconXOffset = 7; // 원하는 고정된 X 오프셋 값을 설정합니다.\r\n        const iconYOffset = -8; // 원하는 고정된 Y 오프셋 값을 설정합니다.\r\n        const rotationAngle = 45; // 텍스트 회전 각도\r\n        const defaultXPos =\r\n          colUtteranceObject.beginningPointOfXY +\r\n          colUtteranceObject.width / 2 +\r\n          iconXOffset;\r\n        const defaultYPos = colUtteranceObject.beginningPointOfXY + iconYOffset;\r\n        const transformProperty = `translate(${defaultXPos}, ${defaultYPos}) scale(0.01, 0.01)`;\r\n        const fixedTextOffset = 20; // 원하는 고정된 텍스트 오프셋 값을 설정합니다.\r\n        const textXPos = defaultXPos + fixedTextOffset; // 노드 아이콘에 대한 텍스트의 X 위치를 조정합니다.\r\n        const textYPos = defaultYPos + fixedTextOffset; // 바뀌게 될 아이콘 추가하여 넣기.\r\n        this.refutationIconGSlectionTwo.selectAll(\"text\").remove();\r\n        this.refutationIconGSlectionTwo\r\n          .attr(\"transform\", transformProperty)\r\n          .style(\"visibility\", \"visible\");\r\n        // 아래 라인 추가하여 기존 텍스트 요소를 삭제합니다\r\n        this.refutationIconGSlectionTwo\r\n          .attr(\"transform\", transformProperty)\r\n          .style(\"visibility\", \"visible\")\r\n          .data(this.utteranceObjectsForDrawing)\r\n          .each((d, i) => {\r\n            const data = colUtteranceObject.sentenceObjects;\r\n            const countCompoundTerms = (\r\n              data: SentenceObject[]\r\n            ): { [key: string]: number } => {\r\n              const result: { [key: string]: number } = {};\r\n\r\n              data.forEach(({ compoundTermCountDict }) => {\r\n                Object.keys(compoundTermCountDict).forEach((key) => {\r\n                  if (result[key]) {\r\n                    result[key] += compoundTermCountDict[key];\r\n                  } else {\r\n                    result[key] = compoundTermCountDict[key];\r\n                  }\r\n                });\r\n              });\r\n              return result;\r\n            };\r\n            const compoundTermCounts = countCompoundTerms(data);\r\n            const compoundTermCount = Object.entries(compoundTermCounts).map(\r\n              ([term, count]) => {\r\n                return { term, count: parseInt(count as any) };\r\n              }\r\n            );\r\n            // 내림차순 정렬\r\n            const sortedCompoundTermCounts = compoundTermCount.sort(\r\n              (a, b) => b.count - a.count\r\n            );\r\n            // 상위 8가지 키워드 추출\r\n            const topFreqKeywords = sortedCompoundTermCounts.slice(0, 3);\r\n            // 텍스트 요소에 키워드를 추가합니다.\r\n            topFreqKeywords.forEach((keyword, index) => {\r\n              this.refutationIconGSlectionTwo\r\n                .append(\"text\")\r\n                .attr(\"font-size\", \"300px\")\r\n                .attr(\"font-weight\", \"bold\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .attr(\r\n                  \"transform\",\r\n                  `rotate(${rotationAngle}, ${textXPos}, ${textYPos}) scale(1, -1)`\r\n                )\r\n                .attr(\r\n                  \"x\",\r\n                  //@ts-ignore\r\n                  this.refutationIconGSlectionTwo.node().getBoundingClientRect()\r\n                    .x - 0\r\n                )\r\n                .attr(\r\n                  \"y\",\r\n                  //@ts-ignore\r\n                  this.refutationIconGSlectionTwo.node().getBoundingClientRect()\r\n                    .y +\r\n                    380 * index +\r\n                    380\r\n                )\r\n                .text(`· ${keyword.term}`);\r\n            });\r\n          });\r\n      }\r\n      //.attr(\"transform\", \"scale(0.1, -0.1) rotate(-45)\");\r\n    } else {\r\n      this.refutationIconGSlectionTwo.style(\"visibility\", \"hidden\");\r\n      this.refutationIconGSlectionTwo.selectAll(\"text\").remove();\r\n    }\r\n  }\r\n\r\n  public set similarityBlock(similarityBlock: SimilarityBlock | null) {\r\n    this._similarityBlock = similarityBlock;\r\n  }\r\n\r\n  public set participantBlock(\r\n    participantBlock: UtteranceObjectForDrawing | null\r\n  ) {\r\n    this._participantBlock = participantBlock;\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\n/* 오른쪽 기준(rowUtteracne)을 그려주는 구간 */\r\n/* right red icon*/\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\nimport { SentenceObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { wrapText } from \"./D3Drawer\";\r\nexport class RefutationIconDrawerTwo {\r\n  private _visible: boolean = false;\r\n  private _similarityBlock: SimilarityBlock | null = null;\r\n  private _participantBlock: UtteranceObjectForDrawing | null = null;\r\n\r\n  private readonly refutationIconGSlection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n\r\n  public constructor(\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    svgSelection: d3.Selection<SVGGElement, MouseEvent, HTMLElement, any>\r\n  ) {\r\n    this.refutationIconGSlection = svgSelection\r\n      .append(\"g\")\r\n      .style(\"visibility\", \"hidden\");\r\n    this.refutationIconGSlection\r\n      .append(\"circle\")\r\n      .data(this.utteranceObjectsForDrawing)\r\n      .attr(\"cx\", 309.8)\r\n      .attr(\"cy\", 309.8)\r\n      .attr(\r\n        \"r\",\r\n        (d) =>\r\n          309.8 *\r\n          (Math.cbrt(d.findDisagreeScale) *\r\n            Math.cbrt(d.findDisagreeScale) *\r\n            0.6 || 1)\r\n      )\r\n      .attr(\"fill\", \"#ED2933\");\r\n    this.refutationIconGSlection\r\n      .append(\"path\")\r\n      .attr(\r\n        \"d\",\r\n        \"M183,239.67l-2.47-2.47a27.25,27.25,0,0,1,38.53-38.53l4.65,4.65A27.13,27.13,0,0,1,223.9,165c10.64-10.64,28.53-10,39.08.54l14.28,14.28L300.5,203c16.55,6.21,29.32.81,39.71-8.72,8-7.31,14.54-17,20.35-25.82,7.57-11.46,16.51-22.41,28.82-28.66s28.66-7,41.46,1.32c4,2.6,7.67,6.16,9.39,10.54,2.77,7.08-.15,14.67-4.91,19.68s-11.15,8.17-16.85,12.12c-8.16,5.66-15.07,13.18-19,22.41-7.62,17.91-3.35,39.57.36,59.91a260.81,260.81,0,0,1,3.95,34.56c.23,4.69-.74,7.25-2.71,11.69-.61,1.39-4.27,7.44-2.79,8.93l53.56,53.56L332.48,493.93l-25.62-25.62c-10.4-10.39-21.69-27.88-37.84-27.17-3.66.16-7.34,1-10.95.37-11.49-1.91-21.77-16.94-29.42-24.62q-47-47.22-94.18-94.32l-11-11.05a19.23,19.23,0,0,1,27.2-27.2L145.25,279l-.76-.75A27.25,27.25,0,0,1,183,239.67Z\"\r\n      )\r\n      .attr(\"fill\", \"white\");\r\n  }\r\n\r\n  public update() {\r\n    if (this._participantBlock) {\r\n      // Change this block to compare the participant's name instead of the similarityBlock\r\n      if (\r\n        this._participantBlock.name === \"장경태\" ||\r\n        this._participantBlock.name === \"김종대\"\r\n      ) {\r\n        this.refutationIconGSlection.style(\"visibility\", \"hidden\");\r\n        this.refutationIconGSlection.selectAll(\"text\").remove();\r\n      } else {\r\n        // Draw Red Icon\r\n        // Rest of the code as before...\r\n      }\r\n    } else {\r\n      this.refutationIconGSlection.style(\"visibility\", \"hidden\");\r\n      this.refutationIconGSlection.selectAll(\"text\").remove();\r\n    }\r\n    //\r\n    if (this._similarityBlock !== null) {\r\n      const rowUtteranceObject = this.utteranceObjectsForDrawing[\r\n        this._similarityBlock.rowUtteranceIndex\r\n      ];\r\n      if (\r\n        rowUtteranceObject.name === \"장경태\" ||\r\n        rowUtteranceObject.name === \"김종대\"\r\n      ) {\r\n        this.refutationIconGSlection.style(\"visibility\", \"hidden\");\r\n        this.refutationIconGSlection.selectAll(\"text\").remove();\r\n      } else {\r\n        const iconXOffset = 7; // 원하는 고정된 X 오프셋 값을 설정합니다.\r\n        const iconYOffset = -8; // 원하는 고정된 Y 오프셋 값을 설정합니다.\r\n        const rotationAngle = 45;\r\n        const defaultXPos =\r\n          rowUtteranceObject.beginningPointOfXY +\r\n          rowUtteranceObject.width / 2 +\r\n          iconXOffset;\r\n        const defaultYPos = rowUtteranceObject.beginningPointOfXY + iconYOffset;\r\n        const transformProperty = `translate(${defaultXPos}, ${defaultYPos}) scale(0.01, 0.01)`;\r\n        const fixedTextOffset = 20; // 원하는 고정된 텍스트 오프셋 값을 설정합니다.\r\n        const textXPos = defaultXPos + fixedTextOffset; // 노드 아이콘에 대한 텍스트의 X 위치를 조정합니다.\r\n        const textYPos = defaultYPos + fixedTextOffset;\r\n        this.refutationIconGSlection.selectAll(\"text\").remove();\r\n        this.refutationIconGSlection\r\n          .attr(\"transform\", transformProperty)\r\n          .style(\"visibility\", \"visible\")\r\n          .data(this.utteranceObjectsForDrawing)\r\n          .each((d, i) => {\r\n            const data = rowUtteranceObject.sentenceObjects;\r\n            const countCompoundTerms = (\r\n              data: SentenceObject[]\r\n            ): { [key: string]: number } => {\r\n              const result: { [key: string]: number } = {};\r\n\r\n              data.forEach(({ compoundTermCountDict }) => {\r\n                Object.keys(compoundTermCountDict).forEach((key) => {\r\n                  if (result[key]) {\r\n                    result[key] += compoundTermCountDict[key];\r\n                  } else {\r\n                    result[key] = compoundTermCountDict[key];\r\n                  }\r\n                });\r\n              });\r\n              return result;\r\n            };\r\n            const compoundTermCounts = countCompoundTerms(data);\r\n            const compoundTermCount = Object.entries(compoundTermCounts).map(\r\n              ([term, count]) => {\r\n                return { term, count: parseInt(count as any) };\r\n              }\r\n            );\r\n            // 내림차순 정렬\r\n            const sortedCompoundTermCounts = compoundTermCount.sort(\r\n              (a, b) => b.count - a.count\r\n            );\r\n            // 상위 8가지 키워드 추출\r\n            const topFreqKeywords = sortedCompoundTermCounts.slice(0, 3);\r\n            // 텍스트 요소에 키워드를 추가합니다.\r\n            topFreqKeywords.forEach((keyword, index) => {\r\n              this.refutationIconGSlection\r\n                .append(\"text\")\r\n                .attr(\"font-size\", \"300px\")\r\n                .attr(\"font-weight\", \"bold\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .attr(\r\n                  \"transform\",\r\n                  `rotate(${rotationAngle}, ${textXPos}, ${textYPos}) scale(1, -1)`\r\n                )\r\n                .attr(\r\n                  \"x\",\r\n                  //@ts-ignore\r\n                  this.refutationIconGSlection.node().getBoundingClientRect()\r\n                    .x - 0\r\n                )\r\n                .attr(\r\n                  \"y\",\r\n                  //@ts-ignore\r\n                  this.refutationIconGSlection.node().getBoundingClientRect()\r\n                    .y +\r\n                    380 * index +\r\n                    380\r\n                )\r\n                .text(`· ${keyword.term}`);\r\n            });\r\n          })\r\n          .style(\"visibility\", \"visible\");\r\n      }\r\n    } else {\r\n      this.refutationIconGSlection.style(\"visibility\", \"hidden\");\r\n      this.refutationIconGSlection.selectAll(\"text\").remove();\r\n    }\r\n  }\r\n\r\n  public set similarityBlock(similarityBlock: SimilarityBlock | null) {\r\n    this._similarityBlock = similarityBlock;\r\n  }\r\n\r\n  public set participantBlock(\r\n    participantBlock: UtteranceObjectForDrawing | null\r\n  ) {\r\n    this._participantBlock = participantBlock;\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { UncertainIconDrawer } from \"./UncertainIconDrawer\";\r\nimport { TermType } from \"./../DataImporter\";\r\nimport { DataStructureSet } from \"../DataStructureMaker/DataStructureManager\";\r\nimport { DebateDataSet } from \"./../../../interfaces/DebateDataInterface\";\r\nimport { SimilarityBlocksDrawer } from \"./SimilarityBlocksDrawer\"; // 유사도 노드\r\nimport { ParticipantBlocksDrawer } from \"./ParticipantBlocksDrawer\"; // 참가자 노드\r\nimport { UtteranceObjectForDrawing, SimilarityBlock } from \"../interfaces\";\r\nimport * as d3 from \"d3\";\r\nimport _ from \"lodash\";\r\nimport { TopicGroupsDrawer } from \"./TopicGroupsDrawer\";\r\nimport { D3ZoomEvent, zoomTransform } from \"d3\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport { KeytermObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { InsistenceMarkersDrawer } from \"./InsistenceMarkersDrawer\";\r\nimport { RefutationIconDrawer } from \"./RefutationIconDrawer\";\r\nimport { InsistenceIconDrawer } from \"./InsistenceIconDrawer\";\r\nimport { InsistenceIconDrawerTwo } from \"./InsistenceIconDrawerTwo\";\r\nimport { RefutationIconDrawerTwo } from \"./RefutationIconDrawerTwo\";\r\n\r\nexport class D3Drawer {\r\n  private readonly conceptRecurrencePlotDiv!: d3.Selection<\r\n    HTMLDivElement,\r\n    any,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  private readonly svgSelection!: d3.Selection<\r\n    SVGSVGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n  private readonly svgGSelection!: d3.Selection<\r\n    SVGGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  >;\r\n\r\n  public readonly participantBlocksDrawer: ParticipantBlocksDrawer;\r\n  public readonly insistenceMarkersDrawer: InsistenceMarkersDrawer;\r\n  public readonly refutationIconDrawer: RefutationIconDrawer;\r\n  public readonly refutationIconDrawerTwo: RefutationIconDrawerTwo;\r\n  public readonly insistenceIconDrawer: InsistenceIconDrawer;\r\n  public readonly uncertainIconDrawer: InsistenceIconDrawer;\r\n  public readonly insistenceIconDrawerTwo: InsistenceIconDrawerTwo;\r\n  //public readonly uncertainIconDrawer: uncertainIconDrawer;\r\n  public readonly similarityBlocksDrawer: SimilarityBlocksDrawer;\r\n  public readonly topicGroupsDrawer: TopicGroupsDrawer;\r\n  public readonly manualSmallTGsDrawer: TopicGroupsDrawer;\r\n  public readonly manualMiddleTGsDrawer: TopicGroupsDrawer;\r\n  public readonly manualBigTGsDrawer: TopicGroupsDrawer;\r\n  public readonly manualPeopleTGsDrawer: TopicGroupsDrawer;\r\n  public readonly lcsegEGsDrawer: TopicGroupsDrawer;\r\n  private readonly svgWidth: number;\r\n  private readonly svgHeight: number;\r\n  // private readonly svgRotate: number;\r\n  // private _svgBackgroundClickListener?: (event: MouseEvent) => void;\r\n  private _zoomListener: ((transform: d3.ZoomTransform) => void) | null = null;\r\n\r\n  public constructor(\r\n    private readonly debateDataSet: DebateDataSet,\r\n    private readonly dataStructureSet: DataStructureSet,\r\n    private readonly termType: TermType\r\n  ) {\r\n    // declare variables\r\n    this.conceptRecurrencePlotDiv = d3.select(\".concept-recurrence-plot\");\r\n\r\n    // this.svgWidth = 1130;\r\n    // this.svgHeight = 600;\r\n    this.svgWidth = window.innerWidth - 330;\r\n    this.svgHeight = window.innerHeight;\r\n\r\n    this.svgSelection = this.conceptRecurrencePlotDiv\r\n      .select<SVGSVGElement>(\"svg\")\r\n      .attr(\"width\", this.svgWidth)\r\n      .attr(\"height\", this.svgHeight)\r\n      // 전체 svg 영역\r\n      .attr(\"transform\", \"scale(1, -1) rotate(-45)\")\r\n      .call(\r\n        d3\r\n          .zoom<SVGSVGElement, D3ZoomEvent<SVGSVGElement, any>>()\r\n          .scaleExtent([0.8, 2.5]) // 예를 들어 최소 0.5배 축소부터 최대 2배 확대까지만 허용하도록 설정\r\n          .on(\"zoom\", (event) => {\r\n            //@ts-ignore\r\n            this.svgGSelection.attr(\"transform\", () => event.transform);\r\n            if (this._zoomListener) {\r\n              this._zoomListener(event.transform);\r\n            }\r\n          })\r\n      );\r\n\r\n    this.svgGSelection = this.svgSelection.select(\".svgG\");\r\n\r\n    this.participantBlocksDrawer = new ParticipantBlocksDrawer(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      dataStructureSet.participantDict,\r\n      dataStructureSet.similarityBlockManager.similarityBlocks,\r\n      debateDataSet.conceptMatrixTransposed,\r\n      debateDataSet.keytermObjects,\r\n      this.svgGSelection\r\n    ); // 주장 marker drawer\r\n    this.insistenceMarkersDrawer = new InsistenceMarkersDrawer(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      dataStructureSet.similarityBlockManager.similarityBlockGroup,\r\n      this.svgGSelection\r\n    ); // 불확실 아이콘 drawer\r\n    this.refutationIconDrawer = new RefutationIconDrawer(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      this.svgGSelection\r\n    ); // 반박 아이콘 drawer\r\n    this.refutationIconDrawerTwo = new RefutationIconDrawerTwo(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      this.svgGSelection\r\n    );\r\n    this.insistenceIconDrawer = new InsistenceIconDrawer(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      this.svgGSelection\r\n    );\r\n    this.insistenceIconDrawerTwo = new InsistenceIconDrawerTwo(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      this.svgGSelection\r\n    ); // 불확실 아이콘 drawer\r\n    this.uncertainIconDrawer = new InsistenceIconDrawer(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      this.svgGSelection\r\n    );\r\n\r\n    this.similarityBlocksDrawer = new SimilarityBlocksDrawer(\r\n      dataStructureSet.utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n      dataStructureSet.similarityBlockManager.similarityBlocks,\r\n      dataStructureSet.similarityBlockManager.similarityBlockGroup,\r\n      dataStructureSet.participantDict,\r\n      this.svgGSelection\r\n    ); // 유사도 구간 색지정\r\n\r\n    this.similarityBlocksDrawer.clickListener = (\r\n      e: MouseEvent,\r\n      d: SimilarityBlock\r\n    ) => {\r\n      this.insistenceMarkersDrawer.visible = false;\r\n      this.refutationIconDrawer.similarityBlock = null;\r\n      this.refutationIconDrawerTwo.similarityBlock = null;\r\n      this.insistenceIconDrawer.similarityBlock = null;\r\n      this.insistenceIconDrawerTwo.similarityBlock = null; // 7\r\n      this.uncertainIconDrawer.similarityBlock = null;\r\n\r\n      if (d.colUtteranceName === \"이준석\" || d.colUtteranceName === \"박휘락\") {\r\n        this.insistenceIconDrawerTwo.similarityBlock = d;\r\n        this.refutationIconDrawer.similarityBlock = d;\r\n      } else if (\r\n        d.colUtteranceName === \"김종대\" ||\r\n        d.colUtteranceName === \"장경태\"\r\n      ) {\r\n        this.insistenceIconDrawer.similarityBlock = d;\r\n        this.refutationIconDrawerTwo.similarityBlock = d;\r\n      } else if (\r\n        d.rowUtteranceName === \"이준석\" ||\r\n        d.rowUtteranceName === \"박휘락\"\r\n      ) {\r\n        this.refutationIconDrawerTwo.similarityBlock = d;\r\n        this.insistenceIconDrawer.similarityBlock = d;\r\n      } else if (\r\n        d.rowUtteranceName === \"김종대\" ||\r\n        d.rowUtteranceName === \"장경태\"\r\n      ) {\r\n        this.refutationIconDrawer.similarityBlock = d;\r\n        this.insistenceIconDrawerTwo.similarityBlock = d;\r\n      } else null;\r\n      this.refutationIconDrawer.update();\r\n      this.refutationIconDrawerTwo.update();\r\n      this.insistenceIconDrawer.update();\r\n      this.insistenceIconDrawerTwo.update();\r\n      this.uncertainIconDrawer.update();\r\n    };\r\n\r\n    this.similarityBlocksDrawer.mouseoverListener = (\r\n      e: MouseEvent,\r\n      d: SimilarityBlock\r\n    ) => {\r\n      if (d.colUtteranceName === \"이준석\" || d.colUtteranceName === \"박휘락\") {\r\n        this.insistenceIconDrawerTwo.similarityBlock = d;\r\n        this.refutationIconDrawer.similarityBlock = d;\r\n      } else if (\r\n        d.colUtteranceName === \"김종대\" ||\r\n        d.colUtteranceName === \"장경태\"\r\n      ) {\r\n        this.insistenceIconDrawer.similarityBlock = d;\r\n        this.refutationIconDrawerTwo.similarityBlock = d;\r\n      } else if (\r\n        d.rowUtteranceName === \"이준석\" ||\r\n        d.rowUtteranceName === \"박휘락\"\r\n      ) {\r\n        this.refutationIconDrawerTwo.similarityBlock = d;\r\n        this.insistenceIconDrawer.similarityBlock = d;\r\n      } else if (\r\n        d.rowUtteranceName === \"김종대\" ||\r\n        d.rowUtteranceName === \"장경태\"\r\n      ) {\r\n        this.refutationIconDrawer.similarityBlock = d;\r\n        this.insistenceIconDrawerTwo.similarityBlock = d;\r\n      } else null;\r\n      this.refutationIconDrawer.update();\r\n      this.refutationIconDrawerTwo.update();\r\n      this.insistenceIconDrawer.update();\r\n      this.insistenceIconDrawerTwo.update();\r\n      this.uncertainIconDrawer.update();\r\n    };\r\n\r\n    this.participantBlocksDrawer.clickListener = (\r\n      e: MouseEvent,\r\n      d: UtteranceObjectForDrawing\r\n    ) => {\r\n      // Log the selected participant block\r\n\r\n      // d.name이 이준석이면 this.insistenceIconDrawerTwo,\r\n\r\n      // Go through each icon drawer and set the participant block if the names match\r\n      const iconDrawers = [\r\n        this.insistenceIconDrawer, // 박휘락,\r\n        this.insistenceIconDrawerTwo, // 이준석,\r\n        this.refutationIconDrawer, // 박휘락,\r\n        this.refutationIconDrawerTwo, // 이준석,\r\n      ];\r\n      for (const iconDrawer of iconDrawers) {\r\n        if (iconDrawer.participantBlock?.name === d.name) {\r\n          iconDrawer.participantBlock = d;\r\n          iconDrawer.update();\r\n        }\r\n      }\r\n    };\r\n\r\n    this.topicGroupsDrawer = new TopicGroupsDrawer(\r\n      this.svgGSelection,\r\n      debateDataSet,\r\n      dataStructureSet,\r\n      termType\r\n    );\r\n    this.manualSmallTGsDrawer = new TopicGroupsDrawer(\r\n      this.svgGSelection,\r\n      debateDataSet,\r\n      dataStructureSet,\r\n      termType\r\n    );\r\n    // this.manualSmallTGsDrawer.color = \"#0000ff\";\r\n    this.manualSmallTGsDrawer.color = \"#ff0000\"; // blue\r\n    this.manualMiddleTGsDrawer = new TopicGroupsDrawer(\r\n      this.svgGSelection,\r\n      debateDataSet,\r\n      dataStructureSet,\r\n      termType\r\n    );\r\n    //this.manualMiddleTGsDrawer.color = \"#ff0001\";\r\n    this.manualMiddleTGsDrawer.color = \"#ff0001\";\r\n    this.manualBigTGsDrawer = new TopicGroupsDrawer(\r\n      this.svgGSelection,\r\n      debateDataSet,\r\n      dataStructureSet,\r\n      termType\r\n    );\r\n    // this.manualBigTGsDrawer.color = \"#ff0000\";\r\n    this.manualBigTGsDrawer.color = \"#026b02\";\r\n    this.manualPeopleTGsDrawer = new TopicGroupsDrawer(\r\n      this.svgGSelection,\r\n      debateDataSet,\r\n      dataStructureSet,\r\n      termType\r\n    );\r\n    this.manualPeopleTGsDrawer.color = \"#c\";\r\n    this.lcsegEGsDrawer = new TopicGroupsDrawer(\r\n      this.svgGSelection,\r\n      debateDataSet,\r\n      dataStructureSet,\r\n      termType\r\n    );\r\n    this.lcsegEGsDrawer.color = \"#cc9900\"; // yellow color\r\n    this.svgSelection.on(\"click\", (event) => {\r\n      _.forEach(\r\n        dataStructureSet.similarityBlockManager.similarityBlocks,\r\n        (similarityBlock) => {\r\n          similarityBlock.visible = true;\r\n        }\r\n      );\r\n      this.similarityBlocksDrawer.update();\r\n      this.participantBlocksDrawer.update();\r\n      this.insistenceIconDrawer.similarityBlock = null;\r\n      this.insistenceIconDrawer.update();\r\n      this.refutationIconDrawer.similarityBlock = null;\r\n      this.refutationIconDrawer.update();\r\n      this.uncertainIconDrawer.similarityBlock = null;\r\n      this.uncertainIconDrawer.update(); // 불확실성 icon\r\n      this.insistenceIconDrawerTwo.similarityBlock = null;\r\n      this.insistenceIconDrawerTwo.update();\r\n      this.refutationIconDrawerTwo.similarityBlock = null;\r\n      this.refutationIconDrawerTwo.update();\r\n    });\r\n  }\r\n\r\n  public centerConceptualRecurrentPlot() {\r\n    const utteranceObjectsForDrawing = this.dataStructureSet\r\n      .utteranceObjectsForDrawingManager.utteranceObjectsForDrawing;\r\n    const ar = [];\r\n    const arr = [];\r\n    for (let i = 0; i < utteranceObjectsForDrawing.length; i++) {\r\n      ar.push(utteranceObjectsForDrawing[i].width.toFixed(2));\r\n      arr.push(utteranceObjectsForDrawing[i].name);\r\n    }\r\n    console.log(ar);\r\n\r\n    if (utteranceObjectsForDrawing.length !== 0) {\r\n      const lastUtteranceObjectForDrawing =\r\n        utteranceObjectsForDrawing[utteranceObjectsForDrawing.length - 1];\r\n\r\n      const minusWidth =\r\n        lastUtteranceObjectForDrawing.beginningPointOfXY +\r\n        lastUtteranceObjectForDrawing.width;\r\n      const adjustedWidth = (this.svgWidth - minusWidth) / 2;\r\n\r\n      const adjustedHeight = (this.svgHeight - minusWidth) / 2;\r\n      console.log(adjustedWidth, adjustedHeight);\r\n      this.svgGSelection.attr(\r\n        \"transform\",\r\n        `translate(${adjustedWidth}, ${adjustedHeight})`\r\n      );\r\n      if (this._zoomListener) {\r\n        const element = document.createElement(\"div\");\r\n        const transform = zoomTransform(element);\r\n        this._zoomListener(transform.translate(adjustedWidth, adjustedHeight));\r\n      }\r\n    } else {\r\n      console.warn(\"no utteranceObjectsForDrawing\");\r\n    }\r\n  }\r\n\r\n  public set zoomListener(zoomListener: (transform: d3.ZoomTransform) => void) {\r\n    this._zoomListener = zoomListener;\r\n  }\r\n}\r\n\r\nexport function wrapText(text: any, width: number) {\r\n  text.each(function () {\r\n    //@ts-ignore\r\n    const text = d3.select(this),\r\n      words = text.text().split(/\\s+/).reverse(),\r\n      lineHeight = 1.1, // ems\r\n      x = text.attr(\"x\"), // get the x position\r\n      y = text.attr(\"y\"), // get the y position\r\n      dyVal = text.attr(\"dy\");\r\n\r\n    let dy = parseFloat(dyVal); // Change const to let\r\n\r\n    if (isNaN(dy)) dy = 0; // Add this line\r\n\r\n    let line: string[] = [],\r\n      lineNumber = 0,\r\n      tspan = text\r\n        .text(null)\r\n        .append(\"tspan\")\r\n        .attr(\"x\", x) // add the x position\r\n        .attr(\"y\", y) // add the y position\r\n        .attr(\"dy\", dy + \"em\"),\r\n      word: string | null | undefined = undefined;\r\n\r\n    while ((word = words.pop())) {\r\n      line.push(word);\r\n      tspan.text(line.join(\" \"));\r\n      //@ts-ignore\r\n      if (tspan.node().getComputedTextLength() > width) {\r\n        line.pop();\r\n        tspan.text(line.join(\" \"));\r\n        line = [word];\r\n        tspan = text\r\n          .append(\"tspan\")\r\n          .attr(\"x\", x) // add the x position\r\n          .attr(\"y\", y) // add the y position\r\n          .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\r\n          .text(word);\r\n      }\r\n    }\r\n  });\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport * as d3 from \"d3\";\r\n// import { D3ZoomEvent } from \"d3\";\r\nimport { LinkDatum, NodeDatum } from \"./GraphDataStructureMaker\";\r\nimport { ParticipantCount } from \"./TermCountDictOfEGMaker\";\r\n\r\nexport class SvgGSelectionsMaker {\r\n  private svgSelection: null | d3.Selection<\r\n    SVGSVGElement,\r\n    any,\r\n    HTMLElement,\r\n    any\r\n  > = null; // default\r\n  private svgGSelection: null | d3.Selection<\r\n    SVGGElement,\r\n    DragEvent,\r\n    HTMLElement,\r\n    any\r\n  > = null; // default\r\n\r\n  public constructor(\r\n    private readonly conceptualMapDivSelection: d3.Selection<\r\n      d3.BaseType,\r\n      unknown,\r\n      HTMLElement,\r\n      any\r\n    >,\r\n    private readonly svgWidth: number,\r\n    private readonly svgHeight: number\r\n  ) {}\r\n\r\n  public appendSvgSelection() {\r\n    this.svgSelection = this.conceptualMapDivSelection\r\n      .append(\"svg\")\r\n      .attr(\"width\", this.svgWidth)\r\n      .attr(\"height\", this.svgHeight)\r\n      .attr(\r\n        \"viewBox\",\r\n        `${-this.svgWidth / 2}, ${-this.svgHeight / 2}, ${this.svgWidth}, ${\r\n          this.svgHeight\r\n        }`\r\n      )\r\n      .call(\r\n        d3.zoom<SVGSVGElement, any>().on(\"zoom\", (event) => {\r\n          this.svgGSelection!.attr(\"transform\", () => event.transform);\r\n        })\r\n      );\r\n\r\n    return this.svgSelection;\r\n  }\r\n  public appendSvgGSelection() {\r\n    this.svgGSelection = this.svgSelection!.append(\"g\");\r\n\r\n    return this.svgGSelection;\r\n  }\r\n\r\n  public appendLinksGSelection() {\r\n    if (this.svgGSelection !== null) {\r\n      return this.svgGSelection\r\n        .append(\"g\")\r\n        .attr(\"stroke\", \"#999\")\r\n        .attr(\"stroke-opacity\", 0.5) // linkOpacity\r\n        .selectAll<SVGLineElement, LinkDatum>(\"line\");\r\n    } else {\r\n      throw new Error(\"svgSelection is not appended yet\");\r\n    }\r\n  }\r\n\r\n  public appendNodePiesGSelection() {\r\n    if (this.svgGSelection !== null) {\r\n      return this.svgGSelection\r\n        .append(\"g\")\r\n        .selectAll<SVGGElement, NodeDatum>(\"g\");\r\n    } else {\r\n      throw new Error(\"svgSelection is not appended yet\");\r\n    }\r\n  }\r\n\r\n  public appendCirclesOfNodePiesGSelection() {\r\n    if (this.svgGSelection !== null) {\r\n      return this.svgGSelection\r\n        .append(\"g\")\r\n        .selectAll<SVGGElement, NodeDatum>(\"g\");\r\n    } else {\r\n      throw new Error(\"svgSelection is not appended yet\");\r\n    }\r\n  }\r\n\r\n  public appendNodesGSelection() {\r\n    if (this.svgGSelection !== null) {\r\n      return this.svgGSelection\r\n        .append(\"g\")\r\n        .attr(\"stroke\", \"#fff\") // white\r\n        .attr(\"stroke-width\", 1)\r\n        .selectAll<SVGCircleElement, NodeDatum>(\"circle\");\r\n    } else {\r\n      throw new Error(\"svgSelection is not appended yet\");\r\n    }\r\n  }\r\n\r\n  public appendTextsGSelection() {\r\n    if (this.svgGSelection !== null) {\r\n      return (\r\n        this.svgGSelection\r\n          .append(\"g\")\r\n          .attr(\"text-anchor\", \"middle\")\r\n          // .style(\"user-select\", \"none\")\r\n          .style(\"pointer-events\", \"none\")\r\n          .selectAll<SVGTextElement, NodeDatum>(\"text\")\r\n      );\r\n    } else {\r\n      throw new Error(\"svgSelection is not appended yet\");\r\n    }\r\n  }\r\n}\r\n// node에 대한 interaction\r\nexport function makeSimulation(nodes: NodeDatum[], links: LinkDatum[]) {\r\n  return d3\r\n    .forceSimulation<NodeDatum>(nodes)\r\n    .force(\r\n      \"link\",\r\n      d3.forceLink<NodeDatum, LinkDatum>(links).id((d) => d.id)\r\n    )\r\n    .force(\"charge\", d3.forceManyBody().strength(-80))\r\n    .force(\"x\", d3.forceX())\r\n    .force(\"y\", d3.forceY());\r\n  // .force(\"collide\", 20);;\r\n} //d3-force\r\n\r\nexport function makeDrag() {\r\n  return (simulation: d3.Simulation<NodeDatum, undefined>) => {\r\n    function dragstarted(event: any) {\r\n      if (!event.active) simulation.alphaTarget(0.3).restart();\r\n      event.subject.fx = event.subject.x;\r\n      event.subject.fy = event.subject.y;\r\n    }\r\n\r\n    function dragged(event: any) {\r\n      event.subject.fx = event.x;\r\n      event.subject.fy = event.y;\r\n    }\r\n\r\n    function dragended(event: any) {\r\n      if (!event.active) simulation.alphaTarget(0);\r\n      event.subject.fx = null;\r\n      event.subject.fy = null;\r\n    }\r\n\r\n    return d3\r\n      .drag<SVGCircleElement, NodeDatum>()\r\n      .on(\"start\", dragstarted)\r\n      .on(\"drag\", dragged)\r\n      .on(\"end\", dragended);\r\n  };\r\n}\r\n\r\n// do Make Compound!!\r\nexport const makePieData = d3\r\n  .pie<ParticipantCount>()\r\n  .sort(null)\r\n  .value((d) => d.count);\r\n\r\nexport function makeArcDAttribute(\r\n  d: d3.PieArcDatum<ParticipantCount>,\r\n  nodeDatum: NodeDatum,\r\n  nodeSizeMultiplier: number\r\n) {\r\n  const arcMaker = d3\r\n    .arc<d3.PieArcDatum<ParticipantCount>>()\r\n    .innerRadius(0)\r\n    .outerRadius(Math.sqrt(nodeDatum.count * nodeSizeMultiplier) + 3);\r\n\r\n  return arcMaker(d);\r\n}\r\n","import { ParticipantDict } from \"./../../../common_functions/makeParticipants\";\r\n/* eslint-disable no-unused-vars */\r\n// import { participantDict } from \"./../DataStructureMaker/index\";\r\n// NodeLink Diagram를 그리기 위한 정보가 들어있는 Drawer Data.ts\r\nimport * as d3 from \"d3\";\r\nimport { LinkDatum, NodeDatum, NodeLinkDict } from \"./GraphDataStructureMaker\";\r\nimport { ParticipantCount } from \"./TermCountDictOfEGMaker\";\r\nimport {\r\n  makeArcDAttribute,\r\n  makeDrag,\r\n  makePieData,\r\n  makeSimulation,\r\n  SvgGSelectionsMaker,\r\n} from \"./ConceptualMapDrawerInternalFunctions\";\r\nimport _ from \"lodash\";\r\nimport tinygradient from \"tinygradient\";\r\n\r\nexport class ConceptualMapDrawer {\r\n  private conceptualMapDivSelection: null | d3.Selection<\r\n    d3.BaseType,\r\n    unknown,\r\n    HTMLElement,\r\n    any\r\n  > = null;\r\n  private svgSelection: null | d3.Selection<\r\n    SVGSVGElement,\r\n    MouseEvent,\r\n    HTMLElement,\r\n    any\r\n  > = null;\r\n  private svgGSelection: null | d3.Selection<\r\n    SVGGElement,\r\n    DragEvent,\r\n    HTMLElement,\r\n    any\r\n  > = null;\r\n  private linksGSelection!: d3.Selection<\r\n    SVGLineElement,\r\n    LinkDatum,\r\n    SVGGElement,\r\n    unknown\r\n  >;\r\n  private nodesGSelection!: d3.Selection<\r\n    SVGCircleElement,\r\n    NodeDatum,\r\n    SVGGElement,\r\n    unknown\r\n  >;\r\n  private nodePiesGSelection!: d3.Selection<\r\n    SVGGElement,\r\n    NodeDatum,\r\n    SVGGElement,\r\n    unknown\r\n  >;\r\n  private circlesOfNodePiesGSelection!: d3.Selection<\r\n    SVGGElement,\r\n    NodeDatum,\r\n    SVGGElement,\r\n    unknown\r\n  >;\r\n  private nodeTextsGSelection!: d3.Selection<\r\n    SVGTextElement,\r\n    NodeDatum,\r\n    SVGGElement,\r\n    unknown\r\n  >;\r\n  private _nodeLinkDict: NodeLinkDict | null = null;\r\n  private _nodeSizeMultiplier: number = 1;\r\n  private _sentimentMarkerVisible: boolean = false;\r\n  private gradient = tinygradient(\r\n    { r: 196, g: 67, b: 67 },\r\n    { r: 79, g: 198, b: 66 }\r\n  );\r\n\r\n  public constructor(\r\n    private readonly coneptualMapDivClassName: string,\r\n    private readonly svgWidth: number,\r\n    private readonly svgHeight: number,\r\n    private _participantDict: ParticipantDict\r\n  ) {}\r\n\r\n  public setGraphData(nodeLinkDict: NodeLinkDict) {\r\n    this._nodeLinkDict = nodeLinkDict;\r\n  }\r\n  public setNodeSizeMultiplier(nodeSizeMultiplier: number) {\r\n    this._nodeSizeMultiplier = nodeSizeMultiplier;\r\n  }\r\n  public setParticipantDict(participantDict: ParticipantDict) {\r\n    this._participantDict = participantDict;\r\n  }\r\n  public set sentimentMarkerVisible(sentimentMarkerVisible: boolean) {\r\n    this._sentimentMarkerVisible = sentimentMarkerVisible;\r\n  }\r\n\r\n  public updateGraph() {\r\n    const nodes = this._nodeLinkDict!.nodes;\r\n    const links = this._nodeLinkDict!.links;\r\n    const nodeSizeMultiplier = this._nodeSizeMultiplier;\r\n    // select root div\r\n    if (this.conceptualMapDivSelection === null) {\r\n      this.conceptualMapDivSelection = d3.select(this.coneptualMapDivClassName);\r\n    }\r\n\r\n    // make SVG and G elements\r\n    if (this.svgSelection === null) {\r\n      const svgGSelectionsMaker = new SvgGSelectionsMaker(\r\n        this.conceptualMapDivSelection,\r\n        this.svgWidth,\r\n        this.svgHeight\r\n      );\r\n      this.svgSelection = svgGSelectionsMaker.appendSvgSelection();\r\n      this.svgGSelection = svgGSelectionsMaker.appendSvgGSelection();\r\n      this.linksGSelection = svgGSelectionsMaker.appendLinksGSelection();\r\n      this.nodePiesGSelection = svgGSelectionsMaker.appendNodePiesGSelection();\r\n      this.circlesOfNodePiesGSelection = svgGSelectionsMaker.appendCirclesOfNodePiesGSelection();\r\n      this.nodesGSelection = svgGSelectionsMaker.appendNodesGSelection();\r\n      this.nodeTextsGSelection = svgGSelectionsMaker.appendTextsGSelection();\r\n    }\r\n\r\n    const simulation = makeSimulation(nodes, links);\r\n\r\n    // drag event listener\r\n    const drag = makeDrag();\r\n\r\n    function createParticipantData(nodes: NodeDatum[]) {\r\n      const participantData = {};\r\n\r\n      for (const node of nodes) {\r\n        for (const participant of node.participantCounts) {\r\n          const { name, count } = participant;\r\n          //@ts-ignore\r\n          if (!participantData[name]) {\r\n            //@ts-ignore\r\n            participantData[name] = [];\r\n          }\r\n          //@ts-ignore\r\n          participantData[name].push({\r\n            name: participant.name,\r\n            id: node.id,\r\n            count: count,\r\n            time: node.time,\r\n            sentiment: participant.sentiment,\r\n          });\r\n        }\r\n      }\r\n\r\n      // Sort each participant's data by count in descending order\r\n      for (const name in participantData) {\r\n        //@ts-ignore\r\n        participantData[name].sort((a, b) => a.time - b.time);\r\n      }\r\n\r\n      return participantData;\r\n    }\r\n\r\n    // 이 함수를 사용하려면 아래와 같이 호출합니다:\r\n    const sortedNodes = createParticipantData(nodes);\r\n    console.log(sortedNodes);\r\n\r\n    // Draw elements\r\n    // Update drawing links\r\n    this.linksGSelection = this.linksGSelection\r\n      .data(links.filter((d, i) => d.source))\r\n      .join(\"line\")\r\n      .attr(\"stroke-width\", (d) => Math.sqrt(d.count))\r\n      .text(\r\n        (d) => `발화자: ${d.count}, 발화 횟수: ${d.id}, sentiment: ${d.source}`\r\n      );\r\n\r\n    // Update drawing nodePies\r\n    this.nodePiesGSelection = this.nodePiesGSelection.data(nodes).join(\"g\");\r\n    const that = this;\r\n    this.nodePiesGSelection.each(function (nodeDatum) {\r\n      const arcsSelection = d3\r\n        .select(this)\r\n        .selectAll<SVGPathElement, d3.PieArcDatum<ParticipantCount>>(\"path\")\r\n        .data(\r\n          makePieData(\r\n            nodeDatum.participantCounts.filter(\r\n              (participantCount) => participantCount.name !== \"진행자1\"\r\n            )\r\n          )\r\n        )\r\n        .join(\"path\")\r\n        .attr(\"fill\", (d) => that._participantDict[d.data.name].color)\r\n        .attr(\"d\", (d) => makeArcDAttribute(d, nodeDatum, nodeSizeMultiplier));\r\n      // each  = d3-selection 함수., d3 내장\r\n      arcsSelection.each(function (arcDatum) {\r\n        d3.select(this)\r\n          .selectAll<HTMLTitleElement, d3.PieArcDatum<ParticipantCount>>(\r\n            \"title\"\r\n          )\r\n          .data([arcDatum])\r\n          .join(\"title\")\r\n          .text(\r\n            (d) =>\r\n              `발화자: ${d.data.name}, 발화 횟수: ${d.data.count}, sentiment: ${d.data.sentiment}`\r\n          );\r\n      });\r\n    });\r\n\r\n    // Update drawing sentiment_circles of nodePies\r\n    this.circlesOfNodePiesGSelection = this.circlesOfNodePiesGSelection\r\n      .data(nodes)\r\n      .join(\"g\");\r\n    this.circlesOfNodePiesGSelection.each(function (nodeDatum) {\r\n      // find the circle's position (x, y)\r\n      // supplies: total count, the current count, distance\r\n      // ratio = ((front_counts) + (1/2* current_count) / total_count)\r\n      // x_position = distance * cos(ratio * 2PI)\r\n      // y_position = distance * sin(ratio * 2PI)\r\n      const ratios = _.map(\r\n        nodeDatum.participantCounts,\r\n        (participantCount, i) => {\r\n          const totalCount: number = _.reduce(\r\n            nodeDatum.participantCounts,\r\n            (reduced, participantCount) => reduced + participantCount.count,\r\n            0\r\n          );\r\n          let frontCount: number = 0;\r\n          for (let j = 0; j < i; j++) {\r\n            frontCount += nodeDatum.participantCounts[j].count;\r\n          }\r\n          return (frontCount + participantCount.count / 2) / totalCount;\r\n        }\r\n      );\r\n      const distance = Math.sqrt(nodeDatum.count * nodeSizeMultiplier) + 6;\r\n\r\n      const sentimentCirclesSelection = d3\r\n        .select(this)\r\n        .selectAll(\"circle\")\r\n        .data(nodeDatum.participantCounts)\r\n        .join(\"circle\")\r\n        .attr(\"r\", 2)\r\n        .attr(\r\n          \"cx\",\r\n          (d, i) => Math.cos(2 * Math.PI * ratios[i] - 0.5 * Math.PI) * distance\r\n        )\r\n        .attr(\r\n          \"cy\",\r\n          (d, i) => Math.sin(2 * Math.PI * ratios[i] - 0.5 * Math.PI) * distance\r\n        )\r\n        .attr(\"fill\", (d) => {\r\n          if (nodeDatum.id === \"매출\" && d.name === \"이재명\") {\r\n            console.log(\"!\", d);\r\n          }\r\n\r\n          if (d.count > 0 && that._sentimentMarkerVisible) {\r\n            // 감성분석 결과 색상 조절.\r\n            if (d.sentiment > 0.25 * 2) {\r\n              return \"rgb(79, 198, 66)\"; // green: 긍정\r\n            } else if (d.sentiment < -0.25 * 2) {\r\n              return \"rgb(196, 67, 67)\"; // red: 부정\r\n            } else {\r\n              return \"rgb(100, 100, 100)\"; // 중립\r\n            }\r\n          } else {\r\n            return \"none\";\r\n          }\r\n        });\r\n    });\r\n\r\n    // Update drawing nodes\r\n    this.nodesGSelection = this.nodesGSelection\r\n      .data(nodes)\r\n      .join(\"circle\")\r\n      .attr(\"r\", (d) => Math.sqrt(d.count * nodeSizeMultiplier))\r\n      .attr(\"fill\", \"rgb(55, 55, 55)\")\r\n      .call(drag(simulation));\r\n\r\n    this.nodeTextsGSelection = this.nodeTextsGSelection\r\n      .data(nodes)\r\n      .join(\"text\")\r\n      .attr(\"cy\", (d) => d.count)\r\n      .attr(\"font-size\", \"6px\")\r\n      .text((d, i) => `${d.id},${d.time}`);\r\n\r\n    // Animate the graph\r\n    simulation.on(\"tick\", () => {\r\n      this.linksGSelection\r\n        .attr(\"x1\", (d) => (d.source as NodeDatum).x!)\r\n        .attr(\"y1\", (d) => (d.source as NodeDatum).y!)\r\n        .attr(\"x2\", (d) => (d.target as NodeDatum).x!)\r\n        .attr(\"y2\", (d) => (d.target as NodeDatum).y!);\r\n\r\n      this.nodePiesGSelection.attr(\r\n        \"transform\",\r\n        (d) => `translate(${d.x} ${d.y})`\r\n      );\r\n      this.circlesOfNodePiesGSelection.attr(\r\n        \"transform\",\r\n        (d) => `translate(${d.x} ${d.y})`\r\n      );\r\n\r\n      this.nodesGSelection.attr(\"cx\", (d) => d.x!).attr(\"cy\", (d) => d.y!);\r\n\r\n      this.nodeTextsGSelection\r\n        .attr(\"x\", (d) => d.x!)\r\n        .attr(\r\n          \"y\",\r\n          (d) => d.y! + 6 * Math.log(2 * nodeSizeMultiplier * d.count)\r\n        );\r\n    });\r\n  }\r\n\r\n  public removeDrawing() {\r\n    if (this.conceptualMapDivSelection !== null) {\r\n      this.svgSelection!.remove();\r\n      this.svgSelection = null;\r\n    }\r\n  }\r\n}\r\n","import _ from \"lodash\";\r\nimport * as math from \"mathjs\";\r\nimport {\r\n  SentenceObject,\r\n  TermCountDict,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\n\r\nexport interface OccurrenceDict {\r\n  [term: string]: number;\r\n}\r\n\r\nexport class OccurrenceMaker {\r\n  private _occurrenceVector: number[];\r\n  private _cooccurrenceMatrix: number[][];\r\n\r\n  constructor(\r\n    utteranceOjbectsOfEG: UtteranceObject[],\r\n    termListOfEG: string[],\r\n    termCountDictType: \"singleTermCountDict\" | \"compoundTermCountDict\",\r\n    sentenceWindow: number\r\n  ) {\r\n    const occurrenceDict: OccurrenceDict = {};\r\n    const termCountDictsOfWS: TermCountDict[] = [];\r\n\r\n    const windowSentenceElements: SentenceObject[] = [];\r\n    _.forEach(utteranceOjbectsOfEG, (utteranceOjbect) => {\r\n      // _.forEach( collection, [iteratee = _.identity] )\r\n      _.forEach(utteranceOjbect.sentenceObjects, (sentenceObject) => {\r\n        // make windowSentences\r\n        if (windowSentenceElements.length === sentenceWindow) {\r\n          const termCountDictOfWS: TermCountDict = _.reduce<\r\n            SentenceObject,\r\n            TermCountDict\r\n          >(\r\n            windowSentenceElements,\r\n            (termCountDictOfWS, windowSentenceElement) => {\r\n              _.forEach(\r\n                windowSentenceElement[termCountDictType],\r\n                (count, term) => {\r\n                  if (term in termCountDictOfWS) {\r\n                    termCountDictOfWS[term] += count;\r\n                  } else {\r\n                    termCountDictOfWS[term] = count;\r\n                  }\r\n                }\r\n              );\r\n              return termCountDictOfWS;\r\n            },\r\n            {}\r\n          );\r\n\r\n          termCountDictsOfWS.push(termCountDictOfWS);\r\n\r\n          windowSentenceElements.shift();\r\n          windowSentenceElements.push(sentenceObject);\r\n        } else if (windowSentenceElements.length < sentenceWindow) {\r\n          windowSentenceElements.push(sentenceObject);\r\n        }\r\n\r\n        // make occurrenceDict\r\n        _.forEach(termListOfEG, (term) => {\r\n          if (sentenceObject.sentence.search(term) !== -1) {\r\n            if (term in occurrenceDict) occurrenceDict[term] += 1;\r\n            else occurrenceDict[term] = 1;\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    // make occurrenceVector\r\n    this._occurrenceVector = _.map(termListOfEG, (term) => {\r\n      return occurrenceDict[term];\r\n    });\r\n\r\n    // make cooccurrenceMatrix\r\n    this._cooccurrenceMatrix = math.zeros([\r\n      termListOfEG.length,\r\n      termListOfEG.length,\r\n    ]) as number[][];\r\n    _.forEach(termListOfEG, (term1, term1Index) => {\r\n      _.forEach(termListOfEG, (term2, term2Index) => {\r\n        _.forEach(termCountDictsOfWS, (termCountDictOfWS) => {\r\n          if (\r\n            term1 in termCountDictOfWS &&\r\n            term2 in termCountDictOfWS &&\r\n            term1 != term2\r\n          ) {\r\n            this._cooccurrenceMatrix[term1Index][term2Index] += 1;\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  public get occurrenceVector(): number[] {\r\n    console.log(this._occurrenceVector);\r\n    return this._occurrenceVector;\r\n  }\r\n  public get cooccurrenceMatrix(): number[][] {\r\n    return this._cooccurrenceMatrix;\r\n  }\r\n}\r\n","/**\r\n * 'Data Importer' made from preprocessor\r\n */\r\n\r\nimport keyDict from \"../accessKeyDict.json\";\r\nimport apiHostAddressDictionary from \"./ApiHostAddressDictionary.json\";\r\n\r\nexport const aiopenAccessKey: string = keyDict.aiopen;\r\nexport const nodeExpressAddress = apiHostAddressDictionary.nodeExpress;\r\nexport const pythonFlaskAddress = apiHostAddressDictionary.pythonFlask;\r\n","import { OccurrenceMaker } from \"./OccurrenceMaker\";\r\n/* eslint-disable no-unused-vars */\r\nimport axios from \"axios\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\nimport _ from \"lodash\";\r\nimport { SimulationLinkDatum, SimulationNodeDatum } from \"d3\";\r\nimport {\r\n  ParticipantCount,\r\n  TermCountDetailDict,\r\n  TermCountDictOfEGMaker,\r\n} from \"./TermCountDictOfEGMaker\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport {\r\n  TermCountDict,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\nimport { pythonFlaskAddress } from \"../../../constants/constants\";\r\nimport { TermType } from \"../DataImporter\";\r\n\r\nexport interface NodeDatum extends SimulationNodeDatum {\r\n  id: string;\r\n  group: \"keyterm\" | \"term\";\r\n  count: number;\r\n  booleanCount: number;\r\n  participantCounts: ParticipantCount[]; // multiple count per 1 utterance\r\n  participantBooleanCounts: ParticipantCount[]; // 1 count per 1 utterance\r\n  time?: number;\r\n}\r\n\r\nexport interface LinkDatum extends SimulationLinkDatum<NodeDatum> {\r\n  id: string;\r\n  count: number;\r\n}\r\nexport interface NodeLinkDict {\r\n  nodes: NodeDatum[];\r\n  links: LinkDatum[];\r\n}\r\n\r\n// Pure Local Creating Node and Link Data\r\nexport class GraphDataStructureMaker {\r\n  private nodes!: NodeDatum[];\r\n  private links!: LinkDatum[];\r\n  private termListOfEG!: string[];\r\n  private cooccurrenceMatrixOfEG!: number[][];\r\n\r\n  public constructor(\r\n    engagementGroup: SimilarityBlock[][],\r\n    participantDict: ParticipantDict,\r\n    utteranceObjects: UtteranceObject[],\r\n    termType: TermType\r\n  ) {\r\n    if (!engagementGroup || engagementGroup.length === 0) {\r\n      console.warn(\"EngagementGroup is undefined or empty.\");\r\n      this.nodes = [];\r\n      return;\r\n    }\r\n\r\n    const startIndex = engagementGroup[0][0].columnUtteranceIndex;\r\n    const endIndex = startIndex + engagementGroup.length;\r\n    const utteranceObjectsOfEG = _.filter(\r\n      utteranceObjects,\r\n      (utteranceObject, utteranceIndex) =>\r\n        startIndex <= utteranceIndex && utteranceIndex <= endIndex\r\n    );\r\n\r\n    const termCountDictOfEGMaker = new TermCountDictOfEGMaker(\r\n      utteranceObjectsOfEG,\r\n      participantDict,\r\n      termType\r\n    );\r\n    const termCountDictOfEG = termCountDictOfEGMaker.getTermCountDictOfEG();\r\n    const termBooleanCountDictOfEG = termCountDictOfEGMaker.getTermBooleanCountDictOfEG();\r\n    const termCountDetailDictOfEG = termCountDictOfEGMaker.getTermCountDetailDictOfEG();\r\n    const termBooleanCountDetailDictOfEG = termCountDictOfEGMaker.getTermBooleanCountDetailDictOfEG();\r\n\r\n    this.termListOfEG = this.makeTermListOfEG(termCountDictOfEG, 2);\r\n    const frequencyVectorOfEG = this.makeFrequencyVectorOfEG(\r\n      this.termListOfEG,\r\n      termCountDictOfEG\r\n    );\r\n    const booleanFrequencyVectorOfEG = this.makeFrequencyVectorOfEG(\r\n      this.termListOfEG,\r\n      termBooleanCountDictOfEG\r\n    );\r\n\r\n    const occurrenceMaker =\r\n      termType === \"single_term\"\r\n        ? new OccurrenceMaker(\r\n            utteranceObjectsOfEG,\r\n            this.termListOfEG,\r\n            \"singleTermCountDict\",\r\n            3\r\n          )\r\n        : new OccurrenceMaker(\r\n            utteranceObjectsOfEG,\r\n            this.termListOfEG,\r\n            \"compoundTermCountDict\",\r\n            3\r\n          );\r\n    this.cooccurrenceMatrixOfEG = occurrenceMaker.cooccurrenceMatrix;\r\n\r\n    this.nodes = this.makeNodes(\r\n      this.termListOfEG,\r\n      frequencyVectorOfEG,\r\n      booleanFrequencyVectorOfEG,\r\n      termCountDetailDictOfEG,\r\n      termBooleanCountDetailDictOfEG,\r\n      utteranceObjectsOfEG\r\n    );\r\n  }\r\n\r\n  public generateNodesAndLinks(\r\n    standardCooccurrenceToGenerateLinks: number,\r\n    maxOfLinksPerNode: number,\r\n    isNodeNotHavingLinksShown: boolean\r\n  ): NodeLinkDict {\r\n    this.links = this.makeLinks(\r\n      this.termListOfEG,\r\n      this.cooccurrenceMatrixOfEG,\r\n      standardCooccurrenceToGenerateLinks,\r\n      maxOfLinksPerNode\r\n    );\r\n\r\n    return {\r\n      nodes: isNodeNotHavingLinksShown\r\n        ? this.nodes\r\n        : this.filterNodes(this.nodes, this.links),\r\n      links: this.links,\r\n    };\r\n  }\r\n\r\n  public getCooccurrenceMatrixOfEG() {\r\n    return this.cooccurrenceMatrixOfEG;\r\n  }\r\n  public getTermListOfEG() {\r\n    return this.termListOfEG;\r\n  }\r\n\r\n  /**\r\n   * Remove nodes not having links\r\n   * @param nodes\r\n   * @param links\r\n   * @param termListOfEG\r\n   */\r\n  private filterNodes(nodes: NodeDatum[], links: LinkDatum[]): NodeDatum[] {\r\n    const nodeDict = _.keyBy(nodes, (node) => node.id);\r\n    _.forEach(nodes, (node) => {\r\n      const foundIndex = _.findIndex(\r\n        links,\r\n        (link) => link.source === node.id || link.target === node.id\r\n      );\r\n\r\n      if (foundIndex === -1) {\r\n        delete nodeDict[node.id];\r\n      }\r\n    });\r\n\r\n    return _.values(nodeDict);\r\n  }\r\n\r\n  private makeTermListOfEG(\r\n    termCountDict: TermCountDict,\r\n    standardHighCount: number\r\n  ) {\r\n    const termListOfEG: string[] = [];\r\n    _.forEach(termCountDict, (count, term) => {\r\n      if (count >= standardHighCount) termListOfEG.push(term);\r\n    });\r\n    termListOfEG.sort();\r\n    return termListOfEG;\r\n  }\r\n  private makeFrequencyVectorOfEG(\r\n    termListOfEG: string[],\r\n    termCountDictOfEG: TermCountDict\r\n  ) {\r\n    const frequencyVectorOfEG: number[] = _.map(\r\n      termListOfEG,\r\n      (term) => termCountDictOfEG[term]\r\n    );\r\n    return frequencyVectorOfEG;\r\n  }\r\n\r\n  /**\r\n   * Deprecated\r\n   * @param engagementGroup\r\n   * @param termListOfEG\r\n   * @param utteranceObjects\r\n   */\r\n  private makeCooccurrenceMatrixOfEG(\r\n    engagementGroup: SimilarityBlock[][],\r\n    termListOfEG: string[],\r\n    utteranceObjects: UtteranceObject[]\r\n  ): Promise<number[][]> {\r\n    const startIndex = engagementGroup[1][0].columnUtteranceIndex;\r\n    const endIndex =\r\n      engagementGroup[engagementGroup.length - 1][0].rowUtteranceIndex;\r\n    const utteranceObjectsOfEG = _.filter(\r\n      utteranceObjects,\r\n      (utteranceObject, utteranceIndex) =>\r\n        utteranceIndex >= startIndex && utteranceIndex <= endIndex\r\n          ? true\r\n          : false\r\n    );\r\n\r\n    // TODO Can I make cooccurrenceMatrix in local?\r\n    // By utteranceObject.sentenceOjbects[0].singleTermCountDict\r\n\r\n    // make termCountDictsOfWSOfEG and termListOfEG\r\n\r\n    // for each term1 in termListOfEG\r\n    //    for each term2 in termListOfEG\r\n    //       for each termCountDictOfWS in termCountDictsOfWS\r\n    //          if (term1 in termCountDictOfWS and term2 in termCountDictOfWS)\r\n    //              cooccurrenceMatrix[term1Index][term2Index] += 1\r\n\r\n    return new Promise<number[][]>((resolve, reject) => {\r\n      axios\r\n        .post<number[][]>(pythonFlaskAddress + \"/make-cooccurrence-matrix\", {\r\n          utteranceObjectsOfEG,\r\n          termListOfEG,\r\n        })\r\n        .then((response) => {\r\n          resolve(response.data);\r\n        })\r\n        .catch((reason) => {\r\n          reject(reason);\r\n        });\r\n    });\r\n  }\r\n\r\n  private makeNodes(\r\n    termListOfEG: string[],\r\n    frequencyVectorOfEG: number[],\r\n    booleanFrequencyVectorOfEG: number[],\r\n    termCountDetailDictOfEG: TermCountDetailDict,\r\n    termBooleanCountDetailDictOfEG: TermCountDetailDict,\r\n    utteranceObjectsOfEG: UtteranceObject[] // add this\r\n  ): NodeDatum[] {\r\n    const nodes = _.map<string, NodeDatum>(termListOfEG, (term, termIndex) => {\r\n      const utteranceObjectFound = utteranceObjectsOfEG.find(\r\n        (utteranceObject) =>\r\n          utteranceObject.sentenceObjects.some(\r\n            (sentenceObject) =>\r\n              sentenceObject.singleTermCountDict[term] != null ||\r\n              sentenceObject.compoundTermCountDict[term] != null\r\n          )\r\n      );\r\n\r\n      let termTime;\r\n      if (utteranceObjectFound) {\r\n        const sentenceObjectFound = utteranceObjectFound.sentenceObjects.find(\r\n          (sentenceObject) =>\r\n            sentenceObject.singleTermCountDict[term] != null ||\r\n            sentenceObject.compoundTermCountDict[term] != null\r\n        );\r\n        if (sentenceObjectFound && sentenceObjectFound.time) {\r\n          termTime = convertTimeToSeconds(sentenceObjectFound.time);\r\n        }\r\n      }\r\n\r\n      return {\r\n        id: term,\r\n        group: \"term\",\r\n        time: termTime,\r\n        count: frequencyVectorOfEG[termIndex],\r\n        booleanCount: booleanFrequencyVectorOfEG[termIndex],\r\n        participantCounts: _.values(termCountDetailDictOfEG[term]),\r\n        participantBooleanCounts: _.values(\r\n          termBooleanCountDetailDictOfEG[term]\r\n        ),\r\n      };\r\n    });\r\n    //console.log(nodes);\r\n    return nodes;\r\n  }\r\n\r\n  private makeLinks(\r\n    termListOfEG: string[],\r\n    cooccurrenceMatrixOfEG: number[][],\r\n    standardHighCooccurrence: number,\r\n    maxOflinksPerNode: number\r\n  ): LinkDatum[] {\r\n    const linkCandidateDict: { [linkId: string]: LinkDatum } = {};\r\n\r\n    // for each termListOfEG, make links based on cooccurrenceVector\r\n    _.forEach(termListOfEG, (sourceTerm, sourceTermIndex) => {\r\n      const cooccurrenceVectorOfATerm = cooccurrenceMatrixOfEG[sourceTermIndex];\r\n      const targetObjects = _.chain(cooccurrenceVectorOfATerm)\r\n        .map((count, termIndex) => ({\r\n          term: termListOfEG[termIndex],\r\n          termIndex,\r\n          count,\r\n        }))\r\n        .orderBy((targetObject) => targetObject.count, [\"desc\"])\r\n        .value();\r\n      const filteredTargetObjects = _.filter(\r\n        targetObjects,\r\n        (targetObject) =>\r\n          targetObject.count > standardHighCooccurrence &&\r\n          sourceTerm !== targetObject.term\r\n      );\r\n\r\n      let selectedTargetObjects!: {\r\n        term: string;\r\n        termIndex: number;\r\n        count: number;\r\n      }[];\r\n      if (filteredTargetObjects.length !== 0) {\r\n        selectedTargetObjects = filteredTargetObjects;\r\n      } else {\r\n        // related below commented code\r\n        // TODO If 1 node don't have any links, insert 1 link having most count\r\n        // selectedTargetObjects = [targetObjects[1]];\r\n      }\r\n\r\n      _.forEach(selectedTargetObjects, (selectedTargetObject) => {\r\n        const targetTerm = selectedTargetObject.term;\r\n        const linkId =\r\n          sourceTerm < targetTerm\r\n            ? `${sourceTerm}-${targetTerm}`\r\n            : `${targetTerm}-${sourceTerm}`;\r\n        linkCandidateDict[linkId] = {\r\n          id: linkId,\r\n          source: sourceTerm,\r\n          target: selectedTargetObject.term,\r\n          count: selectedTargetObject.count,\r\n        };\r\n      });\r\n    });\r\n\r\n    // delete links until max_of_links_per_node\r\n    const filteredLinkDict: { [linkId: string]: LinkDatum } = _.cloneDeep(\r\n      linkCandidateDict\r\n    );\r\n    _.forEach(termListOfEG, (term, termIndex) => {\r\n      const filteredLinkCandidates = _.chain(filteredLinkDict)\r\n        .filter(\r\n          (linkDatum, linkId) =>\r\n            linkDatum.source === term || linkDatum.target === term\r\n        )\r\n        .orderBy((linkDatum) => linkDatum.count, [\"desc\"])\r\n        .value();\r\n\r\n      if (filteredLinkCandidates.length > maxOflinksPerNode) {\r\n        for (\r\n          let i = maxOflinksPerNode;\r\n          i < filteredLinkCandidates.length;\r\n          i++\r\n        ) {\r\n          delete filteredLinkDict[filteredLinkCandidates[i].id];\r\n        }\r\n      }\r\n    });\r\n\r\n    // related to upper commented code.\r\n    // TODO If 1 node don't have any links, insert 1 link having most count\r\n    // _.forEach(termListOfEG, (term, termIndex) => {\r\n    //   const filteredLinks = _.filter(\r\n    //     filteredLinkDict,\r\n    //     (linkDatum, linkId) =>\r\n    //       linkDatum.source === term || linkDatum.target === term\r\n    //   );\r\n\r\n    //   if (filteredLinks.length === 0) {\r\n    //     const aliveLinkDatum = _.chain(linkCandidateDict)\r\n    //       .filter(\r\n    //         (linkDatum, linkId) =>\r\n    //           linkDatum.source === term || linkDatum.target === term\r\n    //       )\r\n    //       .maxBy((linkDatum) => linkDatum.count)\r\n    //       .value();\r\n\r\n    //     console.log(\"aliveLinkDatum\", aliveLinkDatum);\r\n\r\n    //     filteredLinkDict[aliveLinkDatum.id] = aliveLinkDatum;\r\n    //   }\r\n    // });\r\n\r\n    return _.values(filteredLinkDict);\r\n  }\r\n}\r\n\r\nfunction convertTimeToSeconds(time: string): number {\r\n  const parts = time.split(\":\").map((part) => parseInt(part, 10));\r\n  return parts[0] * 3600 + parts[1] * 60 + (parts[2] || 0);\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { Slider, InputNumber } from \"antd\";\r\nimport React from \"react\";\r\nimport styles from \"./SliderWithInput.module.scss\";\r\n\r\ninterface ComponentProps {\r\n  min: number;\r\n  max: number;\r\n  value: number;\r\n  step?: number;\r\n  sliderWidth?: number;\r\n  trackColor?: string;\r\n  onChangeListener: (changedValue: number) => void;\r\n}\r\ninterface ComponentState {}\r\n\r\nclass SliderWithInput extends React.Component<ComponentProps, ComponentState> {\r\n  constructor(props: ComponentProps) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.sliderContainer}>\r\n        <Slider\r\n          className={styles.slider}\r\n          min={this.props.min}\r\n          max={this.props.max}\r\n          value={this.props.value}\r\n          step={this.props.step ? this.props.step : 1}\r\n          onChange={this.onChange}\r\n          trackStyle={{\r\n            backgroundColor: this.props.trackColor\r\n              ? this.props.trackColor\r\n              : \"brown\",\r\n          }}\r\n          handleStyle={{\r\n            border: this.props.trackColor\r\n              ? `${this.props.trackColor} 2px solid`\r\n              : \"brown 2px solid\",\r\n            width: 10,\r\n            height: 10,\r\n            marginTop: -3,\r\n          }}\r\n          style={{\r\n            width: this.props.sliderWidth ? this.props.sliderWidth : 120,\r\n          }}\r\n        ></Slider>\r\n        <InputNumber\r\n          size={\"small\"}\r\n          className={styles.inputNumber}\r\n          value={this.props.value}\r\n          step={this.props.step ? this.props.step : 1}\r\n          onChange={this.onChange}\r\n        ></InputNumber>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private onChange = (changedValue: number | string | undefined | null) => {\r\n    if (typeof changedValue === \"number\") {\r\n      this.props.onChangeListener(changedValue);\r\n    }\r\n  };\r\n}\r\n\r\nexport default SliderWithInput;\r\n","/* eslint-disable no-unused-vars */\r\nimport { Checkbox } from \"antd\";\r\nimport React from \"react\";\r\nimport SliderWithInput from \"../../../../components/SliderWithInput/SliderWithInput\";\r\nimport { ConceptualMapDrawer } from \"../ConceptualMapDrawer\";\r\nimport { GraphDataStructureMaker } from \"../GraphDataStructureMaker\";\r\nimport styles from \"./ConceptualMapControllers.module.scss\";\r\n\r\ninterface ComponentProps {\r\n  conceptualMapDrawer?: ConceptualMapDrawer;\r\n  graphDataStructureMaker?: GraphDataStructureMaker;\r\n  maxCooccurrence: number;\r\n  standardTermCount: number;\r\n  maxOfLinksPerNode: number;\r\n  showNodeNotHavingLinks: boolean;\r\n  standardTermCountSliderListener: (changedValue: number) => void;\r\n  maxOfLinksPerNodeSliderListener: (changedValue: number) => void;\r\n  showNodeNotHavingLinksCheckboxListener: (checked: boolean) => void;\r\n}\r\ninterface ComponentState {\r\n  nodeSizeMultiplier: number;\r\n}\r\n\r\nclass ConceptualMapControllers extends React.Component<\r\n  ComponentProps,\r\n  ComponentState\r\n> {\r\n  constructor(props: ComponentProps) {\r\n    super(props);\r\n    this.state = {\r\n      nodeSizeMultiplier: 1,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.conceptualMapControllers}>\r\n        <div>Node Size Multiplier</div>\r\n        <SliderWithInput\r\n          min={1}\r\n          max={10}\r\n          value={this.state.nodeSizeMultiplier}\r\n          onChangeListener={(changedValue) => {\r\n            this.props.conceptualMapDrawer!.setNodeSizeMultiplier(changedValue);\r\n            this.props.conceptualMapDrawer!.updateGraph();\r\n\r\n            this.setState({\r\n              nodeSizeMultiplier: changedValue,\r\n            });\r\n          }}\r\n        ></SliderWithInput>\r\n\r\n        <div>Standard High Cooccurrence Count to Generate Links</div>\r\n        <SliderWithInput\r\n          min={0}\r\n          max={this.props.maxCooccurrence}\r\n          value={this.props.standardTermCount}\r\n          onChangeListener={(changedValue) => {\r\n            // Make new nodes, links\r\n            const nodesAndLinks = this.props.graphDataStructureMaker!.generateNodesAndLinks(\r\n              changedValue,\r\n              this.props.maxOfLinksPerNode,\r\n              this.props.showNodeNotHavingLinks\r\n            );\r\n            this.props.conceptualMapDrawer!.setGraphData(nodesAndLinks);\r\n            this.props.conceptualMapDrawer!.updateGraph();\r\n\r\n            this.props.standardTermCountSliderListener(changedValue);\r\n          }}\r\n        ></SliderWithInput>\r\n\r\n        <div>Number of Links per a Node</div>\r\n        <SliderWithInput\r\n          min={0}\r\n          max={10}\r\n          value={this.props.maxOfLinksPerNode}\r\n          onChangeListener={(changedValue) => {\r\n            // make new nodes, links\r\n            const nodesAndLinks = this.props.graphDataStructureMaker!.generateNodesAndLinks(\r\n              this.props.standardTermCount,\r\n              changedValue,\r\n              this.props.showNodeNotHavingLinks\r\n            );\r\n            this.props.conceptualMapDrawer!.setGraphData(nodesAndLinks);\r\n            this.props.conceptualMapDrawer!.updateGraph();\r\n\r\n            this.props.maxOfLinksPerNodeSliderListener(changedValue);\r\n          }}\r\n        ></SliderWithInput>\r\n\r\n        <Checkbox\r\n          className={styles.checkbox}\r\n          defaultChecked\r\n          onChange={(event) => {\r\n            const showNodeNotHavingLinks = event.target.checked;\r\n            // make new nodes, links\r\n            const nodesAndLinks = this.props.graphDataStructureMaker!.generateNodesAndLinks(\r\n              this.props.standardTermCount,\r\n              this.props.maxOfLinksPerNode,\r\n              showNodeNotHavingLinks\r\n            );\r\n            this.props.conceptualMapDrawer!.setGraphData(nodesAndLinks);\r\n            this.props.conceptualMapDrawer!.updateGraph();\r\n\r\n            this.props.showNodeNotHavingLinksCheckboxListener(\r\n              showNodeNotHavingLinks\r\n            );\r\n          }}\r\n        >\r\n          Nodes not having Link\r\n        </Checkbox>\r\n\r\n        <Checkbox\r\n          className={styles.checkbox}\r\n          onChange={(event) => {\r\n            this.props.conceptualMapDrawer!.sentimentMarkerVisible =\r\n              event.target.checked;\r\n            this.props.conceptualMapDrawer!.updateGraph();\r\n          }}\r\n        >\r\n          Sentiment Marker\r\n        </Checkbox>\r\n        {/* Delete Minimum Keyword + 세부 인터랙션이 필요한 곳에 대한 컴포넌트 만들 수 있다.*/}\r\n        <Checkbox\r\n          className={styles.checkbox}\r\n          onChange={(event) => {\r\n            this.props.conceptualMapDrawer!.sentimentMarkerVisible =\r\n              event.target.checked;\r\n            this.props.conceptualMapDrawer!.updateGraph();\r\n          }}\r\n        >\r\n          Delete Min Count Keyword\r\n        </Checkbox>\r\n\r\n        <div style={{ marginBottom: 12 }}>\r\n          checkbox for &apos;at least 1 link or not&apos;\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConceptualMapControllers;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {\r\n  forwardRef,\r\n  Ref,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport styles from \"./ConceptualMapModal.module.scss\";\r\nimport { Modal } from \"antd\";\r\nimport { ConceptualMapDrawer } from \"./ConceptualMapDrawer\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\nimport { GraphDataStructureMaker } from \"./GraphDataStructureMaker\";\r\nimport * as math from \"mathjs\";\r\nimport _ from \"lodash\";\r\nimport ConceptualMapControllers from \"./ConceptualMapControllers/ConceptualMapControllers\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport { UtteranceObject } from \"../../../interfaces/DebateDataInterface\";\r\nimport { TermType } from \"../DataImporter\";\r\nimport { NodeDatum } from \"./GraphDataStructureMaker\";\r\n\r\nconst modalContentWidth: number = 800;\r\nconst modalContentHeight: number = 600;\r\nconst conceptualMapDivClassName: string = \"conceptual-map\";\r\n\r\nexport interface ConceptualMapModalRef {\r\n  openModal: (modalTitle: string, engagementGroup: SimilarityBlock[][]) => void;\r\n}\r\ninterface ComponentProps {\r\n  participantDict: ParticipantDict;\r\n  utteranceObjects: UtteranceObject[];\r\n  termUtteranceBooleanMatrixTransposed: number[][];\r\n  termList: string[];\r\n  termType: TermType;\r\n}\r\n\r\nfunction ConceptualMapModal(\r\n  props: ComponentProps,\r\n  ref: Ref<ConceptualMapModalRef>\r\n) {\r\n  const modalRef = useRef<HTMLDivElement>(null);\r\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\r\n  const [modalTitle, setModalTitle] = useState<string>(\"\");\r\n  const [maxCooccurrence, setMaxCooccurrence] = useState<number>(0);\r\n  const [\r\n    standardTermCountToGenerateNode,\r\n    setStandardTermCountToGenerateNode,\r\n  ] = useState<number>(0);\r\n  const [maxOfLinksPerNode, setMaxOfLinksPerNode] = useState<number>(3);\r\n  const [showNodeNotHavingLinks, setShowNodeNotHavingLinks] = useState<boolean>(\r\n    true\r\n  );\r\n  const [conceptualMapDrawer, setConceptualMapDrawer] = useState<\r\n    ConceptualMapDrawer\r\n  >();\r\n  const [graphDataStructureMaker, setGraphDataStructureMaker] = useState<\r\n    GraphDataStructureMaker\r\n  >();\r\n\r\n  useEffect(() => {\r\n    const modalPadding = 24;\r\n    const conrollerWidth = 200;\r\n    setConceptualMapDrawer(\r\n      new ConceptualMapDrawer(\r\n        `.${conceptualMapDivClassName}`,\r\n        modalContentWidth - modalPadding * 2 - conrollerWidth,\r\n        modalContentHeight - modalPadding * 2,\r\n        props.participantDict\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // 그려지는 상황인가??\r\n    if (conceptualMapDrawer) {\r\n      conceptualMapDrawer.setParticipantDict(props.participantDict);\r\n    }\r\n  }, [props.participantDict]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    openModal: (modalTitle: string, engagementGroup: SimilarityBlock[][]) => {\r\n      setModalVisible(true);\r\n      setModalTitle(modalTitle);\r\n      //console.log(\"engagementGroup\", engagementGroup);\r\n      conceptualMapDrawer!.removeDrawing();\r\n\r\n      const graphDataStructureMaker = new GraphDataStructureMaker(\r\n        engagementGroup,\r\n        props.participantDict,\r\n        props.utteranceObjects,\r\n        props.termType\r\n      );\r\n\r\n      const cooccurrenceMatrixOfEG = graphDataStructureMaker.getCooccurrenceMatrixOfEG();\r\n      const ceiledMedian = Math.ceil(math.mean(cooccurrenceMatrixOfEG));\r\n\r\n      const nodeLinkDict = graphDataStructureMaker.generateNodesAndLinks(\r\n        ceiledMedian,\r\n        maxOfLinksPerNode,\r\n        showNodeNotHavingLinks\r\n      );\r\n      const createNodeDictionary = (\r\n        nodes: NodeDatum[]\r\n      ): { [key: string]: number } => {\r\n        const result: { [key: string]: number } = {};\r\n\r\n        nodes.forEach((node) => {\r\n          result[node.id] = node.count;\r\n        });\r\n\r\n        return result;\r\n      };\r\n\r\n      const sortedNodeDictionary = (nodeDictionary: {\r\n        [key: string]: number;\r\n      }): { term: string; count: number }[] => {\r\n        const nodeArray = Object.entries(nodeDictionary).map(\r\n          ([term, count]) => {\r\n            return { term, count };\r\n          }\r\n        );\r\n\r\n        // 내림차순 정렬\r\n        const sortedNodeArray = nodeArray.sort((a, b) => b.count - a.count);\r\n\r\n        return sortedNodeArray;\r\n      };\r\n\r\n      const nodeDictionary = createNodeDictionary(nodeLinkDict.nodes);\r\n      const sortedNodeArray = sortedNodeDictionary(nodeDictionary);\r\n      for (let i = 0; i < sortedNodeArray.length; i++) {\r\n        console.log();\r\n      }\r\n      const termFreqKeywrods = sortedNodeArray.slice(0, 15);\r\n      const emptyArr: string[] = [];\r\n      termFreqKeywrods.forEach((eg, i) => {\r\n        emptyArr.push(termFreqKeywrods[i].term);\r\n      });\r\n      //console.log(emptyArr);\r\n      // console.log(\"nodeLinkDict\", nodeLinkDict.nodes);\r\n\r\n      conceptualMapDrawer!.setGraphData(nodeLinkDict);\r\n      conceptualMapDrawer!.updateGraph();\r\n\r\n      const maxCooccurrence = _.max(\r\n        _.map(\r\n          cooccurrenceMatrixOfEG,\r\n          (cooccurrenceVector) => _.orderBy(cooccurrenceVector, [], [\"desc\"])[1] // TODO [0] or [1]\r\n        )\r\n      ) as number;\r\n\r\n      setStandardTermCountToGenerateNode(ceiledMedian);\r\n      setMaxCooccurrence(maxCooccurrence);\r\n      setGraphDataStructureMaker(graphDataStructureMaker);\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <Modal\r\n      title={modalTitle}\r\n      visible={modalVisible}\r\n      width={modalContentWidth}\r\n      bodyStyle={{ height: modalContentHeight }}\r\n      onCancel={() => {\r\n        // this.setState({ modalVisible: false });\r\n        setModalVisible(false);\r\n      }}\r\n      maskClosable={false}\r\n    >\r\n      <div className={styles.conceptualMapModalContent} ref={modalRef}>\r\n        <ConceptualMapControllers\r\n          conceptualMapDrawer={conceptualMapDrawer}\r\n          graphDataStructureMaker={graphDataStructureMaker}\r\n          showNodeNotHavingLinks={showNodeNotHavingLinks}\r\n          maxCooccurrence={maxCooccurrence}\r\n          maxOfLinksPerNode={maxOfLinksPerNode}\r\n          standardTermCount={standardTermCountToGenerateNode}\r\n          standardTermCountSliderListener={(changedValue) => {\r\n            setStandardTermCountToGenerateNode(changedValue);\r\n          }}\r\n          maxOfLinksPerNodeSliderListener={(changedValue) => {\r\n            setMaxOfLinksPerNode(changedValue);\r\n          }}\r\n          showNodeNotHavingLinksCheckboxListener={(checked: boolean) => {\r\n            setShowNodeNotHavingLinks(checked);\r\n          }}\r\n        ></ConceptualMapControllers>\r\n        <div className={conceptualMapDivClassName}></div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default forwardRef(ConceptualMapModal) || ConceptualMapModal;\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { DataStructureManager } from \"../DataStructureMaker/DataStructureManager\";\r\nimport { UtteranceObjectForDrawing } from \"../interfaces\";\r\nimport styles from \"./TranscriptViewer.module.scss\";\r\nimport { getBackgroundColorOfSentenceSpan } from \"./TranscriptViewerUtils\";\r\n\r\ninterface ComponentProps {\r\n  isOpen: boolean;\r\n  dataStructureMaker: DataStructureManager | null;\r\n}\r\nfunction TranscriptViewer(props: ComponentProps) {\r\n  if (!props.isOpen) return null;\r\n  return (\r\n    <div className={styles.transcriptViewer}>\r\n      {props.dataStructureMaker ? (\r\n        _.map(\r\n          props.dataStructureMaker.dataStructureSet\r\n            .utteranceObjectsForDrawingManager.utteranceObjectsForDrawing,\r\n          (utteranceObject, index) => {\r\n            return (\r\n              <div style={{ marginBottom: \"12px\" }} key={`utterance-${index}`}>\r\n                <div\r\n                  style={{\r\n                    color: props.dataStructureMaker!.dataStructureSet\r\n                      .participantDict[utteranceObject.name].color,\r\n                  }}\r\n                >\r\n                  [ {utteranceObject.name} ] / {index} /\r\n                  {utteranceObject.sentenceObjects[0].time!}\r\n                </div>\r\n                <div>{utteranceObject.utterance}</div>\r\n                {/* {getSentenceSpans(utteranceObject)} */}\r\n              </div>\r\n            );\r\n          }\r\n        )\r\n      ) : (\r\n        <div />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n// TODO we can use it to color text for sentiment\r\nfunction getSentenceSpans(utteranceObject: UtteranceObjectForDrawing) {\r\n  return _.map(utteranceObject.sentenceObjects, (sentenceObject) => {\r\n    return (\r\n      <span\r\n        style={{\r\n          // marginRight: 2,\r\n          backgroundColor: getBackgroundColorOfSentenceSpan(\r\n            sentenceObject,\r\n            0.25\r\n          ),\r\n        }}\r\n      >\r\n        {sentenceObject.sentence + \" \"}\r\n      </span>\r\n    );\r\n  });\r\n}\r\n\r\nexport default TranscriptViewer;\r\n\r\nfunction convertTimeToSeconds(time: string): number {\r\n  const parts = time.split(\":\").map((part) => parseInt(part, 10));\r\n  return parts[0] * 3600 + parts[1] * 60 + (parts[2] || 0);\r\n}\r\n","import _ from \"lodash\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\n\r\n/**\r\n *\r\n * @param conceptSimilarityGroup\r\n * @param startRowIndex\r\n * @param endRowIndex sliced until endRowIndex - 1\r\n */\r\nexport function make1EngagementGroup(\r\n  conceptSimilarityGroup: SimilarityBlock[][],\r\n  startRowIndex: number,\r\n  endRowIndex: number\r\n): SimilarityBlock[][] {\r\n  const engagementGroup = _.chain(conceptSimilarityGroup)\r\n    .slice(startRowIndex, endRowIndex)\r\n    .map((rowSimilarityLine) => {\r\n      return _.slice(\r\n        rowSimilarityLine,\r\n        startRowIndex,\r\n        rowSimilarityLine.length\r\n      );\r\n    })\r\n    .value();\r\n\r\n  return engagementGroup;\r\n}\r\n","import _ from \"lodash\";\r\nimport { SimilarityBlock } from \"../interfaces\";\r\nimport { make1EngagementGroup as make1TopicGroup } from \"./make1EngagementGroup\";\r\n\r\nexport function makeManualTGs(\r\n  totalSimilarityBlockGroup: SimilarityBlock[][],\r\n  startRowIndexesForSplit: number[]\r\n): SimilarityBlock[][][] {\r\n  const manualTGs: SimilarityBlock[][][] = [];\r\n\r\n  for (let i = 0; i < startRowIndexesForSplit.length; i++) {\r\n    const startRowIndex = startRowIndexesForSplit[i];\r\n    const endRowIndex =\r\n      i < startRowIndexesForSplit.length - 1\r\n        ? startRowIndexesForSplit[i + 1]\r\n        : totalSimilarityBlockGroup.length;\r\n    const topicGroup = make1TopicGroup(\r\n      totalSimilarityBlockGroup,\r\n      startRowIndex,\r\n      endRowIndex\r\n    );\r\n    manualTGs.push(topicGroup);\r\n  }\r\n\r\n  return manualTGs;\r\n}\r\n\r\nexport function makeManualMTGs(\r\n  totalSimilarityBlockGroup: SimilarityBlock[][],\r\n  startRowIndexesForSplit: number[]\r\n): SimilarityBlock[][][] {\r\n  const manualTGs: SimilarityBlock[][][] = [];\r\n\r\n  for (let i = 0; i < startRowIndexesForSplit.length; i++) {\r\n    const startRowIndex = startRowIndexesForSplit[i];\r\n    const endRowIndex =\r\n      i < startRowIndexesForSplit.length - 1\r\n        ? startRowIndexesForSplit[i + 1]\r\n        : totalSimilarityBlockGroup.length;\r\n    const topicGroup = make1TopicGroup(\r\n      totalSimilarityBlockGroup,\r\n      startRowIndex,\r\n      endRowIndex\r\n    );\r\n    manualTGs.push(topicGroup);\r\n  }\r\n\r\n  return manualTGs;\r\n}\r\n\r\n// export function getBasicIncomeManualSmallEGTitles(): string[] {\r\n//   return [\r\n//     \"찬반 of 긴급재난지원금 경제적 효과\",\r\n//     \"기본소득 정의 및 평가\",\r\n//     \"보수진영에서 기본소득이 이슈화된 이유는?\",\r\n//     \"안심소득 소개 및 이해과정\",\r\n//     \"찬반(증세 및 조세저항) of 안심소득 vs 기본소득\",\r\n//     \"찬반(증세,경제 효과) of 안심소득 vs 기본소득 in 이재명 vs 오세훈\",\r\n//     \"현실적 방안인지 찬반 of 안심소득 vs 기본소득\",\r\n//     \"기본소득, 안심소득의 기존 복지 제도 통합에 대해 서로들 오해하고 있음 => 서로 의견 주고 받음..\",\r\n//     \"시청자 의견 소개\",\r\n//     \"기본소득의 실현가능성 찬반\",\r\n//     \"미래의 노동공급과 생존에 대한 서로 다른 복지정책의 접근\",\r\n//     \"기본소득의 근로의욕 반대 의견 및 팩트체크\",\r\n//   ];\r\n// }\r\n\r\nexport function getBasicIncomeManualMiddleEGTitles(): string[] {\r\n  return [\r\n    // \"찬반 of 긴급재난지원금 경제적 효과\",\r\n    // \"기본소득 정의 및 평가\",\r\n    // \"안심소득 소개 및 이해과정\",\r\n    \"안심소득 vs 기본소득의 찬반(증세, 조세저항, 경제 효과)대립\",\r\n    // \"안심소득 vs 기본소득의 현실적 방안\",\r\n    \"기본소득, 안심소득의 기존 복지 제도 통합에 대한 의견 대립\",\r\n    // \"시청자 의견 소개\",\r\n    // \"기본소득 실현가능방법 증세의 찬반\",\r\n    // \"기본소득의 노동공급, 근로의욕에 대한 긍정 vs 부정\",\r\n  ];\r\n}\r\n\r\nexport function getBasicIncomeManualBigEGTitles(): string[] {\r\n  return [\r\n    \"찬반 of 긴급재난지원금 경제적 효과\",\r\n    \"기본소득 정의 및 평가\",\r\n    \"안심소득 소개 및 이해과정\",\r\n    \"안심소득 vs 기본소득\",\r\n    \"기본소득 실현가능방법 증세의 찬반\",\r\n    \"기본소득의 노동공급, 근로의욕에 대한 긍정 vs 부정\",\r\n  ];\r\n}\r\n\r\nexport function getInsistenceRefutationEGTitles(): string[] {\r\n  return [\r\n    \"논쟁심화구긴1\",\r\n    \"논쟁심화구긴2\",\r\n    \"논쟁심화구긴3\",\r\n    \"논쟁심화구긴4\",\r\n    \"논쟁심화구긴5\",\r\n    \"논쟁심화구긴6\",\r\n  ];\r\n} // 논쟁 심화 구간 나눠주는 요소도 추가해야 사용자 입장에서 탐색이 더 쉽게 보일듯함.\r\n\r\nexport function getSatManualSmallEGTitles(): string[] {\r\n  return [];\r\n}\r\n\r\nexport function getSatManualMiddleEGTitles(): string[] {\r\n  return [];\r\n}\r\n\r\nexport function getSatManualBigEGTitles(): string[] {\r\n  return [\r\n    \"정시확대 방침에 대한 참가자들의 의견소개\",\r\n    \"전교조의 수시에 대한 입장(학생부교과전형) 및 (부정적)반응\",\r\n    \"학생부종합전형 보완 vs 수능 정시 확대\",\r\n    \"선생님들의 학종에 관한 역량 필요성 찬반\",\r\n    \"사교육 문제에 대한 정시 vs 학종\",\r\n    \"학생들의 혼란을 줄여줘야 하지 않겠느냐에 대한 의견\",\r\n    \"모든 고등학교를 일반고 전환에 대한 의견\",\r\n    \"이번 대입개편안에 대한 필수요소에 대해 각자의 의견\",\r\n  ];\r\n}\r\n\r\nexport function getMilitaryManualSmallEGTitles(): string[] {\r\n  return [\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"군대, 모병, 정부, 문제, 논의, 인구절벽, 문재인, 의원\",\r\n    // \"토론 시작 및 모병제 도입\", // 0-18, 1\r\n    \"Start the discussion and introduce all volunteer military system(AVMS)\", // 1\r\n    \"쓰레기값\",\r\n    // \"군대, 모병, 사람, 감군, 병력, 징병, 유지, 정예\",\r\n    // \"모병제, 병력 충원에 문제 없나?\", // 24-58, 3\r\n    \"All volunteer military system, a solution to recruitment?\", // 3\r\n    \"쓰레기값\",\r\n    // \"군대, 모병, 병사, 위협, 장교, 전문, 유지, 징병\",\r\n    // \"모병제, 질적 향상 및 간부확보 문제는?\", // 73-106, 5\r\n    \"AVMS, quality improvement, and cadre retention?\", // 5\r\n    \"쓰레기값\",\r\n    // \"모병, 국방예산, 국방, 군대, 유지, 여성, 예산, 병력\",\r\n    // \"국방 예산 이슈 및 토론 마무리\", // 146-183, 7\r\n    \"Defense budget issues and conclusion of debate\", // 7\r\n  ];\r\n}\r\n\r\nexport function getMilitaryManualMiddleEGTitles(): string[] {\r\n  return [\r\n    // \"인구절벽: 중요한 국방 이슈, 현실화된 병력 구조 리모델링\",\r\n    // \"모병제 도입 찬반 논쟁과 개선안은?\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    // \"논쟁구간\",\r\n    //\"인구절벽, 징병제에 미치는 영향\", // 15-37, 2\r\n    \"The population cliff and its impact on AVMS\", // 2\r\n    \"쓰레기값\",\r\n    //\"모병제, 일자리 문제 해결책?\", // 56-79, 4\r\n    \"AVMS, a solution to the jobs problem?\", // 4\r\n    \"쓰레기값\",\r\n    //\"여성 징집과 봉급체계\", // 94-126, 6\r\n    \"Female conscription and pay system\", // 6\r\n    \"쓰레기값\",\r\n    \"쓰레기값\",\r\n  ];\r\n}\r\n\r\nexport function getMilitaryManualBigEGTitles(): string[] {\r\n  return [\r\n    // \"토론 시작 및 모병제: 정치적 선거용?\",\r\n    // \"인구절벽에 인한 군인 수 감소\",\r\n    // \"군인 수 문제 해결방안은?\",\r\n    // \"모병제로 인한 신분제 부활\",\r\n    // \"모병제로 인한 질적 향상\",\r\n    // \"군간부 인력 확충 \",\r\n    // \"여성 징집과 모병\",\r\n    // \"계급별 예산 이슈\",\r\n    // \"군문화 개선안 마무리 발언\",\r\n    \"대논쟁구간\",\r\n    \"대논쟁구간\",\r\n    \"대논쟁구간\",\r\n    \"대논쟁구간\",\r\n    \"대논쟁구간\",\r\n    \"대논쟁구간\",\r\n  ];\r\n}\r\n\r\n/**\r\n * Deprecated\r\n * @param conceptSimilarityMatrix\r\n * @param startUtteranceIndex\r\n * @param endUtteranceIndex\r\n */\r\nexport function make1EngagementGroupByUtteranceIndex(\r\n  conceptSimilarityMatrix: SimilarityBlock[][],\r\n  startUtteranceIndex: number,\r\n  endUtteranceIndex: number\r\n): SimilarityBlock[][] {\r\n  return _.chain(conceptSimilarityMatrix)\r\n    .slice(startUtteranceIndex, endUtteranceIndex - 1)\r\n    .map((similarityBlocksIn1Row) => {\r\n      return _.slice(\r\n        similarityBlocksIn1Row,\r\n        startUtteranceIndex,\r\n        similarityBlocksIn1Row.length\r\n      );\r\n    })\r\n    .value();\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport {\r\n  SentenceObject,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\nimport { UtteranceObjectForDrawing } from \"../interfaces\";\r\n\r\n// TODO making...\r\nexport default class UtteranceObjectsForDrawingManager {\r\n  private _utteranceObjectsForDrawing: UtteranceObjectForDrawing[];\r\n  private _positiveSumStandard: number = 0.5;\r\n  private _sentenceSentimentStandard: number = 0.25;\r\n  private _columnLongStandard: number = 100;\r\n\r\n  public constructor(utteranceObjects: UtteranceObject[]) {\r\n    // make utteranceObjectsForDrawing\r\n\r\n    let beginningPointOfXY: number = 0;\r\n    const widthResizingConstant: number = 2.6;\r\n\r\n    const utteranceObjectsForDrawing: UtteranceObjectForDrawing[] = _.map(\r\n      utteranceObjects,\r\n      (utteranceObject) => {\r\n        const width: number =\r\n          Math.sqrt(utteranceObject.utterance.length) / widthResizingConstant;\r\n\r\n        // make insistenceScore\r\n        // const insistenceScore: number = _.reduce<SentenceObject, number>(\r\n        //   utteranceObject.sentenceObjects,\r\n        //   (reduced, sentenceObject) => {\r\n        //     return sentenceObject.sentiment >= _sentenceSentimentStandard\r\n        //       ? reduced + sentenceObject.sentiment\r\n        //       : reduced;\r\n        //   },\r\n        //   0\r\n        // );\r\n        // const insistence: boolean =\r\n        //   insistenceScore >= _positiveSumStandard &&\r\n        //   utteranceObject.utterance.length > _columnLongStandard\r\n        //     ? true\r\n        //     : false;\r\n        const insistence = this.getPositiveOrNot({\r\n          utteranceObject,\r\n          positiveSumStandard: this._positiveSumStandard,\r\n          columnLongStandard: this._columnLongStandard,\r\n          sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n        });\r\n\r\n        const newUtteranceObject: UtteranceObjectForDrawing = {\r\n          ...utteranceObject,\r\n          beginningPointOfXY: beginningPointOfXY,\r\n          width,\r\n          insistence,\r\n          mainKeytermsString: \"\",\r\n          conceptVector: [],\r\n          keyword: [],\r\n        };\r\n        beginningPointOfXY += newUtteranceObject.width;\r\n        return newUtteranceObject;\r\n      }\r\n    );\r\n\r\n    this._utteranceObjectsForDrawing = utteranceObjectsForDrawing;\r\n  }\r\n\r\n  private getPositiveOrNot(p: {\r\n    utteranceObject: UtteranceObject | UtteranceObjectForDrawing;\r\n    positiveSumStandard: number;\r\n    sentenceSentimentStandard: number;\r\n    columnLongStandard: number;\r\n  }): boolean {\r\n    // make insistenceScore\r\n    const insistenceScore: number = _.reduce<SentenceObject, number>(\r\n      p.utteranceObject.sentenceObjects,\r\n      (reduced, sentenceObject) => {\r\n        return sentenceObject.sentiment >= p.sentenceSentimentStandard\r\n          ? reduced + sentenceObject.sentiment\r\n          : reduced;\r\n      },\r\n      0\r\n    );\r\n    const insistence: boolean =\r\n      insistenceScore >= p.positiveSumStandard ||\r\n      p.utteranceObject.utterance.length > p.columnLongStandard\r\n        ? true\r\n        : false;\r\n\r\n    return insistence;\r\n  }\r\n\r\n  private applyPositive(p: {\r\n    utteranceObjectsForDrawing: UtteranceObjectForDrawing[];\r\n    positiveSumStandard: number;\r\n    sentenceSentimentStandard: number;\r\n    columnLongStandard: number;\r\n  }) {\r\n    _.forEach(this.utteranceObjectsForDrawing, (utteranceObject) => {\r\n      const insistence = this.getPositiveOrNot({\r\n        utteranceObject,\r\n        positiveSumStandard: this._positiveSumStandard,\r\n        columnLongStandard: this._columnLongStandard,\r\n        sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n      });\r\n      utteranceObject.insistence = insistence;\r\n    });\r\n  }\r\n\r\n  public get utteranceObjectsForDrawing() {\r\n    return this._utteranceObjectsForDrawing;\r\n  }\r\n  public set positiveSumStandard(positiveSumStandard: number) {\r\n    this._positiveSumStandard = positiveSumStandard;\r\n    this.applyPositive({\r\n      utteranceObjectsForDrawing: this._utteranceObjectsForDrawing,\r\n      columnLongStandard: this._columnLongStandard,\r\n      positiveSumStandard: this._positiveSumStandard,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n    });\r\n  }\r\n  public set sentenceSentimentStandard(sentenceSentimentStandard: number) {\r\n    this._sentenceSentimentStandard = sentenceSentimentStandard;\r\n    this.applyPositive({\r\n      utteranceObjectsForDrawing: this._utteranceObjectsForDrawing,\r\n      columnLongStandard: this._columnLongStandard,\r\n      positiveSumStandard: this._positiveSumStandard,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n    });\r\n  }\r\n  public set colUtteranceLongStandard(columnLongStandard: number) {\r\n    this._columnLongStandard = columnLongStandard;\r\n    this.applyPositive({\r\n      utteranceObjectsForDrawing: this._utteranceObjectsForDrawing,\r\n      columnLongStandard: this._columnLongStandard,\r\n      positiveSumStandard: this._positiveSumStandard,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n    });\r\n  }\r\n}\r\n\r\nexport function makeUtteranceObjectsForDrawing(\r\n  utteranceObjects: UtteranceObject[]\r\n): UtteranceObjectForDrawing[] {\r\n  let beginningPointOfXY: number = 0;\r\n  const widthResizingConstant: number = 2.6;\r\n  // TODO\r\n  const _columnLongStandard: number = 50;\r\n  const _positiveSumStandard: number = 0.5;\r\n  const _sentenceSentimentStandard: number = 0.25;\r\n\r\n  const utteranceObjectsForDrawing: UtteranceObjectForDrawing[] = _.map(\r\n    utteranceObjects,\r\n    (utteranceObject) => {\r\n      const width: number =\r\n        Math.sqrt(utteranceObject.utterance.length) / widthResizingConstant;\r\n\r\n      // make insistenceScore\r\n      const insistenceScore: number = _.reduce<SentenceObject, number>(\r\n        utteranceObject.sentenceObjects,\r\n        (reduced, sentenceObject) => {\r\n          return sentenceObject.sentiment >= _sentenceSentimentStandard\r\n            ? reduced + sentenceObject.sentiment\r\n            : reduced;\r\n        },\r\n        0\r\n      );\r\n      const insistence: boolean =\r\n        insistenceScore >= _positiveSumStandard\r\n          ? // &&\r\n            // utteranceObject.utterance.length > _columnLongStandard\r\n            true\r\n          : false;\r\n\r\n      const newUtteranceObject: UtteranceObjectForDrawing = {\r\n        ...utteranceObject,\r\n        beginningPointOfXY: beginningPointOfXY,\r\n        width,\r\n        insistence,\r\n        mainKeytermsString: \"\",\r\n        conceptVector: [],\r\n        keyword: [],\r\n      };\r\n      beginningPointOfXY += newUtteranceObject.width;\r\n      return newUtteranceObject;\r\n    }\r\n  );\r\n\r\n  return utteranceObjectsForDrawing;\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport * as math from \"mathjs\";\r\nimport { findTopValueIndexes } from \"../../../common_functions/findTopValueIndexes\";\r\nimport { ParticipantDict } from \"../../../common_functions/makeParticipants\";\r\nimport {\r\n  KeytermObject,\r\n  SentenceObject,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\nconst makeCosineSimilarity = require(\"compute-cosine-similarity\");\r\n\r\nexport class SimilarityBlockManager {\r\n  private _similarityBlocks: SimilarityBlock[] = [];\r\n  private _similarityBlockGroup: SimilarityBlock[][] = [];\r\n  private _selfConsistencyWeight: number = 1;\r\n  private _otherConsistencyWeight: number = 3;\r\n  private _refutationWeight: number = 0.5; // 반박가중치 default 값은 1\r\n  private _insistenceWeight: number = 0.5; // 주장가중치\r\n  private _sentenceSentimentStandard: number = 0.25;\r\n  private _negativeSumStandard: number = 0.0001; // negative 가중치\r\n  private _positiveSumStandard: number = 0.5;\r\n  private _colUtteranceLongStandard: number = 5;\r\n  private _hostWeight: number = 1;\r\n  private _hostLongStandard: number = 100; // 진행자 문자 수\r\n  private _debaterWeights: number[] = [1, 1, 1, 1];\r\n  private _debaterIndexDict: { [debaterName: string]: number } = {};\r\n\r\n  public constructor(\r\n    conceptMatrixTransposed: number[][],\r\n    private readonly utteranceObjectsForDrawing: UtteranceObjectForDrawing[],\r\n    keytermObjects: KeytermObject[],\r\n    private readonly participantDict: ParticipantDict\r\n  ) {\r\n    // Make similarity_block\r\n    for (\r\n      let utteranceRowIndex = 1;\r\n      utteranceRowIndex < conceptMatrixTransposed.length;\r\n      utteranceRowIndex++\r\n    ) {\r\n      this._similarityBlockGroup.push([]);\r\n      for (\r\n        let utteranceColIndex = 0;\r\n        utteranceColIndex < utteranceRowIndex;\r\n        utteranceColIndex++\r\n      ) {\r\n        const rowUtteranceConcept = conceptMatrixTransposed[utteranceRowIndex];\r\n        const colUtteranceConcept = conceptMatrixTransposed[utteranceColIndex];\r\n        const rowUtteranceObject =\r\n          utteranceObjectsForDrawing[utteranceRowIndex];\r\n        const colUtteranceObject =\r\n          utteranceObjectsForDrawing[utteranceColIndex];\r\n        const rowUtteranceName =\r\n          utteranceObjectsForDrawing[utteranceRowIndex].name;\r\n        const colUtteranceName =\r\n          utteranceObjectsForDrawing[utteranceColIndex].name;\r\n\r\n        const partsOfSimilarity = _.map(\r\n          rowUtteranceConcept,\r\n          (keytermScore1, i) => {\r\n            const keytermScore2 = colUtteranceConcept[i];\r\n            // We can check main keyterms to contribute similarityScore here\r\n            return keytermScore1 * keytermScore2;\r\n          }\r\n        );\r\n        const similarityScore = _.sum(partsOfSimilarity);\r\n\r\n        const topValueIndexes = findTopValueIndexes(partsOfSimilarity, 10);\r\n        const mainKeytermObjects = _.map(\r\n          topValueIndexes,\r\n          (topValueIndex) => keytermObjects[topValueIndex]\r\n        );\r\n\r\n        // Make simialrityBlock\r\n        const conceptSimilarityBlock: SimilarityBlock = {\r\n          beginningPointOfX: colUtteranceObject.beginningPointOfXY,\r\n          beginningPointOfY: rowUtteranceObject.beginningPointOfXY,\r\n          width: colUtteranceObject.width,\r\n          height: rowUtteranceObject.width,\r\n          similarity: similarityScore, // 여기서 유사도에 의한 계산이 진행됨.\r\n          // similarityScore: math.dot(utterance1Concept, utterance2Concept),\r\n          // similarityScore: makeCosineSimilarity(\r\n          //   utterance1Concept,\r\n          //   utterance2Concept\r\n          // ),\r\n          weight: 1, // 가중치에 의해 색상의 opacity가 부여\r\n          mainKeytermObjects,\r\n          rowUtteranceName: rowUtteranceName,\r\n          colUtteranceName: colUtteranceName,\r\n          rowUtteranceIndex: utteranceRowIndex,\r\n          columnUtteranceIndex: utteranceColIndex,\r\n          other: rowUtteranceObject.name !== colUtteranceObject.name,\r\n          refutation: false, // 반박 default 값\r\n          engagementPoint: false,\r\n          visible: true,\r\n        };\r\n        // console.log(conceptSimilarityBlock.refutation);\r\n        // Because cosine similairity between [0, 0, ...] and [0, 0, ...]\r\n        // if (isNaN(conceptSimilarityBlock.similarity)) {\r\n        //   conceptSimilarityBlock.similarity = 0;\r\n        // }\r\n\r\n        // Push the similarityBlock\r\n        this._similarityBlocks.push(conceptSimilarityBlock);\r\n        this._similarityBlockGroup[utteranceRowIndex - 1].push(\r\n          conceptSimilarityBlock\r\n        );\r\n      }\r\n    }\r\n\r\n    // Apply refutation\r\n    this.applyRefutation({\r\n      utteranceObjectsForDrawing,\r\n      participantDict,\r\n      similarityBlocks: this._similarityBlocks,\r\n      similarityBlockGroup: this._similarityBlockGroup,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n      negativeSumStandard: this._negativeSumStandard,\r\n      colUtteranceLongStandard: this._colUtteranceLongStandard,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * applyWeightedSimilarity\r\n   * @changed_variable : similarityBlock.weight of simialrityBlocks\r\n   */\r\n  // 가중치를 적용하기 위한 함수.\r\n  private applyWeight() {\r\n    _.forEach(this._similarityBlockGroup, (rowSimilarityBlocks) => {\r\n      _.forEach(rowSimilarityBlocks, (similarityBlock) => {\r\n        let weight: number = 1;\r\n\r\n        const rowUtteranceObject: UtteranceObjectForDrawing = this\r\n          .utteranceObjectsForDrawing[similarityBlock.rowUtteranceIndex];\r\n        const colUtteranceObject: UtteranceObjectForDrawing = this\r\n          .utteranceObjectsForDrawing[similarityBlock.columnUtteranceIndex];\r\n\r\n        // apply other_consistency_weight\r\n        // apply self_consistency_weight\r\n        if (similarityBlock.other) {\r\n          weight *= this._otherConsistencyWeight;\r\n        } else {\r\n          weight *= this._selfConsistencyWeight;\r\n        }\r\n\r\n        // apply refutation_weight\r\n        if (similarityBlock.refutation) {\r\n          weight *= this._refutationWeight;\r\n\r\n          // apply insistence_weight\r\n          if (colUtteranceObject.insistence) {\r\n            weight *= this._insistenceWeight;\r\n          }\r\n        }\r\n\r\n        // apply host_weight\r\n        if (\r\n          (rowUtteranceObject.name === \"진행자\" &&\r\n            rowUtteranceObject.utterance.length > this._hostLongStandard) ||\r\n          (colUtteranceObject.name === \"진행자\" &&\r\n            colUtteranceObject.utterance.length > this._hostLongStandard)\r\n        ) {\r\n          weight *= this._hostWeight;\r\n        }\r\n\r\n        similarityBlock.weight = weight;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * applyRefutation\r\n   * @param p\r\n   * @changed_variable similarityBlock in similarityBlocks & similarityBlockGroup\r\n   */\r\n  // 반박구간 체크하는 부분\r\n  private applyRefutation(p: {\r\n    utteranceObjectsForDrawing: UtteranceObjectForDrawing[];\r\n    participantDict: ParticipantDict;\r\n    similarityBlocks: SimilarityBlock[];\r\n    similarityBlockGroup: SimilarityBlock[][];\r\n    sentenceSentimentStandard: number;\r\n    negativeSumStandard: number;\r\n    colUtteranceLongStandard: number;\r\n  }) {\r\n    _.forEach(p.similarityBlocks, (similarityBlock) => {\r\n      similarityBlock.refutation = false;\r\n\r\n      const rowUtteranceObject =\r\n        p.utteranceObjectsForDrawing[similarityBlock.rowUtteranceIndex];\r\n      const colUtteranceObject =\r\n        p.utteranceObjectsForDrawing[similarityBlock.columnUtteranceIndex];\r\n      // console.log(rowUtteranceObject.name);\r\n      const refutationScore = _.reduce<SentenceObject, number>( // refutationScore\r\n        rowUtteranceObject.sentenceObjects,\r\n        (reduced, sentenceObject) => {\r\n          return sentenceObject.sentiment <= -p.sentenceSentimentStandard\r\n            ? reduced + sentenceObject.sentiment // 감성분석을 통해 감성값이 포함됨.\r\n            : reduced;\r\n        },\r\n        0\r\n      );\r\n\r\n      if (\r\n        refutationScore <= -p.negativeSumStandard ||\r\n        refutationScore > -p.negativeSumStandard\r\n      ) {\r\n        //console.log(\"refutationScore\", refutationScore);\r\n        // console.log(\"-p.negativeSumStandard\", -p.negativeSumStandard);\r\n\r\n        const rowSimilarityBlocks =\r\n          p.similarityBlockGroup[similarityBlock.rowUtteranceIndex - 1];\r\n        // console.log(rowSimilarityBlocks);\r\n        const filtered = _.filter(\r\n          rowSimilarityBlocks,\r\n          (rowSimilarityBlock, utteranceIndexOfrowSimilarityBlock) => {\r\n            let isFilter: boolean = false;\r\n            if (\r\n              utteranceIndexOfrowSimilarityBlock >=\r\n              similarityBlock.columnUtteranceIndex\r\n            ) {\r\n              const utteranceOjbect1 =\r\n                p.utteranceObjectsForDrawing[similarityBlock.rowUtteranceIndex];\r\n              const utteranceOjbect2 =\r\n                p.utteranceObjectsForDrawing[\r\n                  utteranceIndexOfrowSimilarityBlock\r\n                ];\r\n              const team1 = p.participantDict[utteranceOjbect1.name].team;\r\n              const team2 = p.participantDict[utteranceOjbect2.name].team;\r\n              // team1과 team2가 다르고 둘 다 양수, team이 음수면 진행자\r\n              if (team1 !== team2 && team1 > 0 && team2 > 0) {\r\n                const utteranceObjectOfRebuttalTarget =\r\n                  p.utteranceObjectsForDrawing[\r\n                    rowSimilarityBlock.columnUtteranceIndex\r\n                  ];\r\n                // TODO\r\n                // if (rowSimilarityBlock.similarityScore > 40000) {\r\n                //   isFilter = true;\r\n                // }\r\n                if (\r\n                  rowSimilarityBlock.similarity >= 0.1 &&\r\n                  (utteranceObjectOfRebuttalTarget.utterance.length >\r\n                    p.colUtteranceLongStandard ||\r\n                    utteranceObjectOfRebuttalTarget.utterance.length <=\r\n                      p.colUtteranceLongStandard)\r\n                ) {\r\n                  isFilter = true;\r\n                }\r\n              }\r\n            }\r\n            return isFilter;\r\n          }\r\n        );\r\n\r\n        const team1 = p.participantDict[colUtteranceObject.name].team; // side(i,j)\r\n        const team2 = p.participantDict[rowUtteranceObject.name].team; // side(i,j)\r\n        const condition =\r\n          (similarityBlock.similarity * similarityBlock.weight) /\r\n          Math.sqrt(\r\n            Math.abs(\r\n              similarityBlock.columnUtteranceIndex -\r\n                similarityBlock.rowUtteranceIndex\r\n            )\r\n          );\r\n        if (\r\n          //  논쟁의 판단 유무 구간 판단하는 if 문.\r\n          // TODO\r\n          (team1 !== team2 &&\r\n            team1 > 0 &&\r\n            team2 > 0 &&\r\n            // similarityBlock.similarity > 0.05 &&\r\n            similarityBlock.rowUtteranceName !== \"진행자\") ||\r\n          (similarityBlock.colUtteranceName !== \"진행자\" &&\r\n            condition >= 1 &&\r\n            //colUtteranceObject.utterance.length > p.colUtteranceLongStandard ||\r\n            filtered.length >= 1 &&\r\n            // 발화자 간 거리\r\n            similarityBlock.rowUtteranceIndex -\r\n              similarityBlock.columnUtteranceIndex <\r\n              //발화자 간 거리 어느정도 볼 지 설정하는 구간.\r\n              156)\r\n        ) {\r\n          similarityBlock.refutation = true; // 주장과 반박 구간 결정하는 boolean value\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public get similarityBlocks(): SimilarityBlock[] {\r\n    return this._similarityBlocks;\r\n  }\r\n\r\n  public get similarityBlockGroup(): SimilarityBlock[][] {\r\n    return this._similarityBlockGroup;\r\n  }\r\n\r\n  public set selfConsistencyWeight(selfConsistencyWeight: number) {\r\n    this._selfConsistencyWeight = selfConsistencyWeight;\r\n    this.applyWeight();\r\n  }\r\n  public set otherConsistencyWeight(otherConsistencyWeight: number) {\r\n    this._otherConsistencyWeight = otherConsistencyWeight;\r\n    this.applyWeight();\r\n  }\r\n  public set refutationWeight(refutationWeight: number) {\r\n    this._refutationWeight = refutationWeight;\r\n    this.applyWeight();\r\n  }\r\n  public set insistenceWeight(insistenceWeight: number) {\r\n    this._insistenceWeight = insistenceWeight;\r\n    this.applyWeight();\r\n  }\r\n  public set sentenceSentimentStandard(sentenceSentimentStandard: number) {\r\n    this._sentenceSentimentStandard = sentenceSentimentStandard;\r\n    this.applyRefutation({\r\n      utteranceObjectsForDrawing: this.utteranceObjectsForDrawing,\r\n      participantDict: this.participantDict,\r\n      similarityBlocks: this._similarityBlocks,\r\n      similarityBlockGroup: this._similarityBlockGroup,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n      negativeSumStandard: this._negativeSumStandard,\r\n      colUtteranceLongStandard: this._colUtteranceLongStandard,\r\n    });\r\n    this.applyWeight();\r\n  }\r\n  public set negativeSumStandard(negativeSumStandard: number) {\r\n    this._negativeSumStandard = negativeSumStandard;\r\n    this.applyRefutation({\r\n      utteranceObjectsForDrawing: this.utteranceObjectsForDrawing,\r\n      participantDict: this.participantDict,\r\n      similarityBlocks: this._similarityBlocks,\r\n      similarityBlockGroup: this._similarityBlockGroup,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n      negativeSumStandard: this._negativeSumStandard,\r\n      colUtteranceLongStandard: this._colUtteranceLongStandard,\r\n    });\r\n    this.applyWeight();\r\n  }\r\n  public set colUtteranceLongStandard(colUtteranceLongStandard: number) {\r\n    this._colUtteranceLongStandard = colUtteranceLongStandard;\r\n    this.applyRefutation({\r\n      utteranceObjectsForDrawing: this.utteranceObjectsForDrawing,\r\n      participantDict: this.participantDict,\r\n      similarityBlocks: this._similarityBlocks,\r\n      similarityBlockGroup: this._similarityBlockGroup,\r\n      sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n      negativeSumStandard: this._negativeSumStandard,\r\n      colUtteranceLongStandard: this._colUtteranceLongStandard,\r\n    });\r\n    this.applyWeight();\r\n  }\r\n\r\n  public set positiveSumStandard(positiveSumStandard: number) {\r\n    // this._positiveSumStandard = positiveSumStandard;\r\n    // this.applyRefutation({\r\n    //   utteranceObjectsForDrawing: this.utteranceObjectsForDrawing,\r\n    //   participantDict: this.participantDict,\r\n    //   similarityBlocks: this._similarityBlocks,\r\n    //   similarityBlockGroup: this._similarityBlockGroup,\r\n    //   sentenceSentimentStandard: this._sentenceSentimentStandard,\r\n    //   negativeSumStandard: this._negativeSumStandard,\r\n    //   colUtteranceLongStandard: this._colUtteranceLongStandard,\r\n    // });\r\n    this.applyWeight();\r\n  }\r\n\r\n  public set hostWeight(hostWeight: number) {\r\n    this._hostWeight = hostWeight;\r\n    this.applyWeight();\r\n  }\r\n\r\n  public set hostLongStandard(hostLongStandard: number) {\r\n    this._hostLongStandard = hostLongStandard;\r\n    this.applyWeight();\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport {\r\n  makeParticipants,\r\n  Participant,\r\n  ParticipantDict,\r\n} from \"../../../common_functions/makeParticipants\";\r\nimport { DebateDataSet } from \"../../../interfaces/DebateDataInterface\";\r\nimport {\r\n  SimilarityBlock,\r\n  UtteranceIndexSentenceIndexTotalSentenceIndexDict,\r\n  UtteranceObjectForDrawing,\r\n} from \"../interfaces\";\r\nimport {\r\n  makeManualTGs,\r\n  // getBasicIncomeManualSmallEGTitles,\r\n  getBasicIncomeManualMiddleEGTitles,\r\n  getBasicIncomeManualBigEGTitles,\r\n  getSatManualBigEGTitles,\r\n  getMilitaryManualSmallEGTitles,\r\n  getMilitaryManualMiddleEGTitles,\r\n  getMilitaryManualBigEGTitles,\r\n} from \"./makeManualEGs\";\r\nimport UtteranceObjectsForDrawingManager from \"./UtteranceObjectsForDrawingManager\";\r\nimport { SimilarityBlockManager } from \"./SimilarityBlockManager\";\r\nimport { DebateName } from \"../DataImporter\";\r\n\r\nexport interface DataStructureSet {\r\n  // utteranceObjectsForDrawing: UtteranceObjectForDrawing[];\r\n  utteranceObjectsForDrawingManager: UtteranceObjectsForDrawingManager;\r\n  participants: Participant[];\r\n  participantDict: ParticipantDict;\r\n  // conceptSimilarityBlocks: SimilarityBlock[];\r\n  // conceptSimilarityMatrix: SimilarityBlock[][];\r\n  similarityBlockManager: SimilarityBlockManager;\r\n  maxSimilarityScore: number;\r\n  utteranceIndexSentenceIndexTotalSentenceIndexDict: UtteranceIndexSentenceIndexTotalSentenceIndexDict;\r\n}\r\nexport interface DataSetOfManualTGs {\r\n  manualSmallEGs: SimilarityBlock[][][];\r\n  manualMiddleEGs: SimilarityBlock[][][];\r\n  manualBigEGs: SimilarityBlock[][][];\r\n  manualSmallEGTitles: string[];\r\n  manualMiddleEGTitles: string[];\r\n  manualBigEGTitles: string[];\r\n}\r\nexport class DataStructureManager {\r\n  private _dataStructureSet: DataStructureSet;\r\n  private _datasetOfManualEGs: DataSetOfManualTGs;\r\n\r\n  constructor(debateName: DebateName, debateDataSet: DebateDataSet) {\r\n    const utteranceObjectsForDrawingManager = new UtteranceObjectsForDrawingManager(\r\n      debateDataSet.utteranceObjects\r\n    );\r\n    const utteranceObjectsForDrawing =\r\n      utteranceObjectsForDrawingManager.utteranceObjectsForDrawing;\r\n\r\n    // const utteranceObjectsForDrawing = makeUtteranceObjectsForDrawing(\r\n    //   debateDataSet.utteranceObjects\r\n    // );\r\n\r\n    const participants: Participant[] = makeParticipants(\r\n      debateName,\r\n      debateDataSet.utteranceObjects\r\n    );\r\n    const participantDict: ParticipantDict = _.keyBy(\r\n      participants,\r\n      (participant) => participant.name\r\n    );\r\n\r\n    const similarityBlockManager = new SimilarityBlockManager(\r\n      debateDataSet.conceptMatrixTransposed,\r\n      utteranceObjectsForDrawing,\r\n      debateDataSet.keytermObjects,\r\n      participantDict\r\n    );\r\n    const conceptSimilarityBlocks: SimilarityBlock[] =\r\n      similarityBlockManager.similarityBlocks;\r\n    const conceptSimilarityMatrix: SimilarityBlock[][] =\r\n      similarityBlockManager.similarityBlockGroup;\r\n\r\n    const maxSimilarityScore: number = _.maxBy(\r\n      conceptSimilarityBlocks,\r\n      (conceptSimilarityBlock) => conceptSimilarityBlock.similarity\r\n    )!.similarity;\r\n    // const maxSimilarityScore: number = parseInt(\r\n    //   _.maxBy(\r\n    //     conceptSimilarityBlocks,\r\n    //     (conceptSimilarityBlock) => conceptSimilarityBlock.similarityScore\r\n    //   )?.similarityScore.toFixed(0)!\r\n    // );\r\n\r\n    // make utterance_index => sentence_index => total_sentence_index\r\n    const utteranceIndexSentenceIndexTotalSentenceIndexDict: UtteranceIndexSentenceIndexTotalSentenceIndexDict = {};\r\n    let totalSentenceIndex: number = 0;\r\n    _.forEach(\r\n      debateDataSet.utteranceObjects,\r\n      (utteranceObject, utteranceIndex) => {\r\n        utteranceIndexSentenceIndexTotalSentenceIndexDict[utteranceIndex] = {};\r\n        _.forEach(\r\n          utteranceObject.sentenceObjects,\r\n          (sentenceObject, sentenceIndex) => {\r\n            utteranceIndexSentenceIndexTotalSentenceIndexDict[utteranceIndex][\r\n              sentenceIndex\r\n            ] = totalSentenceIndex;\r\n            totalSentenceIndex++;\r\n          }\r\n        );\r\n      }\r\n    );\r\n\r\n    // dataset of manual engagement groups\r\n    let manualSmallEGs: SimilarityBlock[][][] = [];\r\n    let manualMiddleEGs: SimilarityBlock[][][] = [];\r\n    let manualBigEGs: SimilarityBlock[][][] = [];\r\n    let manualSmallEGTitles: string[] = [];\r\n    let manualMiddleEGTitles: string[] = [];\r\n    let manualBigEGTitles: string[] = [];\r\n    if (debateName === \"기본소득\") {\r\n      manualSmallEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        0,\r\n        22,\r\n        47,\r\n        52,\r\n        68,\r\n        73,\r\n        79,\r\n        97,\r\n        132,\r\n        134,\r\n        177,\r\n        185,\r\n      ]);\r\n      manualMiddleEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        // 0,\r\n        // 22,\r\n        // 47,\r\n        69,\r\n        97,\r\n        133,\r\n        // 134,\r\n        177,\r\n      ]);\r\n      manualBigEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        0,\r\n        22,\r\n        47,\r\n        69,\r\n        133,\r\n        177,\r\n      ]);\r\n      // manualSmallEGTitles = getBasicIncomeManualSmallEGTitles();\r\n      manualMiddleEGTitles = getBasicIncomeManualMiddleEGTitles();\r\n      manualBigEGTitles = getBasicIncomeManualBigEGTitles();\r\n    } else if (debateName === \"기본소득clipped\") {\r\n      manualSmallEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        0,\r\n        22,\r\n        47,\r\n        52,\r\n        68,\r\n        73,\r\n        79,\r\n        97,\r\n      ]);\r\n      // manualMiddleEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n      //   0,\r\n      //   22,\r\n      //   47,\r\n      //   69,\r\n      //   79,\r\n      //   97,\r\n      //   132,\r\n      //   134,\r\n      //   177,\r\n      // ]);\r\n      // manualBigEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n      //   0,\r\n      //   22,\r\n      //   47,\r\n      //   69,\r\n      //   133,\r\n      //   177,\r\n      // ]);\r\n      // manualSmallEGTitles = getBasicIncomeManualSmallEGTitles();\r\n      // manualMiddleEGTitles = getBasicIncomeManualMiddleEGTitles();\r\n      // manualBigEGTitles = getBasicIncomeManualBigEGTitles();\r\n    } else if (debateName === \"정시확대\") {\r\n      manualBigEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        0,\r\n        15,\r\n        35,\r\n        139,\r\n        159,\r\n        244,\r\n        293,\r\n        313,\r\n      ]);\r\n      manualBigEGTitles = getSatManualBigEGTitles();\r\n    } else if (debateName === \"모병제\") {\r\n      //TODO 효지형 사진 올려준거처럼 인덱싱 부여.\r\n      // 논쟁 Rect가 이루어져야 하는 구간들 List.\r\n      // 0-18,\r\n      // 15-37,\r\n      // 24-58,\r\n      // 56-79,\r\n      // 73-106,\r\n      // 94-126,\r\n      // 146-183,\r\n      // 위에 바꾼 list들\r\n      // 1) 0,18,24,58,73,106,146,183\r\n      // 2) 15,37,56,79,94,126\r\n      manualSmallEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        // 기존 그룹\r\n        // 0,\r\n        // 56,\r\n        // 113,\r\n        // //130,\r\n        // 146,\r\n        0,\r\n        18,\r\n        24, // 18-24 없애기\r\n        58,\r\n        73, // 58-73 없애기\r\n        106,\r\n        146, // 106-146 없애기\r\n      ]);\r\n      manualMiddleEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        // 기존 topicGroup\r\n        // 14, 57, 175\r\n        15,\r\n        37,\r\n        43, // 37-56 없애기\r\n        79,\r\n        94, // 79-94 없애기\r\n        126,\r\n      ]);\r\n      manualBigEGs = makeManualTGs(conceptSimilarityMatrix, [\r\n        // 기존 topicGroup\r\n        // 0,\r\n        // 14,\r\n        // 36,\r\n        // 57,\r\n        // 78,\r\n        // 93,\r\n        // 108,\r\n        // 138,\r\n        // 175,\r\n      ]);\r\n      manualSmallEGTitles = getMilitaryManualSmallEGTitles();\r\n      manualMiddleEGTitles = getMilitaryManualMiddleEGTitles();\r\n      manualBigEGTitles = getMilitaryManualBigEGTitles();\r\n    } else if (debateName === \"sample\") {\r\n      manualSmallEGs = makeManualTGs(conceptSimilarityMatrix, [0, 5]);\r\n    }\r\n\r\n    this._dataStructureSet = {\r\n      // utteranceObjectsForDrawing,\r\n      utteranceObjectsForDrawingManager,\r\n      participants,\r\n      participantDict,\r\n      // conceptSimilarityBlocks,\r\n      // conceptSimilarityMatrix,\r\n      similarityBlockManager,\r\n      maxSimilarityScore,\r\n      utteranceIndexSentenceIndexTotalSentenceIndexDict,\r\n    };\r\n    //@ts-ignore\r\n    this._datasetOfManualEGs = {\r\n      manualSmallEGs,\r\n      manualMiddleEGs,\r\n      manualBigEGs,\r\n      manualSmallEGTitles,\r\n      manualMiddleEGTitles,\r\n      manualBigEGTitles,\r\n    };\r\n  }\r\n\r\n  public get dataStructureSet() {\r\n    return this._dataStructureSet;\r\n  }\r\n  public get datasetOfManualEGs() {\r\n    return this._datasetOfManualEGs;\r\n  }\r\n}\r\n","import _ from \"lodash\";\r\nimport { UtteranceObject } from \"../interfaces/DebateDataInterface\";\r\nimport { DebateName } from \"../views/ConceptualRecurrencePlot/DataImporter\";\r\n\r\nexport interface Participant {\r\n  name: string;\r\n  color: string;\r\n  team: number;\r\n}\r\n\r\nexport interface ParticipantDict {\r\n  [participant: string]: Participant;\r\n}\r\n\r\n/**\r\n * make participants information inclduing name, color\r\n * @param debateUtterances\r\n */\r\nexport function makeParticipants( // 참가자 노드 생성 구간\r\n  debateName: DebateName,\r\n  debateUtterances: UtteranceObject[]\r\n): Participant[] {\r\n  const nameDictionary: { [name: string]: string } = {};\r\n  // arrange participants\r\n  _.forEach(debateUtterances, (utteranceObject) => {\r\n    nameDictionary[utteranceObject.name] = utteranceObject.name;\r\n  });\r\n  const names: string[] = _.values(nameDictionary).sort();\r\n  console.log(\"names\", names);\r\n\r\n  let participants: Participant[] = [];\r\n\r\n  if (debateName === \"sample\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"#C941AF\",\r\n      1: \"#C98E41\",\r\n      2: \"#4161C9\",\r\n      3: \"#41C9C9\",\r\n      4: \"#333333\",\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = 2;\r\n          break;\r\n        case 1:\r\n          team = 1;\r\n          break;\r\n        case 2:\r\n          team = 1;\r\n          break;\r\n        case 3:\r\n          team = 2;\r\n          break;\r\n        case 4:\r\n          team = -1;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  } else if (debateName === \"기본소득\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"rgba(128, 128, 128, 1)\", // 아나운서\r\n      1: \"rgba(141, 223, 95, 1)\", // 박기성\r\n      2: \"rgba(56, 146, 3,1)\", // 오세훈\r\n      3: \"rgba(134, 82, 255, 1)\", // 이원재\r\n      4: \"rgba(0, 0, 216, 1)\", // 이재명\r\n      5: \"rgba(51, 51, 51, 1)\", // 사회자\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = -1;\r\n          break;\r\n        case 1:\r\n          team = 2;\r\n          break;\r\n        case 2:\r\n          team = 2;\r\n          break;\r\n        case 3:\r\n          team = 1;\r\n          break;\r\n        case 4:\r\n          team = 1;\r\n          break;\r\n        case 5:\r\n          team = -2;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  } else if (debateName === \"기본소득clipped\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"#FF0000\",\r\n      1: \"#00FF00\",\r\n      2: \"#3CB043\",\r\n      3: \"#A020F0\",\r\n      4: \"#333333\",\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = 2;\r\n          break;\r\n        case 1:\r\n          team = 2;\r\n          break;\r\n        case 2:\r\n          team = 1;\r\n          break;\r\n        case 3:\r\n          team = 1;\r\n          break;\r\n        case 4:\r\n          team = -2;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  } else if (debateName === \"정시확대\" || debateName === \"정시확대clipped\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"#FF0000\",\r\n      1: \"#00FF00\",\r\n      2: \"#3CB043\",\r\n      3: \"#A020F0\",\r\n      4: \"#333333\",\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = 1;\r\n          break;\r\n        case 1:\r\n          team = 2;\r\n          break;\r\n        case 2:\r\n          team = 1;\r\n          break;\r\n        case 3:\r\n          team = 2;\r\n          break;\r\n        case 4:\r\n          team = -2;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  } else if (debateName === \"모병제\" || debateName === \"모병제clipped\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      // 0: \"#FF0000\",\r\n      // 1: \"#00FF00\",\r\n      // 2: \"#3CB043\",\r\n      // 3: \"#A020F0\",\r\n      // 4: \"#333333\",\r\n      // 0: \"rgba(134, 82, 255, 1)\", // 김종대\r\n      // 1: \"rgba(141, 223, 95, 1)\", // 박휘락\r\n      // 2: \"rgba(56, 146, 3,1)\", // 이준석\r\n      // 3: \"rgba(0, 0, 216, 1)\", // 장경태\r\n      // 4: \"rgba(51, 51, 51, 1)\", // 사회자\r\n      //초파주빨\r\n      //#00AB6E #122CAB #C7611E #B60E3C\r\n      // 0: \"#00AB6E\", // 김종대, host\r\n      // 1: \"#C7611E\", // 박휘락, 장경태\r\n      // 2: \"#B60E3C\", // 이준석, 김종대\r\n      // 3: \"#00a0e2\", // 장경태, 이준석\r\n      // 4: \"#808080\", // 사회자, 박휘락\r\n      //0905 바뀜.\r\n      0: \"#808080\", // 김종대, host\r\n      1: \"#00a0e2\", // 박휘락, 장경태\r\n      2: \"#00AB6E\", // 이준석, 김종대\r\n      3: \"#B60E3C\", // 장경태, 이준석\r\n      4: \"#C7611E\", // 사회자, 박휘락\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = 1;\r\n          break;\r\n        case 1:\r\n          team = 2;\r\n          break;\r\n        case 2:\r\n          team = 2;\r\n          break;\r\n        case 3:\r\n          team = 1;\r\n          break;\r\n        case 4:\r\n          team = -2;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  } else if (debateName === \"집값\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"#000000\", // 김수지\r\n      1: \"#C941AF\", // 김현아\r\n      2: \"#C98E41\", // 송석준\r\n      3: \"#41C9C9\", // 진성준\r\n      4: \"#333333\", // 진행자\r\n      5: \"#4161C9\", // 최배근\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = -1;\r\n          break;\r\n        case 1:\r\n          team = 2;\r\n          break;\r\n        case 2:\r\n          team = 2;\r\n          break;\r\n        case 3:\r\n          team = 1;\r\n          break;\r\n        case 4:\r\n          team = -2;\r\n          break;\r\n        case 5:\r\n          team = 1;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  } else if (debateName === \"정년연장\") {\r\n    const colorDictionary: { [index: number]: string } = {\r\n      0: \"#41C9C9\", // 김범중\r\n      1: \"#4161C9\", // 박연미\r\n      2: \"#C98E41\", // 이지만\r\n      3: \"#C941AF\", // 정영진\r\n      4: \"#333333\", // 진행자\r\n    };\r\n    participants = _.map(names, (name, index) => {\r\n      let team: number;\r\n      switch (index) {\r\n        case 0:\r\n          team = 2;\r\n          break;\r\n        case 1:\r\n          team = 2;\r\n          break;\r\n        case 2:\r\n          team = 1;\r\n          break;\r\n        case 3:\r\n          team = 1;\r\n          break;\r\n        case 4:\r\n          team = -2;\r\n          break;\r\n        default:\r\n          team = -3;\r\n      }\r\n      return {\r\n        name,\r\n        color: colorDictionary[index],\r\n        team,\r\n      };\r\n    });\r\n  }\r\n\r\n  // console.log(\"participants\", participants);\r\n\r\n  return participants;\r\n}\r\n","import * as math from \"mathjs\";\r\nimport { SentenceIndexLexicalChainsDict } from \"../../classes/LCseg/LCseg\";\r\nimport {\r\n  DebateDataSet,\r\n  EvaluationDataSet,\r\n  KeytermObject,\r\n  StopwordDict,\r\n  UtteranceObject,\r\n} from \"../../interfaces/DebateDataInterface\";\r\n\r\nexport type TermType = \"single_term\" | \"compound_term\";\r\nexport type DebateName =\r\n  | \"sample\"\r\n  | \"기본소득\"\r\n  | \"정시확대\"\r\n  | \"모병제\"\r\n  | \"기본소득clipped\"\r\n  | \"정시확대clipped\"\r\n  | \"모병제clipped\"\r\n  | \"집값\"\r\n  | \"정년연장\";\r\n\r\n/* eslint-disable no-unused-vars */\r\nexport default class DataImporter {\r\n  private _debateDataset: DebateDataSet | null = null;\r\n  private _evaluationDataSet: EvaluationDataSet | null = null;\r\n\r\n  public constructor(debateName: DebateName, termType: TermType) {\r\n    if (\r\n      debateName === \"sample\" ||\r\n      debateName === \"기본소득\" ||\r\n      debateName === \"정시확대\" ||\r\n      debateName === \"모병제\" ||\r\n      debateName === \"기본소득clipped\" ||\r\n      debateName === \"정시확대clipped\" ||\r\n      debateName === \"모병제clipped\"\r\n    ) {\r\n      const utteranceObjects: UtteranceObject[] = require(`../../data/${debateName}/utterance_objects.json`);\r\n      const stopwordDict: StopwordDict = require(`../../data/${debateName}/stopword_dict.json`);\r\n      const conceptMatrix: number[][] = require(`../../data/${debateName}/${termType}/concept_matrix.json`);\r\n      const conceptMatrixTransposed = math.transpose(conceptMatrix);\r\n      const keytermObjects: KeytermObject[] = require(`../../data/${debateName}/${termType}/keyterm_objects.json`);\r\n      const similarityMatrix: number[][] = require(`../../data/${debateName}/${termType}/similarity_matrix.json`);\r\n      const termList: string[] = require(`../../data/${debateName}/${termType}/term_list.json`);\r\n      const termUtteranceBooleanMatrix: number[][] = require(`../../data/${debateName}/${termType}/term_utterance_boolean_matrix.json`);\r\n      const termUtteranceBooleanMatrixTransposed = math.transpose(\r\n        termUtteranceBooleanMatrix\r\n      );\r\n      const frequencyVector: number[] = require(`../../data/${debateName}/${termType}/frequency_vector.json`);\r\n      const sentenceIndexLexicalChainsDict: SentenceIndexLexicalChainsDict = require(`../../data/${debateName}/${termType}/sentenceindex_lexicalchains_dict.json`);\r\n      // TODO we can change individual result.\r\n      // const sentenceIndexesForSegmentsOfPeople: number[] = require(`../../data/${debateName}/evaluation_results/merged_by_utterance_base.json`);\r\n      // const sentenceIndexesForSegmentsOfPeople: number[] = require(`../../data/${debateName}/evaluation_results/merged_by_sentence_base.json`);\r\n      const sentenceIndexesForSegmentsOfPeople: number[] = require(`../../data/${debateName}/evaluation_results/merged_by_close_sentence.json`);\r\n      // const sentenceIndexesForSegmentsOfPeople: number[] = require(`../../data/${debateName}/evaluation_results/junwoo.json`);\r\n      //@ts-ignore\r\n      this._debateDataset = {\r\n        conceptMatrixTransposed,\r\n        keytermObjects,\r\n        similarityMatrix,\r\n        stopwordDict,\r\n        termList,\r\n        termUtteranceBooleanMatrixTransposed,\r\n        utteranceObjects,\r\n        frequencyVector,\r\n      };\r\n\r\n      this._evaluationDataSet = {\r\n        sentenceIndexLexicalChainsDict,\r\n        sentenceIndexesForSegmentsOfPeople,\r\n      };\r\n    }\r\n  }\r\n\r\n  public get debateDataSet() {\r\n    return this._debateDataset;\r\n  }\r\n\r\n  public get evaluationDataSet() {\r\n    return this._evaluationDataSet;\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport _ from \"lodash\";\r\nimport {\r\n  SentenceObject,\r\n  UtteranceObject,\r\n} from \"../../../interfaces/DebateDataInterface\";\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"../interfaces\";\r\nimport { make1EngagementGroup } from \"./make1EngagementGroup\";\r\n\r\nexport default class CombinedEGsMaker {\r\n  // TODO\r\n  // private readonly minEngagementGroupSize: number = 4;\r\n  private readonly minEngagementGroupSize: number = 1;\r\n  private _standardSemanticConsistency: number = 1000;\r\n  private _groupSimilaritiesWeight: number = 1;\r\n  private _lineSimilaritiesWeight: number = 0;\r\n  private _pointSimilaritiesWeight: number = 0;\r\n  private segmentCounting: number = 0;\r\n\r\n  constructor(\r\n    private readonly similarityBlockGroup: SimilarityBlock[][],\r\n    private readonly utteranceObjects: UtteranceObject[]\r\n  ) {\r\n    //\r\n  }\r\n\r\n  /**\r\n   * Maybe Depreacted\r\n   * @returns\r\n   */\r\n  public make(): SimilarityBlock[][][] {\r\n    // initiate engagementPoints\r\n    _.forEach(this.similarityBlockGroup, (rowSimilarityLine) => {\r\n      _.forEach(rowSimilarityLine, (similarityBlock) => {\r\n        similarityBlock.engagementPoint = false;\r\n      });\r\n    });\r\n\r\n    const engagementGroups = this.trySplit2EGs(\r\n      this.similarityBlockGroup,\r\n      this.minEngagementGroupSize,\r\n      this._standardSemanticConsistency\r\n    );\r\n    return engagementGroups;\r\n  }\r\n\r\n  /**\r\n   * Make topic segments by number_of_segments\r\n   * @param numOfSegments\r\n   * @returns\r\n   */\r\n  public makeByNumOfSegments(numOfSegments: number): SimilarityBlock[][][] {\r\n    // initiate engagementPoints\r\n    _.forEach(this.similarityBlockGroup, (rowSimilarityLine) => {\r\n      _.forEach(rowSimilarityLine, (similarityBlock) => {\r\n        similarityBlock.engagementPoint = false;\r\n      });\r\n    });\r\n\r\n    // while (segmentCounting < numOfSegments)\r\n    //   2 new zones to include (2 new topicGroups)\r\n    //   1 old zone to delete (1 old topicGroup)\r\n    //   existing zones (existing topicGroups)\r\n    //   make new zones (new topicGroups)\r\n    //   choose topic group from candidates\r\n    //     : return old zone(old topicGroup), new zones(new topicGroups)\r\n    //   segmentCounting++\r\n\r\n    let topicGroups: SimilarityBlock[][][] = [this.similarityBlockGroup];\r\n\r\n    while (topicGroups.length < numOfSegments) {\r\n      // choose topic group from candidates: return old zone, new zones\r\n      const choosedDataSet = findNew2TopicGroups.call(\r\n        this,\r\n        topicGroups,\r\n        this.minEngagementGroupSize\r\n      );\r\n\r\n      if (choosedDataSet !== null) {\r\n        // make new topicGroups\r\n        topicGroups = _.chain(topicGroups)\r\n          .filter((topicGroup) => topicGroup !== choosedDataSet.oldTopicGroup)\r\n          .concat(choosedDataSet.new2TopicGroups)\r\n          .value();\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return topicGroups;\r\n\r\n    function findNew2TopicGroups(\r\n      this: CombinedEGsMaker,\r\n      topicGroups: SimilarityBlock[][][],\r\n      minEngagementGroupSize: number\r\n    ) {\r\n      const topicGroupsCandidatesOfEachTop: SimilarityBlock[][][][] = [];\r\n      const semanticConsistenciesOfEachTop: number[] = [];\r\n\r\n      _.forEach(topicGroups, (topicGroup) => {\r\n        const dataSetOfTopicGroupCandidates = getDataSetOfTopicGroupCandidates.call(\r\n          this,\r\n          topicGroup,\r\n          minEngagementGroupSize\r\n        );\r\n\r\n        // find top topicGroupsCandidate & semanticConsistency\r\n        const dataSetOfTopTopicGroupsCandidate = findTopTopicGroupsCandidate(\r\n          dataSetOfTopicGroupCandidates.topicGroupsCandidates,\r\n          dataSetOfTopicGroupCandidates.semanticConsistencies\r\n        );\r\n\r\n        if (dataSetOfTopTopicGroupsCandidate) {\r\n          topicGroupsCandidatesOfEachTop.push(\r\n            dataSetOfTopTopicGroupsCandidate.topicGroups\r\n          );\r\n          semanticConsistenciesOfEachTop.push(\r\n            dataSetOfTopTopicGroupsCandidate.semanticConsistency\r\n          );\r\n        } else {\r\n          topicGroupsCandidatesOfEachTop.push([]);\r\n          semanticConsistenciesOfEachTop.push(0);\r\n        }\r\n      });\r\n      //console.log(topicGroupsCandidatesOfEachTop);\r\n\r\n      // find topicGroup from topicGroupsCandidatesOfEachTop\r\n      if (semanticConsistenciesOfEachTop.length !== 0) {\r\n        const maxValue = _.max(semanticConsistenciesOfEachTop);\r\n        const indexOfMax = _.indexOf(semanticConsistenciesOfEachTop, maxValue);\r\n        const new2TopicGroups = topicGroupsCandidatesOfEachTop[indexOfMax];\r\n        const oldTopicGroup: SimilarityBlock[][] = topicGroups[indexOfMax];\r\n\r\n        return {\r\n          oldTopicGroup,\r\n          new2TopicGroups,\r\n        };\r\n      } else {\r\n        return null;\r\n      }\r\n\r\n      function getDataSetOfTopicGroupCandidates(\r\n        this: CombinedEGsMaker,\r\n        topicGroup: SimilarityBlock[][],\r\n        minEngagementGroupSize: number\r\n      ) {\r\n        const topicGroupsCandidates: SimilarityBlock[][][][] = [];\r\n        const semanticConsistencies: number[] = [];\r\n\r\n        const lastRowBlocks = topicGroup[topicGroup.length - 1];\r\n        for (\r\n          let i = minEngagementGroupSize;\r\n          i < lastRowBlocks.length - minEngagementGroupSize;\r\n          i++\r\n        ) {\r\n          // for each point, calculate semantic consistency of 2EGs\r\n          const engagementGroup1 = make1EngagementGroup(topicGroup, 0, i + 1);\r\n          const engagementGroup2 = make1EngagementGroup(\r\n            topicGroup,\r\n            i + 1,\r\n            topicGroup.length\r\n          );\r\n\r\n          // Calulate with Together => Good Splits\r\n          const scOfEG1 = this.getSumOfSimilarities({\r\n            similarityBlockGroup: engagementGroup1,\r\n            utteranceObjects: this.utteranceObjects,\r\n            groupSimilaritiesWeight: this._groupSimilaritiesWeight,\r\n            borderSimilaritiesWeight: this._lineSimilaritiesWeight,\r\n            pointSimilaritiesWeight: this._pointSimilaritiesWeight,\r\n          });\r\n          const scOfEG2 = this.getSumOfSimilarities({\r\n            similarityBlockGroup: engagementGroup2,\r\n            utteranceObjects: this.utteranceObjects,\r\n            groupSimilaritiesWeight: this._groupSimilaritiesWeight,\r\n            borderSimilaritiesWeight: this._lineSimilaritiesWeight,\r\n            pointSimilaritiesWeight: this._pointSimilaritiesWeight,\r\n          });\r\n          // const semanticConsistency =\r\n          //   ((scOfEG1 + scOfEG2) /\r\n          //     ((engagementGroup1.length * (engagementGroup1.length + 1) / 2) +\r\n          //       (engagementGroup2.length * (engagementGroup2.length + 1)) / 2)) *\r\n          //   ((topicGroup.length * (topicGroup.length + 1)) / 2);\r\n          let semanticConsistency =\r\n            ((scOfEG1 + scOfEG2) /\r\n              (this.getNumberOfSimilartyBlocks(\r\n                engagementGroup1,\r\n                this._groupSimilaritiesWeight,\r\n                this._lineSimilaritiesWeight,\r\n                this._pointSimilaritiesWeight\r\n              ) +\r\n                this.getNumberOfSimilartyBlocks(\r\n                  engagementGroup2,\r\n                  this._groupSimilaritiesWeight,\r\n                  this._lineSimilaritiesWeight,\r\n                  this._pointSimilaritiesWeight\r\n                ))) *\r\n            this.getNumberOfSimilartyBlocks(\r\n              topicGroup,\r\n              this._groupSimilaritiesWeight,\r\n              this._lineSimilaritiesWeight,\r\n              this._pointSimilaritiesWeight\r\n            );\r\n\r\n          // for exception\r\n          if (\r\n            this._groupSimilaritiesWeight === 0 &&\r\n            this._lineSimilaritiesWeight === 0 &&\r\n            this._pointSimilaritiesWeight > 0\r\n          ) {\r\n            semanticConsistency *=\r\n              (topicGroup.length * (topicGroup.length + 1)) / 2;\r\n          }\r\n\r\n          if (!isNaN(semanticConsistency)) {\r\n            topicGroupsCandidates.push([engagementGroup1, engagementGroup2]);\r\n            semanticConsistencies.push(semanticConsistency);\r\n          }\r\n        }\r\n\r\n        return { topicGroupsCandidates, semanticConsistencies };\r\n      }\r\n\r\n      function findTopTopicGroupsCandidate(\r\n        topicGroupsCandidates: SimilarityBlock[][][][],\r\n        semanticConsistencies: number[]\r\n      ) {\r\n        const maxSemanticConsistency = _.max(semanticConsistencies);\r\n        if (maxSemanticConsistency) {\r\n          const indexOfMax = _.indexOf(\r\n            semanticConsistencies,\r\n            maxSemanticConsistency\r\n          );\r\n\r\n          const topTopicGroups = topicGroupsCandidates[indexOfMax];\r\n          return {\r\n            topicGroups: topTopicGroups,\r\n            semanticConsistency: maxSemanticConsistency,\r\n          };\r\n        } else {\r\n          return null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private trySplit2EGs(\r\n    egCandidate: SimilarityBlock[][],\r\n    minEngagementGroupSize: number,\r\n    standardSemanticConsistency: number\r\n  ): SimilarityBlock[][][] {\r\n    // mark engagement_point\r\n    const engagementPoint = egCandidate[egCandidate.length - 1][0];\r\n    engagementPoint.engagementPoint = true;\r\n\r\n    const engagementGroupsCandidates: SimilarityBlock[][][][] = [];\r\n    const semanticConsistencies: number[] = [];\r\n\r\n    const lastRowBlocks = egCandidate[egCandidate.length - 1];\r\n    for (\r\n      let i = minEngagementGroupSize;\r\n      i < lastRowBlocks.length - minEngagementGroupSize;\r\n      i++\r\n    ) {\r\n      // for each point, calculate semantic consistency of 2EGs\r\n      const engagementGroup1 = make1EngagementGroup(egCandidate, 0, i + 1);\r\n      const engagementGroup2 = make1EngagementGroup(\r\n        egCandidate,\r\n        i + 1,\r\n        egCandidate.length\r\n      );\r\n\r\n      // Calulate with Together => Good Splits\r\n      const scOfEG1 = this.getSumOfSimilarities({\r\n        similarityBlockGroup: engagementGroup1,\r\n        utteranceObjects: this.utteranceObjects,\r\n        groupSimilaritiesWeight: this._groupSimilaritiesWeight,\r\n        borderSimilaritiesWeight: this._lineSimilaritiesWeight,\r\n        pointSimilaritiesWeight: this._pointSimilaritiesWeight,\r\n      });\r\n      const scOfEG2 = this.getSumOfSimilarities({\r\n        similarityBlockGroup: engagementGroup2,\r\n        utteranceObjects: this.utteranceObjects,\r\n        groupSimilaritiesWeight: this._groupSimilaritiesWeight,\r\n        borderSimilaritiesWeight: this._lineSimilaritiesWeight,\r\n        pointSimilaritiesWeight: this._pointSimilaritiesWeight,\r\n      });\r\n      // const semanticConsistency =\r\n      //   ((scOfEG1 + scOfEG2) /\r\n      //     ((engagementGroup1.length * (engagementGroup1.length + 1) / 2) +\r\n      //       (engagementGroup2.length * (engagementGroup2.length + 1)) / 2)) *\r\n      //   ((egCandidate.length * (egCandidate.length + 1)) / 2);\r\n      let semanticConsistency =\r\n        ((scOfEG1 + scOfEG2) /\r\n          (this.getNumberOfSimilartyBlocks(\r\n            engagementGroup1,\r\n            this._groupSimilaritiesWeight,\r\n            this._lineSimilaritiesWeight,\r\n            this._pointSimilaritiesWeight\r\n          ) +\r\n            this.getNumberOfSimilartyBlocks(\r\n              engagementGroup2,\r\n              this._groupSimilaritiesWeight,\r\n              this._lineSimilaritiesWeight,\r\n              this._pointSimilaritiesWeight\r\n            ))) *\r\n        this.getNumberOfSimilartyBlocks(\r\n          egCandidate,\r\n          this._groupSimilaritiesWeight,\r\n          this._lineSimilaritiesWeight,\r\n          this._pointSimilaritiesWeight\r\n        );\r\n\r\n      // for exception\r\n      if (\r\n        this._groupSimilaritiesWeight === 0 &&\r\n        this._lineSimilaritiesWeight === 0 &&\r\n        this._pointSimilaritiesWeight > 0\r\n      ) {\r\n        semanticConsistency *=\r\n          (egCandidate.length * (egCandidate.length + 1)) / 2;\r\n      }\r\n\r\n      if (semanticConsistency >= standardSemanticConsistency) {\r\n        engagementGroupsCandidates.push([engagementGroup1, engagementGroup2]);\r\n        semanticConsistencies.push(semanticConsistency);\r\n      }\r\n    }\r\n\r\n    let engagementGroups: SimilarityBlock[][][];\r\n    if (semanticConsistencies.length !== 0) {\r\n      const maxValue = _.max(semanticConsistencies);\r\n      const indexOfMax = _.indexOf(semanticConsistencies, maxValue);\r\n      const engagementGroupsCandidate = engagementGroupsCandidates[indexOfMax];\r\n\r\n      const splittdEGs1 = this.trySplit2EGs(\r\n        engagementGroupsCandidate[0],\r\n        this.minEngagementGroupSize,\r\n        standardSemanticConsistency\r\n      );\r\n      const splittdEGs2 = this.trySplit2EGs(\r\n        engagementGroupsCandidate[1],\r\n        this.minEngagementGroupSize,\r\n        standardSemanticConsistency\r\n      );\r\n      engagementGroups = _.concat(splittdEGs1, splittdEGs2);\r\n    } else {\r\n      engagementGroups = [egCandidate];\r\n    }\r\n\r\n    return engagementGroups;\r\n  }\r\n\r\n  private trySplit2Groups(\r\n    egCandidate: SimilarityBlock[][],\r\n    minEngagementGroupSize: number,\r\n    numOfSegments: number\r\n  ): SimilarityBlock[][][] {\r\n    // mark engagement_point\r\n    const engagementPoint = egCandidate[egCandidate.length - 1][0];\r\n    engagementPoint.engagementPoint = true;\r\n\r\n    const engagementGroupsCandidates: SimilarityBlock[][][][] = [];\r\n    const semanticConsistencies: number[] = [];\r\n\r\n    const lastRowBlocks = egCandidate[egCandidate.length - 1];\r\n    for (\r\n      let i = minEngagementGroupSize;\r\n      i < lastRowBlocks.length - minEngagementGroupSize;\r\n      i++\r\n    ) {\r\n      // for each point, calculate semantic consistency of 2EGs\r\n      const engagementGroup1 = make1EngagementGroup(egCandidate, 0, i + 1);\r\n      const engagementGroup2 = make1EngagementGroup(\r\n        egCandidate,\r\n        i + 1,\r\n        egCandidate.length\r\n      );\r\n\r\n      // Calulate with Together => Good Splits\r\n      const scOfEG1 = this.getSumOfSimilarities({\r\n        similarityBlockGroup: engagementGroup1,\r\n        utteranceObjects: this.utteranceObjects,\r\n        groupSimilaritiesWeight: this._groupSimilaritiesWeight,\r\n        borderSimilaritiesWeight: this._lineSimilaritiesWeight,\r\n        pointSimilaritiesWeight: this._pointSimilaritiesWeight,\r\n      });\r\n      const scOfEG2 = this.getSumOfSimilarities({\r\n        similarityBlockGroup: engagementGroup2,\r\n        utteranceObjects: this.utteranceObjects,\r\n        groupSimilaritiesWeight: this._groupSimilaritiesWeight,\r\n        borderSimilaritiesWeight: this._lineSimilaritiesWeight,\r\n        pointSimilaritiesWeight: this._pointSimilaritiesWeight,\r\n      });\r\n      // const semanticConsistency =\r\n      //   ((scOfEG1 + scOfEG2) /\r\n      //     ((engagementGroup1.length * (engagementGroup1.length + 1) / 2) +\r\n      //       (engagementGroup2.length * (engagementGroup2.length + 1)) / 2)) *\r\n      //   ((egCandidate.length * (egCandidate.length + 1)) / 2);\r\n      let semanticConsistency =\r\n        ((scOfEG1 + scOfEG2) /\r\n          (this.getNumberOfSimilartyBlocks(\r\n            engagementGroup1,\r\n            this._groupSimilaritiesWeight,\r\n            this._lineSimilaritiesWeight,\r\n            this._pointSimilaritiesWeight\r\n          ) +\r\n            this.getNumberOfSimilartyBlocks(\r\n              engagementGroup2,\r\n              this._groupSimilaritiesWeight,\r\n              this._lineSimilaritiesWeight,\r\n              this._pointSimilaritiesWeight\r\n            ))) *\r\n        this.getNumberOfSimilartyBlocks(\r\n          egCandidate,\r\n          this._groupSimilaritiesWeight,\r\n          this._lineSimilaritiesWeight,\r\n          this._pointSimilaritiesWeight\r\n        );\r\n\r\n      // for exception\r\n      if (\r\n        this._groupSimilaritiesWeight === 0 &&\r\n        this._lineSimilaritiesWeight === 0 &&\r\n        this._pointSimilaritiesWeight > 0\r\n      ) {\r\n        semanticConsistency *=\r\n          (egCandidate.length * (egCandidate.length + 1)) / 2;\r\n      }\r\n\r\n      // if (semanticConsistency >= standardSemanticConsistency) {\r\n      engagementGroupsCandidates.push([engagementGroup1, engagementGroup2]);\r\n      semanticConsistencies.push(semanticConsistency);\r\n      // }\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  private getSumOfSimilarities(p: {\r\n    similarityBlockGroup: SimilarityBlock[][];\r\n    utteranceObjects: UtteranceObject[];\r\n    groupSimilaritiesWeight: number;\r\n    borderSimilaritiesWeight: number;\r\n    pointSimilaritiesWeight: number;\r\n  }): number {\r\n    let sum: number = 0;\r\n\r\n    _.forEach(p.similarityBlockGroup, (rowSimilarityBlocks, rowIndex) => {\r\n      _.forEach(rowSimilarityBlocks, (similarityBlock, colIndex) => {\r\n        let groupLinePointWeight: number = 0;\r\n\r\n        // group\r\n        groupLinePointWeight += p.groupSimilaritiesWeight;\r\n\r\n        // line\r\n        if (rowIndex === p.similarityBlockGroup.length - 1 || colIndex === 0) {\r\n          groupLinePointWeight += p.borderSimilaritiesWeight;\r\n        }\r\n\r\n        // point\r\n        if (rowIndex === p.similarityBlockGroup.length - 1 && colIndex === 0) {\r\n          groupLinePointWeight += p.pointSimilaritiesWeight;\r\n        }\r\n\r\n        sum +=\r\n          groupLinePointWeight *\r\n          similarityBlock.weight *\r\n          similarityBlock.similarity;\r\n      });\r\n    });\r\n\r\n    return sum;\r\n  }\r\n\r\n  private getNumberOfSimilartyBlocks(\r\n    similarityBlockGroup: SimilarityBlock[][],\r\n    groupSimilaritiesWeight: number,\r\n    borderSimilaritiesWeight: number,\r\n    pointSimilaritiesWeight: number\r\n  ): number {\r\n    // group\r\n    const numberOfGroupSimilarityBlocks: number =\r\n      groupSimilaritiesWeight *\r\n      ((similarityBlockGroup.length * (similarityBlockGroup.length + 1)) / 2);\r\n\r\n    // line\r\n    const numberOfLineSimilarityBlocks: number =\r\n      borderSimilaritiesWeight * (2 * similarityBlockGroup.length - 1);\r\n\r\n    // point\r\n    const numberOfPointSimilarityBlocks: number = pointSimilaritiesWeight * 1;\r\n\r\n    return (\r\n      numberOfGroupSimilarityBlocks +\r\n      numberOfLineSimilarityBlocks +\r\n      numberOfPointSimilarityBlocks\r\n    );\r\n  }\r\n\r\n  public set standardSemanticConsistency(standardSemanticConsistency: number) {\r\n    this._standardSemanticConsistency = standardSemanticConsistency;\r\n  }\r\n  public set groupSimilaritiesWeight(groupSimilaritiesWeight: number) {\r\n    this._groupSimilaritiesWeight = groupSimilaritiesWeight;\r\n  }\r\n  public set lineSimilaritiesWeight(lineSimilaritiesWeight: number) {\r\n    this._lineSimilaritiesWeight = lineSimilaritiesWeight;\r\n  }\r\n  public set pointSimilaritiesWeight(pointSimilaritiesWeight: number) {\r\n    this._pointSimilaritiesWeight = pointSimilaritiesWeight;\r\n  }\r\n  public set borderSimilaritiesWeight(borderSimilaritiesWeight: number) {\r\n    this._lineSimilaritiesWeight = borderSimilaritiesWeight;\r\n  }\r\n}\r\n","import style from \"./Header.module.scss\";\r\nimport React from \"react\";\r\n\r\ninterface HeaderProps {\r\n  isOpen: boolean;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport default function Header({ isOpen, setIsOpen }: HeaderProps) {\r\n  return (\r\n    <a className={style.mainLink}>\r\n      <div className={style.navi}>MetaDebateVis</div>\r\n      {/* <button\r\n        onClick={() => setIsOpen((prev) => !prev)}\r\n        style={{\r\n          marginLeft: \"100px\",\r\n          marginBottom: \"20px\",\r\n          background: \"#9c27b0\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        {isOpen ? \"Hide Script\" : \"View Script\"}\r\n      </button> */}\r\n    </a>\r\n  );\r\n}\r\n","import style from \"./HeaderTwo.module.scss\";\r\nimport React from \"react\";\r\n// eslint-disable-next-line no-unused-vars\r\n\r\ninterface LegendProps {\r\n  color: string | string[];\r\n  label: string;\r\n  svgPath?: string[];\r\n}\r\n\r\ninterface HeaderProps {\r\n  isOpen: boolean;\r\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst participantColors = [\r\n  { color: \"#B60E3C\", label: \"Lee Joonseok\" },\r\n  { color: \"#C7611E\", label: \"Park Hwirak\" },\r\n  { color: \"#00AB6E\", label: \"Kim Jongdae\" },\r\n  { color: \"#00a0e2\", label: \"Jang Kyungtae\" },\r\n  { color: \"#808080\", label: \"Host\" },\r\n];\r\n\r\nconst topicColors = [\r\n  { color: \"#400000\", label: \"Argumentation\" },\r\n  { color: \"#ff0000\", label: \"Argumentation area\" },\r\n];\r\n\r\nconst LegendItem: React.FC<LegendProps> = ({ color, label }) => {\r\n  const isOutlineOnly = label === \"Argumentation area\";\r\n\r\n  const transform = isOutlineOnly\r\n    ? \"translate(8, 11.5) rotate(45) translate(-8, -8)\"\r\n    : \"\";\r\n\r\n  let labelStyle = { marginTop: \"-25px\" };\r\n  let svgStyle = {\r\n    marginTop: \"-22.5px\",\r\n    marginRight: \"5px\",\r\n    marginLeft: \"8px\",\r\n  }; // default style\r\n\r\n  if (label === \"Argumentation\") {\r\n    //@ts-ignore\r\n    labelStyle = { ...labelStyle, marginRight: \"11px\" };\r\n    svgStyle = {\r\n      marginTop: \"-22.5px\",\r\n      marginRight: \"5px\",\r\n      marginLeft: \"-355px\",\r\n      //marginLeft: \"139px\",\r\n    }; // changed style\r\n  } else if (label === \"Argumentation area\") {\r\n    //@ts-ignore\r\n    labelStyle = { ...labelStyle, marginLeft: \"25px\" };\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <svg width=\"16\" height=\"16\" style={svgStyle}>\r\n        <rect\r\n          width={isOutlineOnly ? \"11\" : \"16\"}\r\n          height={isOutlineOnly ? \"11\" : \"16\"}\r\n          //@ts-ignore\r\n          fill={isOutlineOnly ? \"none\" : color}\r\n          transform={transform}\r\n          //@ts-ignore\r\n          stroke={color}\r\n          strokeWidth=\"1\"\r\n        />\r\n      </svg>\r\n      <div style={labelStyle}>{label}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function Header({ isOpen, setIsOpen }: HeaderProps) {\r\n  //const [isOpen, setIsOpen] = useState(true);\r\n  return (\r\n    <a className={style.mainLink}>\r\n      <div className={style.naviTwo}>\r\n        {/* <h3 style={{ marginLeft: \"5px\", marginTop: \"-18px\" }}>Data: 모병제</h3> */}\r\n        <h3\r\n          style={{ marginLeft: \"5px\", marginTop: \"-18px\", fontWeight: \"550\" }}\r\n        >\r\n          Legends:\r\n        </h3>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          {participantColors.map((item, i) => (\r\n            <LegendItem\r\n              key={i}\r\n              color={item.color}\r\n              label={item.label}\r\n            ></LegendItem>\r\n          ))}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"-55px\",\r\n            marginLeft: \"-53px\",\r\n            //marginLeft: \"-327px\",\r\n          }}\r\n        >\r\n          {topicColors.map((item, i) => (\r\n            <LegendItem\r\n              key={i}\r\n              color={item.color}\r\n              label={item.label}\r\n            ></LegendItem>\r\n          ))}\r\n          <svg\r\n            width=\"22\"\r\n            height=\"22\"\r\n            style={{\r\n              marginBottom: \"20px\",\r\n              marginLeft: \"-444px\",\r\n              //marginLeft: \"-663px\",\r\n              scale: \"0.85\",\r\n            }}\r\n          >\r\n            <path\r\n              style={{\r\n                fill: \"#ffffff\",\r\n                marginLeft: \"20px\",\r\n                strokeWidth: \"1\",\r\n                stroke: \"black\",\r\n              }}\r\n              // d=\"M19.7,15.6h0.2c0.9,0,1.7-0.8,1.6-1.7c0-0.9-0.7-1.6-1.6-1.6h-0.4c0.9,0,1.7-0.8,1.7-1.7c0-0.9-0.8-1.7-1.7-1.7  h-1.2h-2c-1-0.4-1.3-1.2-1.4-2.1c0-0.7,0.1-1.4,0.2-2c0.2-0.8,0.3-1.7,0-2.5c-0.3-0.8-0.9-1.6-1.9-1.8c-0.3-0.1-0.6-0.1-0.9,0  c-0.4,0.2-0.6,0.6-0.6,1.1c0,0.4,0.1,0.8,0.2,1.3C12,3.5,12,4.1,11.8,4.7c-0.4,1.1-1.6,1.9-2.6,2.6C8.6,7.7,8,8.1,7.5,8.6  C7.2,8.8,7.2,8.9,7.1,9.2c0,0.1-0.1,0.5-0.3,0.5H5.2V8.8c0-0.1-0.1-0.3-0.3-0.3H1.1C1,8.5,0.8,8.6,0.8,8.8v12.5  c0,0.1,0.1,0.3,0.3,0.3h3.8c0.1,0,0.3-0.1,0.3-0.3v-1.2c0.8,0,1.6,0,2,0.5c0.2,0.2,0.3,0.4,0.5,0.5c0.6,0.4,1.7,0.2,2.4,0.2  c2.7,0,5.5,0,8.2,0h1c0.7,0,1.2-0.5,1.2-1.2c0-0.7-0.5-1.2-1.2-1.2l0.5,0h0.1c0.9,0,1.7-0.7,1.7-1.7C21.4,16.3,20.6,15.6,19.7,15.6z  \"\r\n              d=\"M9,2c3.9,0,7,3.1,7,7s-3.1,7-7,7s-7-3.1-7-7S5.1,2,9,2 M9,1C4.6,1,1,4.6,1,9c0,4.4,3.6,8,8,8c4.4,0,8-3.6,8-8\r\n\t\tC17,4.6,13.4,1,9,1L9,1z\"\r\n            />\r\n          </svg>\r\n          <div style={{ marginTop: \"-23px\", marginLeft: \"2px\" }}>Pros</div>\r\n          <svg\r\n            width=\"22\"\r\n            height=\"22\"\r\n            style={{\r\n              marginBottom: \"21px\",\r\n              marginLeft: \"4px\",\r\n              scale: \"0.85\",\r\n            }}\r\n          >\r\n            <path\r\n              style={{\r\n                fill: \"#ffffff\",\r\n                marginLeft: \"20px\",\r\n                strokeWidth: \"1\",\r\n                stroke: \"black\",\r\n              }}\r\n              // d=\"M2.7,6.4H2.5c-0.9,0-1.7,0.8-1.6,1.7c0,0.9,0.7,1.6,1.6,1.6h0.4c-0.9,0-1.7,0.8-1.7,1.7c0,0.9,0.8,1.7,1.7,1.7  h1.2h2c1,0.4,1.3,1.2,1.4,2.1c0,0.7-0.1,1.4-0.2,2c-0.2,0.8-0.3,1.7,0,2.5c0.3,0.8,0.9,1.6,1.9,1.8c0.3,0.1,0.6,0.1,0.9,0  c0.4-0.2,0.6-0.6,0.6-1.1c0-0.4-0.1-0.8-0.2-1.3c-0.1-0.6-0.1-1.2,0.1-1.8c0.4-1.1,1.6-1.9,2.6-2.6c0.6-0.4,1.2-0.8,1.7-1.3  c0.2-0.2,0.3-0.3,0.4-0.6c0-0.1,0.1-0.5,0.3-0.5h1.7v0.9c0,0.1,0.1,0.3,0.3,0.3h3.8c0.1,0,0.3-0.1,0.3-0.3V0.7  c0-0.1-0.1-0.3-0.3-0.3h-3.8c-0.1,0-0.3,0.1-0.3,0.3v1.2c-0.8,0-1.6,0-2-0.5c-0.2-0.2-0.3-0.4-0.5-0.5c-0.6-0.4-1.7-0.2-2.4-0.2  c-2.7,0-5.5,0-8.2,0h-1c-0.7,0-1.2,0.5-1.2,1.2c0,0.7,0.5,1.2,1.2,1.2l-0.5,0H2.7C1.8,3.1,1,3.8,1,4.8C1,5.7,1.8,6.4,2.7,6.4z\"\r\n              d=\"M12,2.4c0.8,0,1.5,0.3,2,0.8l1.1,1.1c1.1,1.1,1.1,2.9,0,4l-0.4,0.4l-0.7,0.7l0.7,0.7l0.4,0.4c1.1,1.1,1.1,2.9,0,4L14,15.6\r\n              c-0.5,0.5-1.3,0.8-2,0.8c-0.8,0-1.5-0.3-2-0.8l-0.4-0.4l-0.7-0.7l-0.7,0.7l-0.4,0.4c-0.5,0.5-1.2,0.8-2,0.8c-0.8,0-1.5-0.3-2-0.8\r\n              l-1.1-1.1c-0.5-0.5-0.8-1.3-0.8-2c0-0.8,0.3-1.5,0.8-2l0.4-0.4l0.7-0.7L3.1,8.7L2.7,8.4c-1.1-1.1-1.1-2.9,0-4l1.1-1.1\r\n              c0.5-0.5,1.3-0.8,2-0.8s1.5,0.3,2,0.8l0.4,0.4l0.7,0.7l0.7-0.7L10,3.2C10.5,2.7,11.2,2.4,12,2.4 M12,1.4c-1,0-2,0.4-2.7,1.1\r\n              L8.9,2.9L8.6,2.5C7.8,1.8,6.8,1.4,5.9,1.4c-1,0-2,0.4-2.7,1.1L2,3.7C0.5,5.2,0.5,7.6,2,9.1l0.3,0.3L2,9.8c-1.5,1.5-1.5,3.9,0,5.4\r\n              l1.1,1.1c0.7,0.7,1.7,1.1,2.7,1.1c1,0,2-0.4,2.7-1.1L8.9,16l0.4,0.4c0.7,0.7,1.7,1.1,2.7,1.1s2-0.4,2.7-1.1l1.1-1.1\r\n              c1.5-1.5,1.5-3.9,0-5.4l-0.4-0.4L15.8,9c1.5-1.5,1.5-3.9,0-5.4l-1.1-1.1C14,1.8,13,1.4,12,1.4L12,1.4z\"\r\n            />\r\n          </svg>\r\n          <div style={{ marginTop: \"-23px\", marginLeft: \"2px\" }}>Cons</div>\r\n          <svg\r\n            width=\"19\"\r\n            height=\"19\"\r\n            style={{ marginLeft: \"170px\", marginTop: \"-19px\" }}\r\n          >\r\n            <path\r\n              d=\"M8,1.6C8,1.6,8,1.6,8,1.6L8,0C3.6,0,0,3.6,0,8h1.6C1.6,4.5,4.5,1.6,8,1.6z\"\r\n              style={{\r\n                fill: \"#ca6061\",\r\n                stroke: \"#ca6061\",\r\n                strokeWidth: \"1\",\r\n              }}\r\n            ></path>\r\n            <path\r\n              d=\"M14.3,8H16c0-4.4-3.6-8-8-8v1.6C11.5,1.6,14.3,4.5,14.3,8z\"\r\n              style={{\r\n                fill: \"#C7611E\",\r\n                stroke: \"#C7611E\",\r\n                strokeWidth: \"1\",\r\n              }}\r\n            ></path>\r\n            <path\r\n              d=\"M8,14.4c-3.5,0-6.4-2.8-6.4-6.4H0c0,4.4,3.6,8,8,8L8,14.4C8,14.4,8,14.4,8,14.4z\"\r\n              style={{\r\n                fill: \"#00AB6E\",\r\n                stroke: \"#00AB6E\",\r\n                strokeWidth: \"1\",\r\n              }}\r\n            ></path>\r\n            <path\r\n              d=\"M14.3,8c0,3.5-2.8,6.4-6.3,6.4V16c4.4,0,8-3.6,8-8H14.3z\"\r\n              style={{\r\n                fill: \"#00a0e2\",\r\n                stroke: \"#00a0e2\",\r\n                strokeWidth: \"1\",\r\n              }}\r\n            ></path>\r\n          </svg>\r\n          <div style={{ marginLeft: \"-383px\", marginTop: \"28px\" }}>\r\n            Circle Packing for Comparing Argumentation\r\n          </div>\r\n        </div>\r\n        <button\r\n          onClick={() => setIsOpen((prev) => !prev)}\r\n          style={{\r\n            marginLeft: \"70px\",\r\n            marginBottom: \"20px\",\r\n            background: \"#9c27b0\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          {isOpen ? \"Hide Script\" : \"View Script\"}\r\n        </button>\r\n      </div>\r\n    </a>\r\n  );\r\n}\r\n","import * as React from \"react\";\n\n//@ts-ignore\nconst BubbleEng = (props) => (\n  <svg\n    id=\"\\uB808\\uC774\\uC5B4_1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 1573 285\"\n    style={{\n      enableBackground: \"new 0 0 1573 285\",\n    }}\n    xmlSpace=\"preserve\"\n    {...props}\n  >\n    <style type=\"text/css\">\n      {\n        \"\\n\\t.st0{fill:#B60C3D;}\\n\\t.st1{fill:#BF6020;}\\n\\t.st2{fill:#040000;}\\n\\t.st3{font-family:'NanumGothicExtraBold';}\\n\\t.st4{font-size:12.7809px;}\\n\\t.st5{fill:#1DA36B;}\\n\\t.st6{fill:#1E96D1;}\\n\\t.st7{font-size:6.3353px;}\\n\\t.st8{font-size:5.7046px;}\\n\\t.st9{font-size:4.6167px;}\\n\\t.st10{font-size:7.5982px;}\\n\\t.st11{enable-background:new    ;}\\n\\t.st12{font-size:6.7403px;}\\n\\t.st13{font-size:6.2021px;}\\n\\t.st14{font-size:5.8242px;}\\n\\t.st15{font-size:7.2994px;}\\n\\t.st16{font-size:7.4762px;}\\n\\t.st17{font-size:12.9225px;}\\n\\t.st18{font-size:7.3925px;}\\n\\t.st19{fill:none;stroke:#7F8080;stroke-miterlimit:10;}\\n\\t.st20{fill:#BF6020;stroke:#FFFFFF;stroke-width:0.5;stroke-miterlimit:10;}\\n\\t.st21{fill:#808080;stroke:#FFFFFF;stroke-width:0.5;stroke-miterlimit:10;}\\n\\t.st22{fill:#AC1D3B;stroke:#FFFFFF;stroke-width:0.5;stroke-miterlimit:10;}\\n\\t.st23{fill:#0CAA6E;stroke:#FFFFFF;stroke-width:0.5;stroke-miterlimit:10;}\\n\\t.st24{fill:#0EA0E2;stroke:#FFFFFF;stroke-width:0.5;stroke-miterlimit:10;}\\n\\t.st25{fill:#B60C3D;stroke:#FFFFFF;stroke-width:0.5;stroke-miterlimit:10;}\\n\\t.st26{fill:#C7621E;stroke:#FFFFFF;stroke-width:0.5;stroke-miterlimit:10;}\\n\\t.st27{fill:#FFFFFF;}\\n\\t.st28{font-size:2.8811px;}\\n\\t.st29{font-size:4.0379px;}\\n\\t.st30{font-size:4.7138px;}\\n\\t.st31{font-size:3.662px;}\\n\\t.st32{font-size:3.9292px;}\\n\\t.st33{font-size:3.9226px;}\\n\\t.st34{font-size:6.7558px;}\\n\\t.st35{font-size:3.1824px;}\\n\\t.st36{font-size:4.0539px;}\\n\\t.st37{font-size:4.0056px;}\\n\\t.st38{font-size:3.1953px;}\\n\\t.st39{font-size:5.1848px;}\\n\\t.st40{font-size:4.4804px;}\\n\\t.st41{font-size:5.6528px;}\\n\\t.st42{font-size:3.6764px;}\\n\\t.st43{font-size:4.2737px;}\\n\\t.st44{font-size:3.7439px;}\\n\\t.st45{font-size:5.0237px;}\\n\\t.st46{font-size:4.9802px;}\\n\\t.st47{font-size:3.6532px;}\\n\\t.st48{font-size:4.0507px;}\\n\\t.st49{font-size:5.2657px;}\\n\\t.st50{font-size:3.8051px;}\\n\\t.st51{font-size:2.9523px;}\\n\\t.st52{font-size:3.61px;}\\n\\t.st53{font-size:5.0326px;}\\n\\t.st54{font-size:5.4363px;}\\n\\t.st55{font-size:5.4767px;}\\n\\t.st56{font-size:4.3419px;}\\n\\t.st57{font-size:4.571px;}\\n\\t.st58{font-size:6.9011px;}\\n\\t.st59{font-size:4.6906px;}\\n\\t.st60{font-size:5.2027px;}\\n\\t.st61{font-size:3.7526px;}\\n\\t.st62{font-size:6.6526px;}\\n\\t.st63{font-size:4.4122px;}\\n\\t.st64{font-size:2.387px;}\\n\\t.st65{font-size:4.5003px;}\\n\\t.st66{font-size:4.0673px;}\\n\\t.st67{font-size:3.5516px;}\\n\\t.st68{font-size:5.9796px;}\\n\\t.st69{font-size:4.3861px;}\\n\\t.st70{font-size:3.2841px;}\\n\\t.st71{font-size:5.3247px;}\\n\\t.st72{font-size:4.816px;}\\n\\t.st73{font-size:4.0142px;}\\n\\t.st74{font-size:5.9726px;}\\n\\t.st75{font-size:3.5419px;}\\n\\t.st76{font-size:2.8976px;}\\n\\t.st77{font-size:1.8507px;}\\n\\t.st78{font-size:3.5163px;}\\n\\t.st79{fill:#0EA0E2;}\\n\\t.st80{font-size:2.9755px;}\\n\\t.st81{font-size:3.926px;}\\n\\t.st82{font-size:3.6233px;}\\n\\t.st83{font-size:2.8035px;}\\n\\t.st84{font-size:3.2972px;}\\n\\t.st85{font-size:2.2108px;}\\n\\t.st86{font-size:5.6086px;}\\n\\t.st87{font-size:3.6784px;}\\n\\t.st88{font-size:3.698px;}\\n\\t.st89{font-size:4.7217px;}\\n\\t.st90{font-size:3.7104px;}\\n\\t.st91{font-size:3.0024px;}\\n\\t.st92{font-size:5.8523px;}\\n\\t.st93{font-size:3.3114px;}\\n\\t.st94{font-size:2.1937px;}\\n\\t.st95{font-size:4.7134px;}\\n\\t.st96{font-size:5.4678px;}\\n\\t.st97{font-size:3.1205px;}\\n\\t.st98{font-size:5.0984px;}\\n\\t.st99{font-size:4.4518px;}\\n\\t.st100{font-size:4.6867px;}\\n\\t.st101{font-size:3.9673px;}\\n\"\n      }\n    </style>\n    <g>\n      <path\n        className=\"st0\"\n        d=\"M197.6,143.8l-19.1,19.1c-3.9,3.9-10.3,3.9-14.2,0l-2.9-2.9c-3.9-3.9-3.9-10.3,0-14.2l19.1-19 c3.9-3.9,10.3-3.9,14.2,0l2.9,2.9C201.6,133.6,201.6,139.9,197.6,143.8z\"\n      />\n      <path\n        className=\"st0\"\n        d=\"M180.5,162.9l-19-19c-3.9-3.9-3.9-10.3,0-14.2l2.9-2.9c3.9-3.9,10.3-3.9,14.2,0l19,19c3.9,3.9,3.9,10.3,0,14.2 l-2.9,2.9C190.8,166.9,184.4,166.9,180.5,162.9z\"\n      />\n    </g>\n    <g>\n      <path\n        className=\"st0\"\n        d=\"M100.1,145.5l-13.8,13.8c-2.8,2.8-7.4,2.8-10.2,0l-2.1-2.1c-2.8-2.8-2.8-7.4,0-10.2l13.8-13.7 c2.8-2.8,7.4-2.8,10.2,0l2.1,2.1C102.9,138.2,102.9,142.7,100.1,145.5z\"\n      />\n      <path\n        className=\"st0\"\n        d=\"M87.8,159.3l-13.7-13.7c-2.8-2.8-2.8-7.4,0-10.2l2.1-2.1c2.8-2.8,7.4-2.8,10.2,0l13.7,13.7 c2.8,2.8,2.8,7.4,0,10.2l-2.1,2.1C95.2,162.1,90.6,162.1,87.8,159.3z\"\n      />\n    </g>\n    <path\n      className=\"st0\"\n      d=\"M323.8,183.3l1.9-1.9c2-2,2-5.3,0-7.3l-4.3-4.3c-2-2-5.3-2-7.3,0l-1.9,1.9l-1.9-1.9c-2-2-5.3-2-7.3,0l-4.3,4.3 c-2,2-2,5.3,0,7.3l1.9,1.9l-1.9,1.9c-2,2-2,5.3,0,7.3l4.3,4.3c2,2,5.3,2,7.3,0l1.9-1.9l1.9,1.9c2,2,5.3,2,7.3,0l4.3-4.3 c2-2,2-5.3,0-7.3L323.8,183.3z\"\n    />\n    <path\n      className=\"st0\"\n      d=\"M409,189.2l1.9-1.9c2.1-2.1,2.1-5.5,0-7.6l-4.5-4.5c-2.1-2.1-5.5-2.1-7.6,0l-1.9,1.9l-1.9-1.9 c-2.1-2.1-5.5-2.1-7.6,0l-4.5,4.5c-2.1,2.1-2.1,5.5,0,7.6l1.9,1.9l-1.9,1.9c-2.1,2.1-2.1,5.5,0,7.6l4.5,4.5c2.1,2.1,5.5,2.1,7.6,0 l1.9-1.9l1.9,1.9c2.1,2.1,5.5,2.1,7.6,0l4.5-4.5c2.1-2.1,2.1-5.5,0-7.6L409,189.2z\"\n    />\n    <path\n      className=\"st0\"\n      d=\"M765.3,156.6l2.2-2.2c2.4-2.4,2.4-6.2,0-8.6l-5.1-5.1c-2.4-2.4-6.2-2.4-8.6,0l-2.2,2.2l-2.2-2.2 c-2.4-2.4-6.2-2.4-8.6,0l-5.1,5.1c-2.4,2.4-2.4,6.2,0,8.6l2.2,2.2l-2.2,2.2c-2.4,2.4-2.4,6.2,0,8.6l5.1,5.1c2.4,2.4,6.2,2.4,8.6,0 l2.2-2.2l2.2,2.2c2.4,2.4,6.2,2.4,8.6,0l5.1-5.1c2.4-2.4,2.4-6.2,0-8.6L765.3,156.6z\"\n    />\n    <path\n      className=\"st0\"\n      d=\"M762.2,190.4l2-2c2.2-2.2,2.2-5.7,0-7.9l-4.7-4.7c-2.2-2.2-5.7-2.2-7.9,0l-2,2l-2-2c-2.2-2.2-5.7-2.2-7.9,0 l-4.7,4.7c-2.2,2.2-2.2,5.7,0,7.9l2,2l-2,2c-2.2,2.2-2.2,5.7,0,7.9l4.7,4.7c2.2,2.2,5.7,2.2,7.9,0l2-2l2,2c2.2,2.2,5.7,2.2,7.9,0 l4.7-4.7c2.2-2.2,2.2-5.7,0-7.9L762.2,190.4z\"\n    />\n    <path\n      className=\"st1\"\n      d=\"M844.6,157.3l1.9-1.9c2-2,2-5.3,0-7.4l-4.4-4.4c-2-2-5.3-2-7.4,0l-1.9,1.9l-1.9-1.9c-2-2-5.3-2-7.4,0l-4.4,4.4 c-2,2-2,5.3,0,7.4l1.9,1.9l-1.9,1.9c-2,2-2,5.3,0,7.4l4.4,4.4c2,2,5.3,2,7.4,0l1.9-1.9l1.9,1.9c2,2,5.3,2,7.4,0l4.4-4.4 c2-2,2-5.3,0-7.4L844.6,157.3z\"\n    />\n    <path\n      className=\"st1\"\n      d=\"M845.8,184.3l1.6-1.6c1.8-1.8,1.8-4.5,0-6.2l-3.6-3.6c-1.8-1.8-4.5-1.8-6.2,0l-1.6,1.6l-1.6-1.6 c-1.8-1.8-4.5-1.8-6.2,0l-3.6,3.6c-1.8,1.8-1.8,4.5,0,6.2l1.6,1.6l-1.6,1.6c-1.8,1.8-1.8,4.5,0,6.2l3.6,3.6c1.8,1.8,4.5,1.8,6.2,0 l1.6-1.6l1.6,1.6c1.8,1.8,4.5,1.8,6.2,0l3.6-3.6c1.8-1.8,1.8-4.5,0-6.2L845.8,184.3z\"\n    />\n    <path\n      className=\"st0\"\n      d=\"M974.4,146.7l1.9-1.9c2.1-2.1,2.1-5.6,0-7.7l-4.6-4.6c-2.1-2.1-5.6-2.1-7.7,0l-1.9,1.9l-1.9-1.9 c-2.1-2.1-5.6-2.1-7.7,0l-4.6,4.6c-2.1,2.1-2.1,5.6,0,7.7l1.9,1.9l-1.9,1.9c-2.1,2.1-2.1,5.6,0,7.7l4.6,4.6c2.1,2.1,5.6,2.1,7.7,0 l1.9-1.9l1.9,1.9c2.1,2.1,5.6,2.1,7.7,0l4.6-4.6c2.1-2.1,2.1-5.6,0-7.7L974.4,146.7z\"\n    />\n    <path\n      className=\"st0\"\n      d=\"M978.3,180.2l2.2-2.2c2.4-2.4,2.4-6.3,0-8.8l-5.2-5.2c-2.4-2.4-6.3-2.4-8.8,0l-2.2,2.2l-2.2-2.2 c-2.4-2.4-6.3-2.4-8.8,0l-5.2,5.2c-2.4,2.4-2.4,6.3,0,8.8l2.2,2.2l-2.2,2.2c-2.4,2.4-2.4,6.3,0,8.8l5.2,5.2c2.4,2.4,6.3,2.4,8.8,0 l2.2-2.2l2.2,2.2c2.4,2.4,6.3,2.4,8.8,0l5.2-5.2c2.4-2.4,2.4-6.3,0-8.8L978.3,180.2z\"\n    />\n    <path\n      className=\"st1\"\n      d=\"M1069.5,139.9l2.2-2.2c2.5-2.5,2.5-6.4,0-8.8l-5.2-5.2c-2.5-2.5-6.4-2.5-8.8,0l-2.2,2.2l-2.2-2.2 c-2.5-2.5-6.4-2.5-8.8,0l-5.2,5.2c-2.5,2.5-2.5,6.4,0,8.8l2.2,2.2l-2.2,2.2c-2.5,2.5-2.5,6.4,0,8.8l5.2,5.2c2.5,2.5,6.4,2.5,8.8,0 l2.2-2.2l2.2,2.2c2.5,2.5,6.4,2.5,8.8,0l5.2-5.2c2.5-2.5,2.5-6.4,0-8.8L1069.5,139.9z\"\n    />\n    <path\n      className=\"st1\"\n      d=\"M1047.6,200.1l2.2-2.2c2.4-2.4,2.4-6.3,0-8.8l-5.2-5.2c-2.4-2.4-6.3-2.4-8.8,0l-2.2,2.2l-2.2-2.2 c-2.4-2.4-6.3-2.4-8.8,0l-5.2,5.2c-2.4,2.4-2.4,6.3,0,8.8l2.2,2.2l-2.2,2.2c-2.4,2.4-2.4,6.3,0,8.8l5.2,5.2c2.4,2.4,6.3,2.4,8.8,0 l2.2-2.2l2.2,2.2c2.4,2.4,6.3,2.4,8.8,0l5.2-5.2c2.4-2.4,2.4-6.3,0-8.8L1047.6,200.1z\"\n    />\n    <path\n      className=\"st0\"\n      d=\"M1206.5,185.2l2.1-2.1c2.4-2.4,2.4-6.1,0-8.5l-5-5c-2.4-2.4-6.1-2.4-8.5,0l-2.1,2.1l-2.1-2.1 c-2.4-2.4-6.1-2.4-8.5,0l-5,5c-2.4,2.4-2.4,6.1,0,8.5l2.1,2.1l-2.1,2.1c-2.4,2.4-2.4,6.1,0,8.5l5,5c2.4,2.4,6.1,2.4,8.5,0l2.1-2.1 l2.1,2.1c2.4,2.4,6.1,2.4,8.5,0l5-5c2.4-2.4,2.4-6.1,0-8.5L1206.5,185.2z\"\n    />\n    <path\n      className=\"st0\"\n      d=\"M1211.1,153.7l1.9-1.9c2.1-2.1,2.1-5.5,0-7.7l-4.5-4.5c-2.1-2.1-5.5-2.1-7.7,0l-1.9,1.9l-1.9-1.9 c-2.1-2.1-5.5-2.1-7.7,0l-4.5,4.5c-2.1,2.1-2.1,5.5,0,7.7l1.9,1.9l-1.9,1.9c-2.1,2.1-2.1,5.5,0,7.7l4.5,4.5c2.1,2.1,5.5,2.1,7.7,0 l1.9-1.9l1.9,1.9c2.1,2.1,5.5,2.1,7.7,0l4.5-4.5c2.1-2.1,2.1-5.5,0-7.7L1211.1,153.7z\"\n    />\n    <path\n      className=\"st1\"\n      d=\"M1294.1,180.5l2.2-2.2c2.5-2.5,2.5-6.4,0-8.8l-5.2-5.2c-2.5-2.5-6.4-2.5-8.8,0l-2.2,2.2l-2.2-2.2 c-2.5-2.5-6.4-2.5-8.8,0l-5.2,5.2c-2.5,2.5-2.5,6.4,0,8.8l2.2,2.2l-2.2,2.2c-2.5,2.5-2.5,6.4,0,8.8l5.2,5.2c2.5,2.5,6.4,2.5,8.8,0 l2.2-2.2l2.2,2.2c2.5,2.5,6.4,2.5,8.8,0l5.2-5.2c2.5-2.5,2.5-6.4,0-8.8L1294.1,180.5z\"\n    />\n    <path\n      className=\"st0\"\n      d=\"M1547.1,179.6l2.5-2.5c2.7-2.7,2.7-7.2,0-9.9l-5.8-5.8c-2.7-2.7-7.2-2.7-9.9,0l-2.5,2.5l-2.5-2.5 c-2.7-2.7-7.2-2.7-9.9,0l-5.8,5.8c-2.7,2.7-2.7,7.2,0,9.9l2.5,2.5l-2.5,2.5c-2.7,2.7-2.7,7.2,0,9.9l5.8,5.8c2.7,2.7,7.2,2.7,9.9,0 l2.5-2.5l2.5,2.5c2.7,2.7,7.2,2.7,9.9,0l5.8-5.8c2.7-2.7,2.7-7.2,0-9.9L1547.1,179.6z\"\n    />\n    <path\n      className=\"st0\"\n      d=\"M1444,171.6l1.9-1.9c2.1-2.1,2.1-5.5,0-7.7l-4.5-4.5c-2.1-2.1-5.5-2.1-7.7,0l-1.9,1.9l-1.9-1.9 c-2.1-2.1-5.5-2.1-7.7,0l-4.5,4.5c-2.1,2.1-2.1,5.5,0,7.7l1.9,1.9l-1.9,1.9c-2.1,2.1-2.1,5.5,0,7.7l4.5,4.5c2.1,2.1,5.5,2.1,7.7,0 l1.9-1.9l1.9,1.9c2.1,2.1,5.5,2.1,7.7,0l4.5-4.5c2.1-2.1,2.1-5.5,0-7.7L1444,171.6z\"\n    />\n    <path\n      className=\"st1\"\n      d=\"M1431.6,138.7l2.1-2.1c2.3-2.3,2.3-6.1,0-8.4l-5-5c-2.3-2.3-6.1-2.3-8.4,0l-2.1,2.1l-2.1-2.1 c-2.3-2.3-6.1-2.3-8.4,0l-5,5c-2.3,2.3-2.3,6.1,0,8.4l2.1,2.1l-2.1,2.1c-2.3,2.3-2.3,6.1,0,8.4l5,5c2.3,2.3,6.1,2.3,8.4,0l2.1-2.1 l2.1,2.1c2.3,2.3,6.1,2.3,8.4,0l5-5c2.3-2.3,2.3-6.1,0-8.4L1431.6,138.7z\"\n    />\n    <path\n      className=\"st1\"\n      d=\"M1542.2,141.3l2.3-2.3c2.5-2.5,2.5-6.6,0-9.1l-5.4-5.4c-2.5-2.5-6.6-2.5-9.1,0l-2.3,2.3l-2.3-2.3 c-2.5-2.5-6.6-2.5-9.1,0l-5.4,5.4c-2.5,2.5-2.5,6.6,0,9.1l2.3,2.3l-2.3,2.3c-2.5,2.5-2.5,6.6,0,9.1l5.4,5.4c2.5,2.5,6.6,2.5,9.1,0 l2.3-2.3l2.3,2.3c2.5,2.5,6.6,2.5,9.1,0l5.4-5.4c2.5-2.5,2.5-6.6,0-9.1L1542.2,141.3z\"\n    />\n    <path\n      className=\"st0\"\n      d=\"M655.7,169.8l1.9-1.9c2.1-2.1,2.1-5.5,0-7.7l-4.5-4.5c-2.1-2.1-5.5-2.1-7.7,0l-1.9,1.9l-1.9-1.9 c-2.1-2.1-5.5-2.1-7.7,0l-4.5,4.5c-2.1,2.1-2.1,5.5,0,7.7l1.9,1.9l-1.9,1.9c-2.1,2.1-2.1,5.5,0,7.7l4.5,4.5c2.1,2.1,5.5,2.1,7.7,0 l1.9-1.9l1.9,1.9c2.1,2.1,5.5,2.1,7.7,0l4.5-4.5c2.1-2.1,2.1-5.5,0-7.7L655.7,169.8z\"\n    />\n    <path\n      className=\"st0\"\n      d=\"M634.2,205.9l1.7-1.7c1.8-1.8,1.8-4.8,0-6.5l-3.8-3.8c-1.8-1.8-4.8-1.8-6.5,0l-1.7,1.7l-1.7-1.7 c-1.8-1.8-4.8-1.8-6.5,0l-3.8,3.8c-1.8,1.8-1.8,4.8,0,6.5l1.6,1.7l-1.7,1.7c-1.8,1.8-1.8,4.8,0,6.5l3.8,3.8c1.8,1.8,4.8,1.8,6.5,0 l1.7-1.7l1.7,1.7c1.8,1.8,4.8,1.8,6.5,0l3.8-3.8c1.8-1.8,1.8-4.8,0-6.5L634.2,205.9z\"\n    />\n    <path\n      className=\"st0\"\n      d=\"M643.9,139.5l1.8-1.8c2-2,2-5.1,0-6.9l-4.1-4.1c-2-2-5.1-2-6.9,0l-1.8,1.8l-1.8-1.8c-2-2-5.1-2-6.9,0l-4.1,4.1 c-2,2-2,5.1,0,6.9l1.8,1.8l-1.8,1.8c-2,2-2,5.1,0,6.9l4.1,4.1c2,2,5.1,2,6.9,0l1.8-1.8l1.8,1.8c2,2,5.1,2,6.9,0l4.1-4.1 c2-2,2-5.1,0-6.9L643.9,139.5z\"\n    />\n    <g>\n      <path\n        className=\"st0\"\n        d=\"M625.4,166.6l-25.1,25.1c-3.3,3.3-8.7,3.3-12,0l-7.1-7.1c-3.3-3.3-3.3-8.7,0-12l25.1-25.1 c3.3-3.3,8.7-3.3,12,0l7.1,7.1C628.8,157.9,628.8,163.3,625.4,166.6z\"\n      />\n      <path\n        className=\"st0\"\n        d=\"M606.4,191.7l-25.1-25.1c-3.3-3.3-3.3-8.7,0-12l7.1-7.1c3.3-3.3,8.7-3.3,12,0l25.1,25.1c3.3,3.3,3.3,8.7,0,12 l-7.1,7.1C615.1,195,609.7,195,606.4,191.7z\"\n      />\n    </g>\n    <g>\n      <text transform=\"matrix(1 0 0 1 262.8162 48.8466)\">\n        <tspan x={0} y={0} className=\"st2 st3 st4\">\n          {\"The population cliff and \"}\n        </tspan>\n        <tspan x={13.8} y={15.3} className=\"st2 st3 st4\">\n          {\"its impact on AVMS\"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(1 0 0 1 479.1984 35.9424)\">\n        <tspan x={0} y={0} className=\"st2 st3 st4\">\n          {\"All volunteer military system, \"}\n        </tspan>\n        <tspan x={7.8} y={15.3} className=\"st2 st3 st4\">\n          {\"a solution to recruitment? \"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(1 0 0 1 721.6332 62.1822)\">\n        <tspan x={0} y={0} className=\"st2 st3 st4\">\n          {\"AVMS, a solution \"}\n        </tspan>\n        <tspan x={-8.7} y={15.3} className=\"st2 st3 st4\">\n          {\"to the jobs problem?\"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(1 0 0 1 1372.6604 21.0157)\">\n        <tspan x={0} y={0} className=\"st2 st3 st4\">\n          {\"Defense budget issues and \"}\n        </tspan>\n        <tspan x={19.1} y={15.3} className=\"st2 st3 st4\">\n          {\"conclusion of debate\"}\n        </tspan>\n      </text>\n    </g>\n    <circle className=\"st5\" cx={272.3} cy={143.2} r={11.9} />\n    <circle className=\"st6\" cx={365.3} cy={193.8} r={16.2} />\n    <circle className=\"st6\" cx={353.1} cy={155.7} r={13.9} />\n    <g>\n      <text transform=\"matrix(1 0 0 1 280.4749 106.406)\">\n        <tspan x={0} y={0} className=\"st2 st3 st7\">\n          {\"Population cliff, \"}\n        </tspan>\n        <tspan x={10.8} y={7.6} className=\"st2 st3 st7\">\n          {\"is AVMS \"}\n        </tspan>\n        <tspan x={5.1} y={15.2} className=\"st2 st3 st7\">\n          {\"the answer? \"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(1 0 0 1 345.8731 116.4646)\">\n        <tspan x={0} y={0} className=\"st2 st3 st8\">\n          {\"Recruitment Problem, \"}\n        </tspan>\n        <tspan x={1} y={6.8} className=\"st2 st3 st8\">\n          {\"What's the Solution? \"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(1 0 0 1 480.7392 115.3582)\">\n        <tspan x={0} y={0} className=\"st2 st3 st8\">\n          {\"Recruitment Problem, \"}\n        </tspan>\n        <tspan x={1} y={6.8} className=\"st2 st3 st8\">\n          {\"What's the Solution? \"}\n        </tspan>\n      </text>\n    </g>\n    <ellipse\n      transform=\"matrix(0.1602 -0.9871 0.9871 0.1602 47.7094 436.096)\"\n      className=\"st5\"\n      cx={280.1}\n      cy={190}\n      rx={17.8}\n      ry={17.8}\n    />\n    <text\n      transform=\"matrix(-1 0 0 1 617.5837 189.815)\"\n      className=\"st2 st3 st9\"\n    />\n    <ellipse className=\"st6\" cx={571.6} cy={142} rx={15.2} ry={15.5} />\n    <ellipse className=\"st6\" cx={576.5} cy={201.2} rx={14.9} ry={15} />\n    <text\n      transform=\"matrix(1 0 0 1 572.7857 106.0461)\"\n      className=\"st2 st3 st10\"\n    >\n      {\"Is AVMS realistic?\"}\n    </text>\n    <circle className=\"st5\" cx={561.4} cy={170.6} r={15.2} />\n    <text transform=\"matrix(1 0 0 1 726.8564 117.8112)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st2 st3 st12\">\n        {\"Can it \"}\n      </tspan>\n      <tspan x={-11.7} y={8.1} className=\"st2 st3 st12\">\n        {\"provide jobs? \"}\n      </tspan>\n    </text>\n    <circle className=\"st6\" cx={716.4} cy={187.7} r={14.7} />\n    <circle className=\"st6\" cx={717.6} cy={156.2} r={16.8} />\n    <circle className=\"st5\" cx={804.5} cy={149.7} r={13.7} />\n    <circle className=\"st5\" cx={793.6} cy={175.8} r={14.6} />\n    <text transform=\"matrix(1 0 0 1 773.56 121.8814)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st2 st3 st12\">\n        {\"What is the current \"}\n      </tspan>\n      <tspan x={6.3} y={8.1} className=\"st2 st3 st12\">\n        {\"soldier's status?\"}\n      </tspan>\n    </text>\n    <g>\n      <text transform=\"matrix(1 0 0 1 903.8365 32.2301)\">\n        <tspan x={0} y={0} className=\"st2 st3 st4\">\n          {\"AVMS, quality improvement, \"}\n        </tspan>\n        <tspan x={23.4} y={15.3} className=\"st2 st3 st4\">\n          {\"and cadre retention? \"}\n        </tspan>\n      </text>\n    </g>\n    <circle className=\"st5\" cx={912.5} cy={184.1} r={16} />\n    <circle className=\"st5\" cx={912.5} cy={150.6} r={17.7} />\n    <circle className=\"st6\" cx={1006.3} cy={176.7} r={16.7} />\n    <circle className=\"st5\" cx={1018.4} cy={143.2} r={19.4} />\n    <text transform=\"matrix(1 0 0 1 914.2245 107.2779)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st2 st3 st13\">\n        {\"AVMS, the potential for \"}\n      </tspan>\n      <tspan x={2.9} y={7.4} className=\"st2 st3 st13\">\n        {\"quality improvement? \"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1001.3743 98.6051)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st2 st3 st14\">\n        {\"How do you plan to \"}\n      </tspan>\n      <tspan x={-14.4} y={7} className=\"st2 st3 st14\">\n        {\"manage the cadre in the event \"}\n      </tspan>\n      <tspan x={-6.6} y={14} className=\"st2 st3 st14\">\n        {\"of a transition to AVMS? \"}\n      </tspan>\n    </text>\n    <g>\n      <text transform=\"matrix(1 0 0 1 1159.8271 55.6258)\">\n        <tspan x={0} y={0} className=\"st2 st3 st4\">\n          {\"Female conscription \"}\n        </tspan>\n        <tspan x={15.5} y={15.3} className=\"st2 st3 st4\">\n          {\"and pay system\"}\n        </tspan>\n      </text>\n    </g>\n    <circle className=\"st5\" cx={1245.9} cy={185.2} r={16.6} />\n    <text transform=\"matrix(1 0 0 1 1175.6882 113.6726)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st2 st3 st15\">\n        {\"What is the current situation \"}\n      </tspan>\n      <tspan x={0} y={8.8} className=\"st2 st3 st15\">\n        {\"and how to recruit women?\"}\n      </tspan>\n    </text>\n    <circle className=\"st5\" cx={1246} cy={153.7} r={15} />\n    <circle className=\"st6\" cx={1164.5} cy={154.1} r={19.4} />\n    <circle className=\"st5\" cx={1380.8} cy={138.6} r={20.6} />\n    <circle className=\"st6\" cx={1487.3} cy={138.7} r={22.3} />\n    <circle className=\"st5\" cx={1470.7} cy={176.1} r={18.4} />\n    <text\n      transform=\"matrix(1 0 0 1 1464.5109 103.1519)\"\n      className=\"st2 st3 st16\"\n    >\n      {\"Concluding remarks\"}\n    </text>\n    <text transform=\"matrix(1 0 0 1 1372.9427 98.6051)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st2 st3 st16\">\n        {\"Adjusting the military \"}\n      </tspan>\n      <tspan x={6.6} y={9} className=\"st2 st3 st16\">\n        {\"budget for AVMS \"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 15.3472 36.8976)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st2 st3 st17\">\n        {\"Start the discussion and introduce \"}\n      </tspan>\n      <tspan x={-2.7} y={15.5} className=\"st2 st3 st17\">\n        {\"all volunteer military system(AVMS)\"}\n      </tspan>\n    </text>\n    <circle className=\"st5\" cx={140.1} cy={149.4} r={18.3} />\n    <circle className=\"st5\" cx={136.8} cy={183.4} r={15.8} />\n    <text transform=\"matrix(1 0 0 1 57.0709 106.8606)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st2 st3 st18\">\n        {\"Current \"}\n      </tspan>\n      <tspan x={-12.1} y={8.9} className=\"st2 st3 st18\">\n        {\"Social Situation\"}\n      </tspan>\n    </text>\n    <circle className=\"st19\" cx={68.9} cy={166.3} r={46.5} />\n    <text transform=\"matrix(1 0 0 1 151.3516 104.0154)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st2 st3 st18\">\n        {\"Current \"}\n      </tspan>\n      <tspan x={-14.9} y={8.9} className=\"st2 st3 st18\">\n        {\"Military Situation\"}\n      </tspan>\n    </text>\n    <circle className=\"st6\" cx={49.2} cy={186.3} r={15.5} />\n    <circle className=\"st6\" cx={55.7} cy={138.2} r={12} />\n    <g>\n      <path\n        className=\"st20\"\n        d=\"M118.3,69.2v-7.3c-25.4,0-47.5,8.1-67,24.3l4.7,5.6C74.1,76.7,94.8,69.2,118.3,69.2z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M41,107.8c4.5-6,9.3-11,15.1-15.9l0,0l-4.7-5.6c-6.3,5.2-11.4,10.7-16.3,17.1L41,107.8L41,107.8z\"\n      />\n      <path\n        className=\"st22\"\n        d=\"M26.8,134.6c3.5-10.3,7.6-18.1,14.2-26.7l-5.8-4.4c-7.1,9.3-11.5,17.7-15.4,28.8L26.8,134.6L26.8,134.6z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M25.7,194.4c-6.1-20.2-5.8-39.9,1-59.9l-6.9-2.4c-7.4,21.5-7.7,42.6-1.1,64.4L25.7,194.4L25.7,194.4z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M29.8,205.6c-1.8-4-2.8-6.9-4.1-11l-6.9,2.2c1.4,4.5,2.5,7.6,4.4,11.9L29.8,205.6L29.8,205.6z\"\n      />\n      <path\n        className=\"st22\"\n        d=\"M54.7,239.2c-10.8-9.4-19.1-20.6-24.9-33.7l-6.7,3c6.3,14.1,15.1,26.2,26.8,36.3L54.7,239.2L54.7,239.2z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M88.4,258.3c-13-4.3-23.3-10.1-33.7-19.1l-4.8,5.5c11,9.7,22.2,15.9,36.2,20.5L88.4,258.3L88.4,258.3z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M96.5,260.5c-3.2-0.7-5-1.3-8.2-2.3l-2.3,6.9c3.3,1.1,5.3,1.6,8.8,2.4L96.5,260.5L96.5,260.5z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M96.5,260.5l-1.6,7.2c12.2,2.8,23.7,3.4,36.2,1.9l-0.9-7.3C118.5,263.7,107.8,263.1,96.5,260.5z\"\n      />\n      <path\n        className=\"st22\"\n        d=\"M136.8,261.3c-2.5,0.5-4.2,0.8-6.7,1l0,0l0.9,7.3c2.7-0.3,4.5-0.6,7.2-1.1L136.8,261.3L136.8,261.3z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M136.8,261.3l1.4,7.2c4.3-0.8,8.1-1.8,12.3-3.2l-2.3-6.9C144.3,259.6,140.8,260.5,136.8,261.3z\"\n      />\n      <path\n        className=\"st22\"\n        d=\"M194.6,225.8c-12.3,15.7-27.3,26.3-46.4,32.5l0,0l2.3,6.9c20.5-6.6,36.6-18,49.9-34.9L194.6,225.8 L194.6,225.8z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M194.6,225.8l5.8,4.4c1.3-1.6,2-2.7,3.3-4.4l-6-4.2C196.6,223.3,195.9,224.2,194.6,225.8z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M214.9,174.5c-1.6,18-6.8,32.3-17.2,47.2l0,0l6,4.2c11.1-15.9,16.7-31.3,18.4-50.7L214.9,174.5L214.9,174.5z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M222.3,158.8l-7.3,0.5l0,0c0.3,4.9,0.3,10.3-0.1,15.2l7.3,0.7C222.6,170,222.6,164.1,222.3,158.8z\"\n      />\n      <path\n        className=\"st20\"\n        d=\"M215,159.4l7.3-0.5c-1.4-19.2-6.8-35-17.5-51l-6,4.1C208.6,126.8,213.7,141.4,215,159.4z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M198.6,111.9L198.6,111.9l6-4.1c-1.6-2.4-2.5-3.6-4.3-5.9l-5.8,4.4C196.2,108.6,197.1,109.7,198.6,111.9z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M194.6,106.4L194.6,106.4l5.8-4.4c-9.7-12.4-20.8-21.6-34.8-28.7l-3.3,6.5C175.3,86.4,185.6,94.9,194.6,106.4 z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M162.3,79.8L162.3,79.8l3.3-6.5c-15.6-8-29.8-11.4-47.3-11.4v7.3C134.7,69.2,147.8,72.4,162.3,79.8z\"\n      />\n    </g>\n    <g>\n      <path\n        className=\"st23\"\n        d=\"M335,81.2L335,81.2V74c-19.8,0-37.7,5.6-54,17l4,5.8C300.2,86.4,316.6,81.2,335,81.2z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M284.7,97.1c0.1-0.1,0.2-0.1,0.3-0.2l-4-5.8c-7.9,5.5-14.3,11.6-20.2,19.2l5.5,4.3 C271.7,107.6,277.5,102.1,284.7,97.1z\"\n      />\n      <path\n        className=\"st20\"\n        d=\"M265.9,114.8c0.1-0.1,0.2-0.3,0.3-0.4l-5.5-4.3c-10.7,13.7-16.6,27.7-19.1,44.8l6.6,0.9 C250.7,140.2,256.2,127.4,265.9,114.8z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M248.3,156.5c0-0.2,0.1-0.4,0.1-0.6l-6.6-0.9c-0.9,6.6-1.1,11.4-0.8,18l6.5-0.3 C247.3,166.9,247.5,162.4,248.3,156.5z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M247.6,173.3c0-0.2,0-0.4,0-0.6L241,173c0.4,8.4,1.9,16.2,4.5,24.2l6.1-2C249.2,188,248,180.9,247.6,173.3z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M251.7,195.8c-0.1-0.2-0.1-0.4-0.2-0.6l-6.1,2c1.1,3.3,2.1,6,3.5,9.2l5.8-2.6 C253.6,201.1,252.7,198.7,251.7,195.8z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M254.9,204.3c-0.1-0.2-0.1-0.3-0.2-0.5l-5.8,2.6c6.9,15.7,16.8,27.8,30.7,37.8l3.5-4.9 C270.5,230,261.4,218.7,254.9,204.3z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M283.5,239.6c-0.1-0.1-0.2-0.1-0.3-0.2l-3.5,4.9c2.2,1.6,3.1,2.3,5.5,3.6l3.2-5.1 C286.4,241.5,285.4,240.9,283.5,239.6z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M288.5,243c-0.1-0.1-0.2-0.1-0.3-0.2l-3.2,5.1c2.2,1.3,4.9,2.9,7.2,4l2.7-5.4 C292.9,245.5,290.5,244.2,288.5,243z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M341,256.1c-16.8,1.1-30.9-1.7-45.8-9.3c-0.1,0-0.2-0.1-0.2-0.1l-2.7,5.4c16.1,8.2,31.2,11.3,49.3,10.1 L341,256.1C341.1,256.1,341.1,256.1,341,256.1z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M356.1,253.7c-4.8,1.1-10.1,2.1-15,2.4l0.4,5.9c5.3-0.4,11.1-1.2,16.2-2.6l-1.5-5.8 C356.3,253.7,356.1,253.7,356.1,253.7z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M360.5,252.4c-2,0.6-2.4,0.7-4.3,1.1l1.5,5.8c2.2-0.5,2.6-0.6,4.8-1.3l-1.8-5.7 C360.7,252.4,360.6,252.4,360.5,252.4z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M370.6,248.7c-2.9,1.2-6.7,2.7-9.9,3.7l1.8,5.7c3.3-1,7.6-2.6,10.8-4l-2.5-5.5 C370.7,248.6,370.7,248.7,370.6,248.7z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M403,223.8c-9.2,11.5-18.8,18.8-32.1,24.8l2.5,5.5c14.6-6.5,24.8-14.3,34.8-26.8l-4.8-3.9 C403.2,223.6,403.1,223.7,403,223.8z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M406.6,218.9c-1,1.5-2.2,3.1-3.3,4.5l4.8,3.9c1.3-1.7,2.8-3.5,3.9-5.3l-5.1-3.5 C406.9,218.6,406.8,218.8,406.6,218.9z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M409.1,215.1c-0.9,1.5-1.3,2.1-2.2,3.4l5.1,3.5c1.1-1.7,1.7-2.4,2.7-4.1l-5.3-3.3 C409.3,214.8,409.2,215,409.1,215.1z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M418.7,194.4c-2.3,7.4-5.2,13.8-9.2,20.3l5.3,3.3c4.5-7.2,7.7-14.2,10.2-22.4l-6.1-1.9 C418.8,194,418.7,194.2,418.7,194.4z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M421.4,182.4c-0.6,3.8-1.5,7.6-2.6,11.3l6.1,1.9c1.2-4.3,2.3-8.4,2.9-12.8l-6.4-1 C421.5,182,421.5,182.2,421.4,182.4z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M422,177.9c-0.2,1.6-0.3,2.5-0.5,3.9l6.4,1c0.3-1.9,0.4-3,0.6-4.9l-6.5-0.7C422,177.5,422,177.7,422,177.9z\"\n      />\n      <path\n        className=\"st20\"\n        d=\"M416.5,121.1l-6,3.4c0.1,0.2,0.2,0.3,0.3,0.5c9.5,16.5,13.2,33.4,11.3,52.3l6.5,0.7 C430.7,157.3,426.9,139,416.5,121.1z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M400,110.2c3.9,4.5,7.5,9.2,10.5,14.3l6-3.4c-3.3-5.7-7.2-11-11.6-16l-5.2,4.7 C399.8,110,399.9,110.1,400,110.2z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M381.3,94.5c7.5,4.7,12.5,8.9,18.4,15.3l5.2-4.7c-6.4-7.2-11.9-11.7-20.1-16.8l-3.8,6 C381.1,94.4,381.2,94.5,381.3,94.5z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M381,94.4l3.8-6c-15.8-9.9-31.3-14.3-49.9-14.3v7.3C352.1,81.2,366.5,85.3,381,94.4z\"\n      />\n    </g>\n    <g>\n      <path\n        className=\"st24\"\n        d=\"M534.2,72.9c9.2-2.6,17.8-3.8,27.5-3.8v-7.8c-10.4,0-19.7,1.2-29.7,4.1L534.2,72.9L534.2,72.9z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M534.2,72.9l-2.2-7.5c-9.7,2.8-18.8,6.8-27.4,12.1l4.1,6.6C516.8,79.3,525.2,75.5,534.2,72.9z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M508.7,84.2C508.8,84.1,508.8,84.1,508.7,84.2l-4.1-6.6c-16,10-26.8,21.1-36.2,37.3l6.7,3.8 C483.9,103.6,494,93.4,508.7,84.2z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M475.1,118.9c0-0.1,0.1-0.1,0.1-0.2l-6.7-3.8c-1.2,2.2-2.4,4.4-3.5,6.6l6.9,3.4 C472.9,122.8,473.9,120.8,475.1,118.9z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M471.8,125c0-0.1,0.1-0.1,0.1-0.2l-6.9-3.4c-1.2,2.6-2,4.1-3,6.8l7.2,2.9C470,128.8,470.6,127.3,471.8,125z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M469,131.3c0-0.1,0.1-0.1,0.1-0.2l-7.2-2.9c-0.6,1.6-1.5,3.6-2,5.3l7.4,2.5 C467.7,134.5,468.3,132.8,469,131.3z\"\n      />\n      <path\n        className=\"st20\"\n        d=\"M467.1,136.2c0-0.1,0.1-0.2,0.1-0.2l-7.4-2.5c-0.6,1.8-1.1,3.6-1.7,5.4l7.5,2.1 C466.1,139.4,466.6,137.7,467.1,136.2z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M465.5,141.2c0-0.1,0-0.2,0.1-0.2l-7.5-2.1c-0.6,2.2-0.9,3.2-1.5,5.4l7.6,1.8 C464.7,144.2,465,143.1,465.5,141.2z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M464.2,146.3c0-0.1,0-0.2,0.1-0.3l-7.6-1.8c-0.7,3.3-1.6,7.7-2,11l7.7,0.9 C462.9,153.1,463.5,149.3,464.2,146.3z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M462.4,156.5c0-0.1,0-0.2,0-0.3l-7.7-0.9c-0.4,3.1-0.6,6.2-0.7,9.3l7.7,0.3 C461.8,162.1,462,159.3,462.4,156.5z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M461.7,165.2c0-0.1,0-0.2,0-0.3l-7.7-0.3c-0.1,1.8-0.1,2.1-0.1,3.7h7.7C461.6,167.1,461.7,166.7,461.7,165.2z \"\n      />\n      <path\n        className=\"st21\"\n        d=\"M461.6,168.6c0-0.1,0-0.2,0-0.3h-7.7c0,2.4,0.1,5.1,0.3,7.5l7.6-0.5C461.7,173.2,461.6,170.8,461.6,168.6z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M461.9,175.6c0-0.1,0-0.2,0-0.3l-7.6,0.5c0.1,1.3,0.2,2.4,0.3,3.7l7.6-0.8C462,177.7,462,176.7,461.9,175.6z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M462.2,179.1c0-0.1,0-0.2,0-0.3l-7.6,0.8c0.4,3.6,0.7,5.7,1.3,9.2l7.5-1.5 C462.9,184.3,462.5,182.3,462.2,179.1z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M463.5,187.7c0-0.1,0-0.2-0.1-0.3l-7.5,1.5c0.4,2.2,1.1,5.1,1.7,7.3l7.4-2 C464.5,192.2,463.9,189.6,463.5,187.7z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M465,194.5c0-0.1-0.1-0.2-0.1-0.3l-7.4,2c4.8,17.5,12.9,32,25.3,45.3l5.4-5.1 C476.9,224.1,469.5,210.6,465,194.5z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M488.6,236.6c-0.1-0.1-0.1-0.1-0.2-0.2l-5.4,5.1c2.3,2.4,4.3,4.4,6.7,6.5l5-5.5 C492.4,240.6,490.5,238.7,488.6,236.6z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M494.8,242.7c-0.1-0.1-0.1-0.1-0.2-0.2l-5,5.5c0.9,0.8,0.5,0.4,1.5,1.2l4.9-5.5 C495.3,243.2,495.5,243.4,494.8,242.7z\"\n      />\n      <path\n        className=\"st20\"\n        d=\"M496.1,243.8c-0.1-0.1-0.1-0.1-0.2-0.2l-4.9,5.5c2.7,2.3,5.9,4.9,8.9,6.9l4.3-6 C501.5,248.3,498.5,246,496.1,243.8z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M504.3,250.3c-0.1,0-0.1-0.1-0.2-0.1l-4.3,6c1.5,0.9,1.7,1.1,3.1,2.1l4-6.1 C505.9,251.3,505.6,251.1,504.3,250.3z\"\n      />\n      <path\n        className=\"st20\"\n        d=\"M507.2,252.2c-0.1-0.1-0.1-0.1-0.2-0.1l-4,6.1c7.4,4.8,15.2,8.6,23.6,11.4l2.4-6.8 C521.3,260.1,514.1,256.6,507.2,252.2z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M529.2,262.9c-0.1,0-0.1,0-0.2-0.1l-2.4,6.8c18.7,6.3,36.3,7.6,55.6,3.8l-1.3-7.1 C562.9,270,546.5,268.8,529.2,262.9z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M604.1,259c-8,3.7-14.5,5.8-23.2,7.5c0,0,0,0-0.1,0l1.3,7.1c9.3-1.8,16.4-4,25-8.1L604.1,259 C604.2,259,604.2,259,604.1,259z\"\n      />\n      <path\n        className=\"st20\"\n        d=\"M639.7,231.4c-10.1,12.3-21.1,20.8-35.5,27.6l3,6.5c15.6-7.2,27.4-16.4,38.2-29.7l-5.6-4.6 C639.8,231.3,639.7,231.3,639.7,231.4z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M649.4,217c-2.9,5.3-5.8,9.5-9.6,14.3l5.6,4.6c4.1-5.1,7.3-9.7,10.5-15.5l-6.4-3.5 C649.5,216.9,649.4,216.9,649.4,217z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M658.1,196.1c-2.1,7.4-4.9,14-8.6,20.6l6.4,3.5c4-7.3,7.1-14.4,9.3-22.4l-7.1-2 C658.1,195.9,658.1,196,658.1,196.1z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M660.1,187.7c-0.6,3.1-1.1,5.2-2,8.2l7.1,2c0.9-3.3,1.6-5.7,2.2-9.1l-7.3-1.3 C660.2,187.5,660.2,187.6,660.1,187.7z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M665.7,140.7l-7.3,2c0,0.1,0.1,0.2,0.1,0.3c4,15,4.6,29.2,1.7,44.5l7.3,1.3 C670.7,172.3,670,156.8,665.7,140.7z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M656.5,136.2c0.7,2.3,1.3,4,2,6.3l7.3-2c-0.7-2.6-1.3-4.7-2.2-7.2l-7.2,2.5 C656.5,136.1,656.5,136.1,656.5,136.2z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M654,129.8c0.9,2.1,1.7,4,2.4,6.2l7.2-2.5c-0.8-2.4-1.7-4.7-2.7-6.9l-6.9,2.9 C653.9,129.6,654,129.7,654,129.8z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M626.2,92.3c12.7,10.6,21.2,22,27.7,37.1l6.9-2.9c-6.9-16.4-16.2-28.7-29.9-40.2l-5,5.9 C626.1,92.2,626.1,92.3,626.2,92.3z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M614.9,84.2c4,2.5,7.5,5,11.1,8l5-5.9c-4-3.3-7.7-6-12.1-8.8l-4.1,6.5C614.8,84.1,614.8,84.1,614.9,84.2z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M610.4,81.5c1.7,0.9,2.7,1.6,4.3,2.5l4.1-6.5c-1.9-1.1-2.9-1.8-4.9-2.8l-3.7,6.7 C610.2,81.4,610.3,81.5,610.4,81.5z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M601,77c2.9,1.2,6.4,2.9,9.2,4.5l3.7-6.7c-3-1.7-6.9-3.5-10.2-4.9l-3,7.2C600.8,76.9,600.9,77,601,77z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M561.8,69.1c14.6,0,25.5,2.2,38.9,7.9l3-7.2c-14.5-6.1-26.2-8.5-42.1-8.5v7.8 C561.8,69.1,561.8,69.1,561.8,69.1z\"\n      />\n    </g>\n    <g>\n      <path\n        className=\"st25\"\n        d=\"M731.4,103.8c13.4-8.7,27.3-12.9,43.2-12.9v-5.9c-17.2,0-32.1,4.5-46.6,13.8L731.4,103.8 C731.4,103.9,731.4,103.8,731.4,103.8z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M705.1,131.9c6.4-11.6,15-20.8,26.1-28.1l-3.2-5c-11.9,7.8-21.3,17.7-28.2,30.3L705.1,131.9 C705.1,132,705.1,132,705.1,131.9z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M703.9,134.4c0.6-1.1,0.7-1.3,1.2-2.4l-5.3-2.9c-0.6,1.2-0.8,1.5-1.5,2.6L703.9,134.4 C703.8,134.4,703.9,134.4,703.9,134.4z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M697.6,189.7c-4.8-19-2.6-37.7,6.3-55.3l-5.4-2.7c-9.5,18.8-11.9,39-6.7,59.4L697.6,189.7L697.6,189.7z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M699.5,196.3c-0.8-2.3-1.3-4.3-2-6.6l-5.8,1.5c0.6,2.6,1.2,4.7,2.1,7.2L699.5,196.3L699.5,196.3z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M699.5,196.3l-5.7,2c6.7,19.5,18,33.7,35.5,44.6l3.2-5.1C716.3,227.8,705.8,214.5,699.5,196.3z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M732.5,237.9L732.5,237.9l-3.2,5.1c6.5,4.1,12.9,6.9,20.3,9.2l1.8-5.7C744.5,244.3,738.6,241.7,732.5,237.9z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M751.4,246.5L751.4,246.5l-1.8,5.7c3.6,1.1,6.4,1.8,10.2,2.4l1-5.9C757.4,248.1,754.7,247.5,751.4,246.5z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M760.8,248.7L760.8,248.7l-1,5.9c3.4,0.6,6.8,1,10.4,1.1l0.3-6C767.2,249.6,764,249.3,760.8,248.7z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M770.5,249.8L770.5,249.8l-0.3,6c6,0.3,10.5,0.1,16.4-0.7l-0.8-5.9C780.1,249.9,776.1,250.2,770.5,249.8z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M785.7,249.2L785.7,249.2l0.8,5.9c1.9-0.3,4-0.6,5.9-1l-1.2-5.9C789.4,248.6,787.4,248.9,785.7,249.2z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M791.2,248.2C791.1,248.2,791.1,248.2,791.2,248.2l1.2,5.9c1.3-0.3,1.6-0.3,2.9-0.6l-1.5-5.8 C792.7,247.9,792.3,248,791.2,248.2z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M793.9,247.6C793.8,247.6,793.8,247.6,793.9,247.6l1.3,5.8c3.3-0.8,6.7-2,10-3.1l-2.2-5.6 C800.1,245.8,796.9,246.8,793.9,247.6z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M803.1,244.7C803.1,244.7,803,244.7,803.1,244.7l2.1,5.6c2.1-0.8,3.5-1.5,5.5-2.3l-2.5-5.4 C806.3,243.4,805,243.9,803.1,244.7z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M808.2,242.5L808.2,242.5l2.5,5.4c2-0.9,3.4-1.7,5.3-2.7l-2.9-5.2C811.3,241,810,241.7,808.2,242.5z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M813.2,240C813.2,240,813.1,240,813.2,240l2.9,5.3c1.3-0.7,2.6-1.5,3.8-2.3l-3.2-5.1 C815.5,238.6,814.3,239.4,813.2,240z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M816.7,237.9L816.7,237.9l3.1,5.1c3.5-2.2,6.4-4.4,9.6-7.1l-3.8-4.6C822.7,233.9,820,235.8,816.7,237.9z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M825.7,231.4C825.7,231.4,825.6,231.4,825.7,231.4l3.8,4.6c6.6-5.6,12-11.6,16.7-18.9l-5-3.2 C836.8,220.6,832,226.2,825.7,231.4z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M841.3,213.8L841.3,213.8l5,3.3c5.1-7.8,8.5-15.5,10.9-24.4l-5.7-1.6C849.2,199.4,846,206.5,841.3,213.8z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M851.3,191L851.3,191l5.7,1.6c1.9-6.9,2.8-13.4,2.9-20.6l-5.9-0.1C853.9,178.6,853.1,184.6,851.3,191z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M858.4,154.2l-5.8,1.1c1.1,5.8,1.6,10.7,1.5,16.5l0,0l5.9,0.1C860.2,165.7,859.6,160.5,858.4,154.2z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M842,128.4c5.4,8.7,8.6,16.9,10.6,27l0,0l5.8-1.1c-2.1-10.9-5.6-19.6-11.4-28.9L842,128.4L842,128.4z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M823.6,107.9c7.9,6.1,13.2,12,18.5,20.5l5-3.1c-5.7-9.1-11.4-15.5-19.8-22.1L823.6,107.9L823.6,107.9z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M774.6,91.1c18.6,0,34.2,5.4,48.9,16.8l3.6-4.7c-15.8-12.3-32.6-18.1-52.6-18.1V91.1L774.6,91.1z\"\n      />\n    </g>\n    <g>\n      <path\n        className=\"st26\"\n        d=\"M959.5,69c10.1-3.2,20.6-5,31.2-5l0,0v-7.6c-11.3,0-22.8,1.8-33.6,5.3L959.5,69L959.5,69z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M954.5,70.8c1.9-0.7,3.1-1.1,5-1.8l-2.3-7.2c-2.1,0.6-3.3,1.1-5.4,1.9L954.5,70.8L954.5,70.8z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M938.7,78.5c5.3-3.2,10.1-5.5,15.9-7.7l-2.7-7.1c-6.2,2.4-11.3,4.9-17,8.3L938.7,78.5L938.7,78.5z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M931.3,83.4c2.6-1.9,4.6-3.2,7.4-4.9l-3.8-6.4c-3,1.8-5.1,3.2-7.9,5.2L931.3,83.4L931.3,83.4z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M906,110.1c6.9-10.8,14.9-19.2,25.3-26.8l-4.5-6.1c-11.2,8.1-19.7,17.1-27.3,28.7L906,110.1 C905.9,110.2,905.9,110.1,906,110.1z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M903.2,114.6c0.8-1.5,1.9-3.1,2.7-4.5l-6.3-4.1c-0.9,1.6-2.1,3.3-3,4.9L903.2,114.6L903.2,114.6z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M894.6,133.9c2.4-7.3,4.8-12.8,8.6-19.3l-6.5-3.7c-4,7.1-6.7,13-9.2,20.7L894.6,133.9L894.6,133.9z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M893.6,137.3c0.3-1.1,0.6-2.2,1-3.3l-7.2-2.4c-0.4,1.2-0.7,2.4-1.1,3.6L893.6,137.3L893.6,137.3z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M889.8,159.8c0.4-8,1.6-14.8,3.7-22.5l-7.3-2.1c-2.4,8.3-3.6,15.7-4,24.3L889.8,159.8 C889.8,159.9,889.8,159.8,889.8,159.8z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M889.8,170.4c-0.2-3.6-0.2-6.9,0-10.5l-7.6-0.4c-0.2,3.9-0.2,7.5,0,11.4L889.8,170.4 C889.8,170.5,889.8,170.5,889.8,170.4z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M890.2,175.7c-0.2-2.2-0.3-3.1-0.4-5.2l-7.6,0.4c0.1,2.4,0.2,3.3,0.4,5.7L890.2,175.7 C890.2,175.8,890.2,175.7,890.2,175.7z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M890.9,181c-0.3-1.7-0.5-3.5-0.7-5.2l-7.6,0.8c0.2,1.9,0.4,3.8,0.7,5.6L890.9,181L890.9,181z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M900.6,211.1c-5-9.7-8.1-19.2-9.7-30l-7.5,1.1c1.9,11.7,5.2,21.8,10.5,32.4L900.6,211.1 C900.7,211.1,900.7,211.1,900.6,211.1z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M916.8,234.1c-6.9-7.5-11.5-14-16.1-23l-6.7,3.4c5,9.7,9.9,16.8,17.3,24.8L916.8,234.1L916.8,234.1z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M921.8,239.1c-1.7-1.6-3.3-3.2-5-5l-5.6,5.2c1.8,1.9,3.5,3.6,5.4,5.4L921.8,239.1L921.8,239.1z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M937.1,250.9c-5.8-3.6-10.3-7.1-15.3-11.7l-5.2,5.6c5.4,5.1,10.3,8.7,16.5,12.7L937.1,250.9 C937.2,250.9,937.2,250.9,937.1,250.9z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M943.2,254.4c-2.2-1.1-3.9-2.2-6.1-3.5l-4,6.5c2.3,1.5,4.1,2.5,6.5,3.8L943.2,254.4 C943.3,254.4,943.3,254.4,943.2,254.4z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M956.2,260.1c-4.3-1.6-8.8-3.6-12.9-5.7l-3.6,6.7c4.3,2.3,9.3,4.5,13.9,6.1L956.2,260.1L956.2,260.1z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M961.2,261.9c-2.1-0.6-2.9-0.9-5-1.7l-2.6,7.2c2.3,0.8,3.1,1.1,5.4,1.8L961.2,261.9L961.2,261.9z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M969.7,264c-2.9-0.6-5.7-1.3-8.5-2.2l-2.3,7.4c3,0.9,6.1,1.8,9.2,2.4L969.7,264 C969.8,264,969.7,264,969.7,264z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M980.1,265.7c-3.3-0.3-7.2-0.9-10.5-1.7l-1.6,7.5c3.4,0.7,7.7,1.5,11.2,1.8L980.1,265.7L980.1,265.7z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M999.5,265.8c-6.7,0.6-12.5,0.5-19.4-0.2l-0.7,7.7c7.3,0.7,13.6,0.8,20.8,0.2L999.5,265.8L999.5,265.8z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M999.5,265.8l0.6,7.7c10.7-0.9,19.5-2.9,29.4-6.8l-2.8-7.2C1017.6,263.1,1009.5,265,999.5,265.8z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1026.9,259.5L1026.9,259.5l2.7,7.2c2.5-0.9,4.6-1.9,6.9-3l-3.2-6.9C1031.2,257.8,1029.3,258.7,1026.9,259.5z \"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1033.4,256.8L1033.4,256.8l3.2,6.9c2.9-1.3,5.6-2.8,8.4-4.4l-3.8-6.6 C1038.6,254.2,1036.1,255.5,1033.4,256.8z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1041.2,252.7L1041.2,252.7l3.8,6.6c3-1.7,5.2-3.1,8-5.1l-4.4-6.3C1046.1,249.7,1044,251.1,1041.2,252.7z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1048.7,248L1048.7,248l4.4,6.3c12.9-9,21.6-18.1,29.9-31.4l-6.5-4C1068.7,231.1,1060.6,239.6,1048.7,248z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1076.5,218.7L1076.5,218.7l6.4,4c8.7-14,13.7-28,15.7-44.4l-7.6-0.9C1089.2,192.7,1084.6,205.8,1076.5,218.7 z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1096.2,138.9l-7.4,1.9c3.1,12.3,3.7,24.1,2.3,36.7c0,0,0,0,0,0.1l7.6,0.9 C1100.3,164.9,1099.5,152.2,1096.2,138.9z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M1088.8,140.7C1088.8,140.8,1088.8,140.8,1088.8,140.7l7.4-1.8c-0.3-1.2-0.6-2.4-0.9-3.6l-7.4,2.1 C1088.2,138.5,1088.5,139.5,1088.8,140.7z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1087.9,137.3L1087.9,137.3l7.4-2.1c-5.6-19.4-14.5-34.2-28.9-48.2l-5.3,5.5 C1074.5,105.5,1082.7,119.3,1087.9,137.3z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1060.9,92.4L1060.9,92.4l5.3-5.4c-1.8-1.8-3.7-3.4-5.6-5.1l-4.9,5.8C1057.5,89.2,1059.3,90.8,1060.9,92.4z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M1055.7,87.8L1055.7,87.8l4.9-5.8c-15-12.7-29.8-19.7-49.2-23.4L1010,66C1028.1,69.4,1041.6,75.9,1055.7,87.8 z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M1010,65.9L1010,65.9l1.5-7.4c-7.3-1.5-13.3-2-20.7-2v7.6C997.7,64,1003.3,64.6,1010,65.9z\"\n      />\n    </g>\n    <g>\n      <path\n        className=\"st25\"\n        d=\"M1196.9,90.3c7.6-2.3,15.6-3.5,23.5-3.6v-7.2c-8.8,0-17.7,1.3-26.1,3.9l2.2,7.1 C1196.6,90.4,1196.7,90.4,1196.9,90.3z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1191.4,92.2c2.1-0.8,3-1.1,5-1.8l-2.2-7.1c-2.5,0.7-3.4,1.1-5.9,2.1l2.7,6.9 C1191.1,92.3,1191.2,92.2,1191.4,92.2z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1184.7,95c2.2-1,4-1.9,6.2-2.7l-2.7-6.9c-2.5,0.9-4.8,2-7.2,3.1l3.2,6.6C1184.5,95.2,1184.6,95.1,1184.7,95z \"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1165.4,108c5.7-5.1,12-9.4,18.9-12.8l-3.2-6.6c-7.5,3.6-14.4,8.3-20.6,13.9L1165.4,108 C1165.4,108.1,1165.4,108.1,1165.4,108z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1165.4,108.1l-5-5.6c-2.1,1.9-3.7,3.4-5.6,5.5l5.5,5.1C1162.1,111.2,1163.6,109.7,1165.4,108.1z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1160.3,113.2C1160.4,113.1,1160.4,113.1,1160.3,113.2l-5.4-5.2c-5.9,6.3-9.5,11.4-13.6,19.1l6.5,3.5 C1151.6,123.6,1155,118.9,1160.3,113.2z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1147.7,130.8c0.1-0.1,0.1-0.2,0.2-0.3l-6.5-3.5c-1,2-1.9,3.6-2.7,5.6l6.7,3 C1146.1,133.9,1146.8,132.6,1147.7,130.8z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1145.1,136.1c0.1-0.1,0.1-0.3,0.2-0.4l-6.7-3c-1.8,3.9-3.1,7.6-4.3,11.7l7.1,2 C1142.4,142.8,1143.6,139.5,1145.1,136.1z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1141.2,147c0.1-0.2,0.1-0.4,0.2-0.6l-7.1-2c-1.1,4.1-2,8-2.6,12.2l7.2,1 C1139.4,153.9,1140.1,150.6,1141.2,147z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1138.7,158.4c0-0.2,0.1-0.5,0.1-0.7l-7.2-1c-0.4,2.6-0.6,5.2-0.7,7.8l7.2,0.4 C1138.3,162.6,1138.5,160.5,1138.7,158.4z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M1138.1,165.5c0-0.3,0-0.5,0.1-0.8l-7.2-0.4c-0.1,2.9-0.2,5-0.1,7.8l7.1-0.2 C1137.9,169.7,1138,167.9,1138.1,165.5z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1138,172.8c0-0.3,0-0.6,0-0.9l-7.1,0.2c0.3,7.6,1.3,14.2,3.4,21.6l6.5-1.9 C1139.1,185.4,1138.2,179.5,1138,172.8z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1141.2,192.9c-0.1-0.3-0.2-0.7-0.3-1l-6.5,1.9c0.8,3,1.9,6,3,8.8l6.2-2.5 C1142.6,197.7,1141.8,195.3,1141.2,192.9z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M1144,201.1c-0.1-0.3-0.3-0.7-0.4-1l-6.2,2.5c3.9,9.7,8.5,17.2,15.5,25.2l4.8-4.1 C1151.6,216.6,1147.5,209.8,1144,201.1z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1158.4,224.5c-0.3-0.3-0.5-0.6-0.8-0.9l-4.8,4.1c2,2.3,3.2,3.6,5.4,5.7l4.4-4.5 C1161,227.5,1159.8,226.3,1158.4,224.5z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M1163.4,229.8c-0.3-0.3-0.6-0.6-0.8-0.8l-4.4,4.5c8.3,8,16.7,13.5,27.2,18l2.3-5.3 C1178.3,242.1,1170.7,237,1163.4,229.8z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1188.7,246.6c-0.3-0.1-0.7-0.3-1-0.4l-2.3,5.3c1.7,0.7,4.1,1.7,5.8,2.3l1.9-5.4 C1191.7,247.8,1189.9,247.1,1188.7,246.6z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1194.1,248.7c-0.3-0.1-0.6-0.2-1-0.3l-1.9,5.4c18.4,6.3,35.2,6.7,53.8,1.5l-1.5-5 C1226.5,254.9,1211,254.5,1194.1,248.7z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1244.2,249.9c-0.2,0.1-0.3,0.1-0.5,0.1l1.5,5c11-3.1,20-7.7,29.2-14.5l-3-4 C1262.7,242.9,1254.4,247,1244.2,249.9z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M1271.3,236.5l-0.1,0.1l3,4c1.5-1,2.3-1.8,3.6-2.9l-3.2-3.8C1273.4,234.8,1272.7,235.4,1271.3,236.5z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M1294,210.3c-5.1,9.1-11.3,16.7-19.3,23.4c0,0,0,0-0.1,0l3.2,3.8c8.6-7.3,15.2-15.3,20.7-25.2l-4.5-2.5 C1294.1,210.1,1294.1,210.2,1294,210.3z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1296.7,205.1c-0.8,1.7-1.6,3.2-2.5,4.9l4.5,2.5c1-1.9,2-3.6,2.8-5.6l-4.7-2.2 C1296.8,204.8,1296.7,204.9,1296.7,205.1z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M1302.3,188.7c-1.3,5.9-3,10.7-5.5,16.1l4.7,2.2c2.8-6,4.6-11.2,6.1-17.7l-5.1-1.1 C1302.4,188.2,1302.4,188.5,1302.3,188.7z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1303.9,180.1c-0.4,3-0.7,5.1-1.3,8l5.1,1.1c0.8-3.4,1.2-5.8,1.7-9.2l-5.3-0.6 C1303.9,179.5,1303.9,179.8,1303.9,180.1z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M1305.5,141.4l-5.5,1.8c0.1,0.3,0.2,0.6,0.3,1c3.8,11.9,5,22.7,3.5,35.2l5.3,0.6 C1310.9,166.3,1309.8,154.4,1305.5,141.4z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1298.9,140c0.4,1.1,0.7,2.1,1.1,3.1l5.5-1.8c-0.5-1.7-0.9-2.8-1.6-4.5l-5.4,2.1 C1298.7,139.4,1298.8,139.7,1298.9,140z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M1288.5,120.9c4.3,5.8,7.4,11.5,10,18l5.4-2.1c-2.9-7.6-6.4-14-11.2-20.5l-5,3.6 C1288.1,120.3,1288.3,120.6,1288.5,120.9z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1285.9,117.5c0.5,0.7,1.2,1.7,2,2.5l5-3.6c-0.8-1-2-2.7-2.9-3.7l-4.8,3.8 C1285.4,116.9,1285.6,117.2,1285.9,117.5z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M1270.2,102.6c6.1,4.5,10.3,8.4,15,14l4.8-3.8c-5.4-6.6-10.1-11.1-17-16.1l-3.8,5.3 C1269.6,102.1,1269.9,102.3,1270.2,102.6z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1261.6,97.1c2.8,1.6,5.1,3,7.6,4.8l3.8-5.3c-3.1-2.3-5.8-4-9.2-5.9l-3.2,5.8 C1261,96.7,1261.3,96.9,1261.6,97.1z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1255,93.9c1.7,0.7,3.7,1.8,5.5,2.7l3.2-5.8c-2.1-1.1-4.9-2.5-6.9-3.5l-2.7,6.1 C1254.3,93.6,1254.7,93.7,1255,93.9z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1251.1,92.2c1.2,0.5,2,0.8,3,1.2l2.7-6.1c-1.8-0.7-2.6-1.1-4.4-1.8l-2.4,6.3 C1250.4,91.9,1250.7,92,1251.1,92.2z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M1221.2,86.6c10.6,0,19.1,1.6,28.8,5.2l2.4-6.3c-11-4.3-20.3-5.9-32-5.9v7.2 C1220.6,86.6,1220.9,86.6,1221.2,86.6z\"\n      />\n    </g>\n    <g>\n      <path\n        className=\"st21\"\n        d=\"M1452.3,56.6v-8.8c-13,0-25,2-37.2,6.2l2.9,8.3C1429.2,58.3,1440.3,56.6,1452.3,56.6z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1417.7,62.3c0.1,0,0.1,0,0.2-0.1l-2.9-8.3c-15.1,5.2-27.4,12.4-39.3,23.1l5.8,6.4 C1392.5,73.7,1403.7,67.1,1417.7,62.3z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1381.1,83.8c0.1-0.1,0.3-0.2,0.4-0.3l-5.8-6.4c-1.7,1.6-2.7,2.5-4.4,4.1l6.1,6.1 C1378.8,86,1379.7,85.1,1381.1,83.8z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M1377,87.7c0.1-0.1,0.3-0.3,0.4-0.4l-6.1-6.1c-10.4,10.4-17.6,21.1-23.6,34.3l7.7,3.4 C1360.9,106.8,1367.7,97.1,1377,87.7z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1355.2,119.6c0.1-0.2,0.2-0.4,0.3-0.6l-7.7-3.4c-0.6,1.5-0.9,2.2-1.6,3.6l7.7,3.1 C1354.3,121.4,1354.6,120.7,1355.2,119.6z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M1353.7,123c0.1-0.2,0.2-0.5,0.3-0.7l-7.7-3.1c-3.7,9.3-6.2,19-7.5,28.9l8.1,1 C1348,140.1,1350.3,131.4,1353.7,123z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1346.8,149.9c0-0.3,0.1-0.5,0.1-0.8l-8.1-1c-0.3,2.4-0.4,3.5-0.6,5.9l8.1,0.5 C1346.3,153,1346.5,151.8,1346.8,149.9z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1346.1,155.5c0-0.3,0-0.5,0.1-0.8l-8.1-0.5c-1,14.6,0.4,27.4,4.8,41.4l7.5-2.3 C1346.6,180.5,1345.3,168.8,1346.1,155.5z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1350.6,194c-0.1-0.2-0.1-0.5-0.2-0.7l-7.5,2.3c3.4,11.4,7.9,20.6,14.5,30.5l6.3-4.3 C1357.8,212.8,1353.7,204.3,1350.6,194z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M1364.1,222.4c-0.1-0.2-0.2-0.4-0.4-0.5l-6.3,4.3c1.3,2.1,3.2,4.6,4.7,6.4l5.9-4.7 C1366.8,226.2,1365.3,224.1,1364.1,222.4z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M1368.4,228.4c-0.1-0.2-0.2-0.3-0.4-0.5l-5.9,4.7c3.7,4.8,6.3,7.7,10.7,11.8l5.2-5.4 C1374.2,235.3,1371.9,232.6,1368.4,228.4z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M1378.4,239.4c-0.1-0.1-0.3-0.3-0.4-0.4l-5.2,5.4c5.6,5.4,10.7,9.4,17.1,13.7l4-6.1 C1388.1,248,1383.5,244.3,1378.4,239.4z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1394.4,252.1c-0.1-0.1-0.2-0.2-0.4-0.2l-4,6.1c1.2,0.8,3.8,2.4,5.1,3.1l3.6-6.3 C1397.5,254.1,1395.4,252.7,1394.4,252.1z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M1399.1,255c-0.1-0.1-0.2-0.1-0.3-0.2l-3.6,6.3c6.1,3.5,11.5,6,18,8.4l2.5-6.8 C1409.7,260.5,1404.7,258.2,1399.1,255z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1415.9,262.8c-0.1,0-0.2-0.1-0.3-0.1l-2.5,6.8c2,0.7,3.6,1.2,5.7,1.9l2.1-6.9 C1419.1,263.9,1417.7,263.5,1415.9,262.8z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1421.2,264.6c-0.1,0-0.1,0-0.2-0.1l-2.1,6.9c1.8,0.5,2,0.6,3.8,1.1l1.9-6.9 C1423.1,265.2,1422.8,265.1,1421.2,264.6z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1424.7,265.6c-0.1,0-0.1,0-0.2-0.1l-1.9,6.9c2.3,0.6,5.4,1.3,7.8,1.8l1.3-7.1 C1429.7,266.8,1426.9,266.2,1424.7,265.6z\"\n      />\n      <path\n        className=\"st24\"\n        d=\"M1459.7,269c-10.1,0.7-17.8,0.2-27.7-1.7c-0.1,0-0.1,0-0.2,0l-1.3,7.1c10.7,2.1,19,2.6,29.8,1.9L1459.7,269 C1459.8,269,1459.8,269,1459.7,269z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1467.2,268.2c-2.1,0.3-5.2,0.6-7.4,0.7l0.5,7.2c2.3-0.2,5.7-0.5,8-0.8L1467.2,268.2L1467.2,268.2z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1472.6,267.3c-2.3,0.4-3.1,0.6-5.4,0.9l1,7.2c2.5-0.3,3.4-0.5,5.9-1l-1.3-7.1 C1472.6,267.3,1472.6,267.3,1472.6,267.3z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M1508.6,253.1c-11.3,7.1-22.9,11.6-36,14.2l1.3,7.1c14.1-2.7,26.7-7.7,38.8-15.2l-3.8-6.2 C1508.9,253,1508.8,253.1,1508.6,253.1z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1516.3,247.9c-2.4,1.9-4.8,3.4-7.3,5.1l3.8,6.2c2.9-1.8,5.5-3.6,8.2-5.7l-4.5-5.9 C1516.6,247.7,1516.4,247.8,1516.3,247.9z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1536.1,228.4c-5.9,7.6-11.8,13.4-19.4,19.2l4.5,5.9c8.4-6.3,14.8-12.7,21.3-20.9l-5.9-4.7 C1536.4,228.1,1536.3,228.2,1536.1,228.4z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1538.4,225.4c-0.8,1.1-1.1,1.6-1.9,2.5l5.9,4.7c1.1-1.3,1.3-1.8,2.4-3.2l-6.1-4.5 C1538.6,225.1,1538.5,225.3,1538.4,225.4z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1544.4,216c-1.8,3-3.7,6-5.7,8.8l6.1,4.5c2.3-3.2,4.6-6.6,6.5-10.1l-6.5-3.8 C1544.7,215.6,1544.5,215.8,1544.4,216z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1546.3,212.8c-0.6,1.1-0.9,1.8-1.5,2.7l6.5,3.8c0.8-1.5,1.1-2.1,2-3.5l-6.7-3.6 C1546.5,212.4,1546.4,212.6,1546.3,212.8z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1548.8,207.8c-0.6,1.5-1.5,2.9-2.2,4.4l6.7,3.6c0.9-1.8,1.9-3.6,2.7-5.4l-6.9-3.2 C1549,207.4,1548.9,207.6,1548.8,207.8z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1557.7,177.7c-1.5,10.7-4.1,19.8-8.6,29.6l6.9,3.2c5-10.7,8-20.7,9.6-32.5l-7.8-1.1 C1557.7,177.2,1557.7,177.4,1557.7,177.7z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1558.1,174c-0.1,1.3-0.2,1.9-0.3,2.9l7.8,1.1c0.2-1.8,0.3-2.2,0.5-3.9l-7.9-0.8 C1558.2,173.5,1558.1,173.7,1558.1,174z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1563.3,134.4l-8,2c0.1,0.2,0.1,0.4,0.2,0.7c2.9,11.8,3.8,24,2.7,36.1l7.9,0.8 C1567.4,160.8,1566.5,147.4,1563.3,134.4z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1554.6,133.6c0.4,1.3,0.5,1.8,0.7,2.8l8-2c-0.4-1.8-0.5-2.2-1-3.8l-7.9,2.3 C1554.5,133.1,1554.5,133.3,1554.6,133.6z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1550.9,123c1.3,3.4,2.4,6.3,3.4,9.7l7.9-2.3c-1.1-4.1-2.3-7.4-3.9-11.3l-7.7,3.1 C1550.7,122.6,1550.8,122.8,1550.9,123z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1548.8,117.9c0.6,1.2,1.3,3,2,4.5l7.7-3.1c-0.6-1.7-1.7-3.9-2.4-5.5l-7.6,3.5 C1548.6,117.5,1548.7,117.7,1548.8,117.9z\"\n      />\n      <path\n        className=\"st25\"\n        d=\"M1538.4,100.3c3.9,5.4,7.2,10.9,10.1,16.9l7.6-3.5c-3.1-6.7-6.7-12.9-11.1-18.9l-6.8,5 C1538.1,100,1538.2,100.2,1538.4,100.3z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1536.1,97.4c0.8,1.1,1.1,1.6,1.9,2.5l6.8-5c-1-1.5-1.3-1.8-2.4-3.2l-6.7,5.2 C1535.9,97.1,1536,97.2,1536.1,97.4z\"\n      />\n      <path\n        className=\"st23\"\n        d=\"M1503.9,69.8c12.8,7.1,22.8,15.7,31.8,27.1l6.7-5.2c-9.9-12.5-20.7-21.9-34.6-29.7l-4.3,7.6 C1503.7,69.7,1503.8,69.7,1503.9,69.8z\"\n      />\n      <path\n        className=\"st21\"\n        d=\"M1499,67.2c2,0.9,2.8,1.3,4.6,2.4l4.3-7.6c-2.2-1.2-3-1.7-5.3-2.8l-3.8,7.9 C1498.7,67.1,1498.9,67.2,1499,67.2z\"\n      />\n      <path\n        className=\"st26\"\n        d=\"M1452.3,56.6c16.9,0,31.2,3.3,46.4,10.6l3.8-7.9c-16.4-8-31.8-11.6-50.2-11.6L1452.3,56.6L1452.3,56.6z\"\n      />\n    </g>\n    <g>\n      <path\n        className=\"st1\"\n        d=\"M100.8,184.3l-16.9,16.9c-3.5,3.5-9.1,3.5-12.5,0l-2.6-2.6c-3.5-3.5-3.5-9.1,0-12.5l16.9-16.7 c3.5-3.5,9.1-3.5,12.5,0l2.6,2.6C104.3,175.3,104.3,180.8,100.8,184.3z\"\n      />\n      <path\n        className=\"st1\"\n        d=\"M85.7,201.1l-16.7-16.7c-3.5-3.5-3.5-9.1,0-12.5l2.6-2.6c3.5-3.5,9.1-3.5,12.5,0l16.7,16.7 c3.5,3.5,3.5,9.1,0,12.5l-2.6,2.6C94.8,204.6,89.1,204.6,85.7,201.1z\"\n      />\n    </g>\n    <g>\n      <path\n        className=\"st1\"\n        d=\"M193.2,196.7l-10.4,10.4c-2.3,2.3-6,2.3-8.3,0l-1.3-1.3c-2.3-2.3-2.3-6,0-8.3l10.4-10.4c2.3-2.3,6-2.3,8.3,0 l1.3,1.3C195.5,190.7,195.5,194.4,193.2,196.7z\"\n      />\n      <path\n        className=\"st1\"\n        d=\"M183.5,207l-10.3-10.3c-2.3-2.3-2.3-6,0-8.3l1.3-1.3c2.3-2.3,6-2.3,8.3,0l10.4,10.4c2.3,2.3,2.3,6,0,8.3 l-1.3,1.3C189.5,209.3,185.9,209.3,183.5,207z\"\n      />\n    </g>\n    <g>\n      <path\n        className=\"st1\"\n        d=\"M307.9,140.7L297,151.5c-2.3,2.3-6,2.3-8.3,0l-1.6-1.6c-2.3-2.3-2.3-6,0-8.3l10.9-10.9c2.3-2.3,6-2.3,8.3,0 l1.6,1.6C310.3,134.6,310.3,138.4,307.9,140.7z\"\n      />\n      <path\n        className=\"st1\"\n        d=\"M298.1,151.5l-10.9-10.9c-2.3-2.3-2.3-6,0-8.3l1.6-1.6c2.3-2.3,6-2.3,8.3,0l10.9,10.9c2.3,2.3,2.3,6,0,8.3 l-1.6,1.6C304.1,153.8,300.4,153.8,298.1,151.5z\"\n      />\n    </g>\n    <g>\n      <path\n        className=\"st1\"\n        d=\"M411.7,154.3l-16.9,16.9c-3.3,3.3-8.7,3.3-12,0l-2.9-2.9c-3.3-3.3-3.3-8.7,0-12l16.9-16.9 c3.3-3.3,8.7-3.3,12,0l2.9,2.9C415,145.6,415,151,411.7,154.3z\"\n      />\n      <path\n        className=\"st1\"\n        d=\"M396.9,171.2L380,154.3c-3.3-3.3-3.3-8.7,0-12l2.9-2.9c3.3-3.3,8.7-3.3,12,0l16.9,16.9c3.3,3.3,3.3,8.7,0,12 l-2.9,2.9C405.5,174.6,400.2,174.6,396.9,171.2z\"\n      />\n    </g>\n    <text transform=\"matrix(1 0 0 1 289.1881 135.8746)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st28\">\n        {\"Conscription \"}\n      </tspan>\n      <tspan x={0.8} y={3.5} className=\"st27 st3 st28\">\n        {\"for General \"}\n      </tspan>\n      <tspan x={2.5} y={6.9} className=\"st27 st3 st28\">\n        {\"Elections \"}\n      </tspan>\n      <tspan x={3.1} y={10.4} className=\"st27 st3 st28\">\n        {\"without \"}\n      </tspan>\n      <tspan x={2} y={13.8} className=\"st27 st3 st28\">\n        {\"Measures \"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 261.6881 142.4785)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st29\">\n        {\"Unmanned \"}\n      </tspan>\n      <tspan x={3.7} y={4.8} className=\"st27 st3 st29\">\n        {\"warfare\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 300.6805 179.2795)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st30\">\n        {\"Difficulties \"}\n      </tspan>\n      <tspan x={9.4} y={5.7} className=\"st27 st3 st30\">\n        {\"in \"}\n      </tspan>\n      <tspan x={-1.1} y={11.3} className=\"st27 st3 st30\">\n        {\"self-defense\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 352.6053 187.6989)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st31\">\n        {\"Reorganization \"}\n      </tspan>\n      <tspan x={1} y={4.4} className=\"st27 st3 st31\">\n        {\"of the military \"}\n      </tspan>\n      <tspan x={3.2} y={8.8} className=\"st27 st3 st31\">\n        {\"to focus on \"}\n      </tspan>\n      <tspan x={2.6} y={13.2} className=\"st27 st3 st31\">\n        {\"professional \"}\n      </tspan>\n      <tspan x={7} y={17.6} className=\"st27 st3 st31\">\n        {\"soldiers\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 341.8732 153.2497)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st32\">\n        {\"Military elite \"}\n      </tspan>\n      <tspan x={4.3} y={4.7} className=\"st27 st3 st32\">\n        {\"through\"}\n      </tspan>\n      <tspan x={3} y={9.4} className=\"st27 st3 st32\">\n        {\"reduction\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 386.8552 147.2086)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st33\">\n        {\"Introduce\"}\n      </tspan>\n      <tspan x={2.4} y={4.7} className=\"st27 st3 st33\">\n        {\"AVMS \"}\n      </tspan>\n      <tspan x={-2.7} y={9.4} className=\"st27 st3 st33\">\n        {\"after quality \"}\n      </tspan>\n      <tspan x={-4} y={14.1} className=\"st27 st3 st33\">\n        {\"improvement \"}\n      </tspan>\n      <tspan x={-8.5} y={18.8} className=\"st27 st3 st33\">\n        {\"and modernization\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(0.9897 0 0 1 565.5899 139.6647)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st34\">\n        {\"Elite\"}\n      </tspan>\n      <tspan x={-6.3} y={8.1} className=\"st27 st3 st34\">\n        {\"infantry \"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 830.0038 179.2795)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st35\">\n        {\"Need to \"}\n      </tspan>\n      <tspan x={-0.1} y={3.8} className=\"st27 st3 st35\">\n        {\"improve \"}\n      </tspan>\n      <tspan x={-4} y={7.6} className=\"st27 st3 st35\">\n        {\"military social \"}\n      </tspan>\n      <tspan x={-1.4} y={11.5} className=\"st27 st3 st35\">\n        {\"awareness\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 705.2115 154.8791)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st36\">\n        {\"Conscription \"}\n      </tspan>\n      <tspan x={-0.1} y={4.9} className=\"st27 st3 st36\">\n        {\"career breaks\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 795.2669 148.0485)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st37\">\n        {\"Reducing \"}\n      </tspan>\n      <tspan x={-0.5} y={4.8} className=\"st27 st3 st37\">\n        {\"bad habits\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 780.1751 175.44)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st38\">\n        {\"Self-development \"}\n      </tspan>\n      <tspan x={7.5} y={3.8} className=\"st27 st3 st38\">\n        {\"benefits\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 823.9884 153.2496)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st39\">\n        {\"Limited \"}\n      </tspan>\n      <tspan x={2.2} y={6.2} className=\"st27 st3 st39\">\n        {\"social \"}\n      </tspan>\n      <tspan x={2.5} y={12.4} className=\"st27 st3 st39\">\n        {\"status\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 950.2827 142.5595)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st40\">\n        {\"Difficulty in \"}\n      </tspan>\n      <tspan x={2.5} y={5.4} className=\"st27 st3 st40\">\n        {\"retaining \"}\n      </tspan>\n      <tspan x={4.6} y={10.8} className=\"st27 st3 st40\">\n        {\"soldiers\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 949.8309 177.8288)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st41\">\n        {\"Job market \"}\n      </tspan>\n      <tspan x={1} y={6.8} className=\"st27 st3 st41\">\n        {\"restrictions\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 901.0021 179.6794)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st42\">\n        {\"Transitioning \"}\n      </tspan>\n      <tspan x={2.2} y={4.4} className=\"st27 st3 st42\">\n        {\"Recruits in \"}\n      </tspan>\n      <tspan x={2.4} y={8.8} className=\"st27 st3 st42\">\n        {\"the Mixed \"}\n      </tspan>\n      <tspan x={2.1} y={13.2} className=\"st27 st3 st42\">\n        {\"Duty Phase\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 902.2345 142.2563)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st43\">\n        {\"Transition \"}\n      </tspan>\n      <tspan x={1} y={5.1} className=\"st27 st3 st43\">\n        {\"between \"}\n      </tspan>\n      <tspan x={-3} y={10.3} className=\"st27 st3 st43\">\n        {\"specialty and \"}\n      </tspan>\n      <tspan x={-2.2} y={15.4} className=\"st27 st3 st43\">\n        {\"professional \"}\n      </tspan>\n      <tspan x={2.9} y={20.5} className=\"st27 st3 st43\">\n        {\"soldiers\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 998.8932 170.8278)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st44\">\n        {\"Possible \"}\n      </tspan>\n      <tspan x={-8.1} y={4.5} className=\"st27 st3 st44\">\n        {\"reorganization of \"}\n      </tspan>\n      <tspan x={-7.8} y={9} className=\"st27 st3 st44\">\n        {\"the military to be \"}\n      </tspan>\n      <tspan x={-6.4} y={13.5} className=\"st27 st3 st44\">\n        {\"officer-centered\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1.0417 0 0 1 1045.6044 138.4938)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st45\">\n        {\"Attrition\"}\n      </tspan>\n      <tspan x={-4.5} y={6} className=\"st27 st3 st45\">\n        {\"of Reservists\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1003.2952 138.7314)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st46\">\n        {\"Transition to \"}\n      </tspan>\n      <tspan x={0.6} y={6} className=\"st27 st3 st46\">\n        {\"a vocational \"}\n      </tspan>\n      <tspan x={-1.5} y={12} className=\"st27 st3 st46\">\n        {\"reserve system\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1025.0789 196.0749)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st47\">\n        {\"Sufficient \"}\n      </tspan>\n      <tspan x={-1} y={4.4} className=\"st27 st3 st47\">\n        {\"number of \"}\n      </tspan>\n      <tspan x={-7.4} y={8.8} className=\"st27 st3 st47\">\n        {\"noncommissioned \"}\n      </tspan>\n      <tspan x={2.3} y={13.2} className=\"st27 st3 st47\">\n        {\"officers\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1180.2981 181.591)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st48\">\n        {\"Men entering \"}\n      </tspan>\n      <tspan x={-0.4} y={4.9} className=\"st27 st3 st48\">\n        {\"the workforce \"}\n      </tspan>\n      <tspan x={0.3} y={9.7} className=\"st27 st3 st48\">\n        {\"two years late\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1232.7478 181.231)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st49\">\n        {\"No female \"}\n      </tspan>\n      <tspan x={-0.2} y={6.3} className=\"st27 st3 st49\">\n        {\"enlistment \"}\n      </tspan>\n      <tspan x={3.1} y={12.6} className=\"st27 st3 st49\">\n        {\"required\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1266.5479 176.7535)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st50\">\n        {\"Rear-loading of \"}\n      </tspan>\n      <tspan x={0.5} y={4.6} className=\"st27 st3 st50\">\n        {\"female soldiers \"}\n      </tspan>\n      <tspan x={-2.4} y={9.1} className=\"st27 st3 st50\">\n        {\"after recruitment   \"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1193.8538 149.102)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st51\">\n        {\"Provide \"}\n      </tspan>\n      <tspan x={-2.4} y={3.5} className=\"st27 st3 st51\">\n        {\"benefits for\"}\n      </tspan>\n      <tspan x={-7.2} y={7.1} className=\"st27 st3 st51\">\n        {\"short-term service \"}\n      </tspan>\n      <tspan x={-7.1} y={10.6} className=\"st27 st3 st51\">\n        {\"for female soldiers\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1237.6476 148.2408)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st52\">\n        {\"Sufficient \"}\n      </tspan>\n      <tspan x={-0.9} y={4.3} className=\"st27 st3 st52\">\n        {\"number of \"}\n      </tspan>\n      <tspan x={2.2} y={8.7} className=\"st27 st3 st52\">\n        {\"female \"}\n      </tspan>\n      <tspan x={-4.3} y={13} className=\"st27 st3 st52\">\n        {\"military officers\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1152.0516 149.5837)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st53\">\n        {\"Problem of\"}\n      </tspan>\n      <tspan x={2.3} y={6} className=\"st27 st3 st53\">\n        {\"complex \"}\n      </tspan>\n      <tspan x={-3} y={12.1} className=\"st27 st3 st53\">\n        {\"salary system \"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1406.6998 134.2409)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st54\">\n        {\"Excessive\"}\n      </tspan>\n      <tspan x={1.6} y={6.5} className=\"st27 st3 st54\">\n        {\"defense\"}\n      </tspan>\n      <tspan x={2.5} y={13} className=\"st27 st3 st54\">\n        {\"budget\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1371.5247 129.7973)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st55\">\n        {\"Budget \"}\n      </tspan>\n      <tspan x={-5.2} y={6.6} className=\"st27 st3 st55\">\n        {\"adjustment \"}\n      </tspan>\n      <tspan x={-6.9} y={13.1} className=\"st27 st3 st55\">\n        {\"through unit \"}\n      </tspan>\n      <tspan x={-7} y={19.7} className=\"st27 st3 st55\">\n        {\"consolidation\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1422.877 165.4069)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st56\">\n        {\"Unable to\"}\n      </tspan>\n      <tspan x={2.5} y={5.2} className=\"st27 st3 st56\">\n        {\" adjust \"}\n      </tspan>\n      <tspan x={-2.6} y={10.4} className=\"st27 st3 st56\">\n        {\"the defense \"}\n      </tspan>\n      <tspan x={2.6} y={15.6} className=\"st27 st3 st56\">\n        {\"budget\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1.0025 0 0 1 1522.9561 172.4396)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st57\">\n        {\"Need to \"}\n      </tspan>\n      <tspan x={-0.2} y={5.5} className=\"st27 st3 st57\">\n        {\"improve \"}\n      </tspan>\n      <tspan x={-5} y={11} className=\"st27 st3 st57\">\n        {\"treatment of \"}\n      </tspan>\n      <tspan x={1.1} y={16.5} className=\"st27 st3 st57\">\n        {\"soldiers\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1470.3496 132.7696)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st58\">\n        {\"Unable to \"}\n      </tspan>\n      <tspan x={1.6} y={8.3} className=\"st27 st3 st58\">\n        {\"maintain \"}\n      </tspan>\n      <tspan x={-2.9} y={16.6} className=\"st27 st3 st58\">\n        {\"conscription\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1455.1494 172.4395)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st59\">\n        {\"Converting to \"}\n      </tspan>\n      <tspan x={1.9} y={5.6} className=\"st27 st3 st59\">\n        {\"Professional \"}\n      </tspan>\n      <tspan x={6.5} y={11.3} className=\"st27 st3 st59\">\n        {\"Soldiers \"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1511.2321 137.5634)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st60\">\n        {\"Eliminate bad \"}\n      </tspan>\n      <tspan x={7.6} y={6.2} className=\"st27 st3 st60\">\n        {\"military \"}\n      </tspan>\n      <tspan x={6.6} y={12.5} className=\"st27 st3 st60\">\n        {\"practices\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(0.9857 0 0 1 620.7159 133.9963)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st61\">\n        {\"Unpredictable \"}\n      </tspan>\n      <tspan x={6.6} y={4.5} className=\"st27 st3 st61\">\n        {\"supply \"}\n      </tspan>\n      <tspan x={1.2} y={9} className=\"st27 st3 st61\">\n        {\"and demand \"}\n      </tspan>\n      <tspan x={4.8} y={13.5} className=\"st27 st3 st61\">\n        {\"of troops\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 588.2515 159.8683)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st62\">\n        {\"Economic \"}\n      </tspan>\n      <tspan x={5.9} y={8} className=\"st27 st3 st62\">\n        {\"Boom \"}\n      </tspan>\n      <tspan x={-3.8} y={16} className=\"st27 st3 st62\">\n        {\"Recruitment \"}\n      </tspan>\n      <tspan x={3.9} y={23.9} className=\"st27 st3 st62\">\n        {\"Difficult\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 742.3257 150.2086)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st63\">\n        {\"Economic \"}\n      </tspan>\n      <tspan x={3.9} y={5.3} className=\"st27 st3 st63\">\n        {\"Boom \"}\n      </tspan>\n      <tspan x={-2.5} y={10.6} className=\"st27 st3 st63\">\n        {\"Recruitment \"}\n      </tspan>\n      <tspan x={2.6} y={15.9} className=\"st27 st3 st63\">\n        {\"Difficult\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 616.8064 203.5998)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st64\">\n        {\"U.S. military \"}\n      </tspan>\n      <tspan x={0.2} y={2.9} className=\"st27 st3 st64\">\n        {\"recruitment \"}\n      </tspan>\n      <tspan x={-3.3} y={5.7} className=\"st27 st3 st64\">\n        {\"is undersubscribed\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1.0067 0 0 1 633.9164 165.53)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st65\">\n        {\"A certain \"}\n      </tspan>\n      <tspan x={-1.6} y={5.4} className=\"st27 st3 st65\">\n        {\"amount of \"}\n      </tspan>\n      <tspan x={5.7} y={10.8} className=\"st27 st3 st65\">\n        {\"jobs\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1.0067 0 0 1 739.5715 185.8623)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st65\">\n        {\"A certain \"}\n      </tspan>\n      <tspan x={-1.6} y={5.4} className=\"st27 st3 st65\">\n        {\"amount of \"}\n      </tspan>\n      <tspan x={5.7} y={10.8} className=\"st27 st3 st65\">\n        {\"jobs\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(0.9931 0 0 1 569.5902 199.6994)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st66\">\n        {\"Provide\"}\n      </tspan>\n      <tspan x={-5.5} y={4.9} className=\"st27 st3 st66\">\n        {\"210,000 jobs\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(0.9931 0 0 1 708.6404 185.8625)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st66\">\n        {\"Provide\"}\n      </tspan>\n      <tspan x={-5.5} y={4.9} className=\"st27 st3 st66\">\n        {\"210,000 jobs\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 555.205 165.2623)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st67\">\n        {\"Provide \"}\n      </tspan>\n      <tspan x={-6.2} y={4.3} className=\"st27 st3 st67\">\n        {\"a foothold into \"}\n      </tspan>\n      <tspan x={-6.8} y={8.5} className=\"st27 st3 st67\">\n        {\"the mainstream \"}\n      </tspan>\n      <tspan x={-1.2} y={12.8} className=\"st27 st3 st67\">\n        {\"of society\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 126.4766 143.8235)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st68\">\n        {\"Decline in \"}\n      </tspan>\n      <tspan x={5.6} y={7.2} className=\"st27 st3 st68\">\n        {\"youth \"}\n      </tspan>\n      <tspan x={-1.5} y={14.4} className=\"st27 st3 st68\">\n        {\"population \"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 125.8917 177.1291)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st69\">\n        {\"Increase in \"}\n      </tspan>\n      <tspan x={3.3} y={5.3} className=\"st27 st3 st69\">\n        {\"military \"}\n      </tspan>\n      <tspan x={4.2} y={10.5} className=\"st27 st3 st69\">\n        {\"misfits \"}\n      </tspan>\n      <tspan x={0.6} y={15.8} className=\"st27 st3 st69\">\n        {\"every year \"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 176.025 192.9187)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st70\">\n        {\"Review of \"}\n      </tspan>\n      <tspan x={-1.1} y={3.9} className=\"st27 st3 st70\">\n        {\"inadequate \"}\n      </tspan>\n      <tspan x={1.9} y={7.9} className=\"st27 st3 st70\">\n        {\"military \"}\n      </tspan>\n      <tspan x={3.6} y={11.8} className=\"st27 st3 st70\">\n        {\"policy\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 167.4639 140.4641)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st71\">\n        {\"Inaction in\"}\n      </tspan>\n      <tspan x={-4.1} y={6.4} className=\"st27 st3 st71\">\n        {\"preparing for \"}\n      </tspan>\n      <tspan x={-2.1} y={12.8} className=\"st27 st3 st71\">\n        {\"surveillance \"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 38.4029 180.3728)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st72\">\n        {\"Unable to \"}\n      </tspan>\n      <tspan x={1.1} y={5.8} className=\"st27 st3 st72\">\n        {\"maintain \"}\n      </tspan>\n      <tspan x={1.4} y={11.6} className=\"st27 st3 st72\">\n        {\"500,000 \"}\n      </tspan>\n      <tspan x={4.4} y={17.3} className=\"st27 st3 st72\">\n        {\"troops\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 269.6313 184.0474)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st72\">\n        {\"Unable to \"}\n      </tspan>\n      <tspan x={1.1} y={5.8} className=\"st27 st3 st72\">\n        {\"maintain \"}\n      </tspan>\n      <tspan x={1.4} y={11.6} className=\"st27 st3 st72\">\n        {\"500,000 \"}\n      </tspan>\n      <tspan x={4.4} y={17.3} className=\"st27 st3 st72\">\n        {\"troops\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 45.5499 136.7751)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st73\">\n        {\"Population \"}\n      </tspan>\n      <tspan x={0.3} y={4.8} className=\"st27 st3 st73\">\n        {\"Cliff Threat\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 76.9078 175.7243)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st74\">\n        {\"North\"}\n      </tspan>\n      <tspan x={-2.8} y={7.2} className=\"st27 st3 st74\">\n        {\"Korean \"}\n      </tspan>\n      <tspan x={-3.4} y={14.3} className=\"st27 st3 st74\">\n        {\"Nuclear \"}\n      </tspan>\n      <tspan x={-0.9} y={21.5} className=\"st27 st3 st74\">\n        {\"Threat\"}\n      </tspan>\n    </text>\n    <circle className=\"st5\" cx={158.9} cy={202} r={12.6} />\n    <text transform=\"matrix(1 0 0 1 150.0284 199.1667)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st75\">\n        {\"Increase in \"}\n      </tspan>\n      <tspan x={0.5} y={4.3} className=\"st27 st3 st75\">\n        {\"interested \"}\n      </tspan>\n      <tspan x={3} y={8.5} className=\"st27 st3 st75\">\n        {\"soldiers\"}\n      </tspan>\n    </text>\n    <circle className=\"st6\" cx={38.6} cy={158.1} r={11.9} />\n    <text transform=\"matrix(1 0 0 1 28.0323 157.4016)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st76\">\n        {\"Increased youth\"}\n      </tspan>\n      <tspan x={0.4} y={3.5} className=\"st27 st3 st76\">\n        {\"unemployment\"}\n      </tspan>\n    </text>\n    <g>\n      <path\n        className=\"st1\"\n        d=\"M68.6,161.2l-8.9,8.9c-1.8,1.8-4.8,1.8-6.5,0l-1.4-1.4c-1.8-1.8-1.8-4.8,0-6.5l8.9-8.9c1.8-1.8,4.8-1.8,6.5,0 l1.4,1.4C70.4,156.5,70.4,159.4,68.6,161.2z\"\n      />\n      <path\n        className=\"st1\"\n        d=\"M60.7,170.1l-8.9-8.9c-1.8-1.8-1.8-4.8,0-6.5l1.4-1.4c1.8-1.8,4.8-1.8,6.5,0l8.9,8.9c1.8,1.8,1.8,4.8,0,6.5 l-1.4,1.4C65.4,171.9,62.4,171.9,60.7,170.1z\"\n      />\n    </g>\n    <text transform=\"matrix(1 0 0 1 53.1182 161.219)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st77\">\n        {\"Underestimating \"}\n      </tspan>\n      <tspan x={0.6} y={2.2} className=\"st27 st3 st77\">\n        {\"Security Threats\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 73.5348 143.8244)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st78\">\n        {\"Underestimating \"}\n      </tspan>\n      <tspan x={7.2} y={4.2} className=\"st27 st3 st78\">\n        {\"Security \"}\n      </tspan>\n      <tspan x={8.1} y={8.4} className=\"st27 st3 st78\">\n        {\"Threats\"}\n      </tspan>\n    </text>\n    <circle className=\"st79\" cx={164.1} cy={178.7} r={11.6} />\n    <text transform=\"matrix(1 0 0 1 154.1886 177.8288)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st80\">\n        {\"Transition to a \"}\n      </tspan>\n      <tspan x={0.7} y={3.6} className=\"st27 st3 st80\">\n        {\"Smart Military\"}\n      </tspan>\n    </text>\n    <circle className=\"st5\" cx={285} cy={161.8} r={10.6} />\n    <text transform=\"matrix(1 0 0 1 278.4812 158.0938)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st81\">\n        {\"military \"}\n      </tspan>\n      <tspan x={-2.1} y={4.7} className=\"st27 st3 st81\">\n        {\"reduction \"}\n      </tspan>\n      <tspan x={1} y={9.4} className=\"st27 st3 st81\">\n        {\"system\"}\n      </tspan>\n    </text>\n    <circle className=\"st5\" cx={262.3} cy={165.8} r={13.2} />\n    <text transform=\"matrix(1 0 0 1 250.057 165.4443)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st82\">\n        {\"Unpredictable \"}\n      </tspan>\n      <tspan x={2.6} y={4.3} className=\"st27 st3 st82\">\n        {\"future wars\"}\n      </tspan>\n    </text>\n    <g>\n      <path\n        className=\"st1\"\n        d=\"M328.3,157.6l-9.6,9.6c-2.3,2.3-6,2.3-8.3,0l-0.9-0.9c-2.3-2.3-2.3-6,0-8.3l9.6-9.6c2.3-2.3,6-2.3,8.3,0 l0.9,0.9C330.5,151.5,330.5,155.3,328.3,157.6z\"\n      />\n      <path\n        className=\"st1\"\n        d=\"M318.9,167.2l-9.6-9.6c-2.3-2.3-2.3-6,0-8.3l0.9-0.9c2.3-2.3,6-2.3,8.3,0l9.6,9.6c2.3,2.3,2.3,6,0,8.3 l-0.9,0.9C325,169.5,321.3,169.5,318.9,167.2z\"\n      />\n    </g>\n    <text transform=\"matrix(1 0 0 1 313.6054 153.6213)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st83\">\n        {\"Need to \"}\n      </tspan>\n      <tspan x={-0.5} y={3.4} className=\"st27 st3 st83\">\n        {\"maintain \"}\n      </tspan>\n      <tspan x={-4.2} y={6.7} className=\"st27 st3 st83\">\n        {\"the number of \"}\n      </tspan>\n      <tspan x={0.7} y={10.1} className=\"st27 st3 st83\">\n        {\"soldiers\"}\n      </tspan>\n    </text>\n    <circle className=\"st6\" cx={370} cy={138} r={10.1} />\n    <text transform=\"matrix(1 0 0 1 364.5987 134.9919)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st84\">\n        {\"A small \"}\n      </tspan>\n      <tspan x={2.4} y={4} className=\"st27 st3 st84\">\n        {\"elite \"}\n      </tspan>\n      <tspan x={0.5} y={7.9} className=\"st27 st3 st84\">\n        {\"military\"}\n      </tspan>\n    </text>\n    <circle className=\"st6\" cx={345.4} cy={177.4} r={9.1} />\n    <text transform=\"matrix(1 0 0 1 337.5322 176.7379)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st85\">\n        {\"Mechanization \"}\n      </tspan>\n      <tspan x={0.8} y={2.7} className=\"st27 st3 st85\">\n        {\"of the military\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 388.9841 184.0473)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st86\">\n        {\"Smart \"}\n      </tspan>\n      <tspan x={0.7} y={6.7} className=\"st27 st3 st86\">\n        {\"Army \"}\n      </tspan>\n      <tspan x={-0.7} y={13.5} className=\"st27 st3 st86\">\n        {\"System\"}\n      </tspan>\n    </text>\n    <path\n      className=\"st0\"\n      d=\"M532.6,186.7l1.9-1.9c2-2,2-5.3,0-7.3l-4.3-4.3c-2-2-5.3-2-7.3,0l-1.9,1.9l-1.9-1.9c-2-2-5.3-2-7.3,0l-4.3,4.3 c-2,2-2,5.3,0,7.3l1.9,1.9l-1.9,1.9c-2,2-2,5.3,0,7.3l4.3,4.3c2,2,5.3,2,7.3,0l1.9-1.9l1.9,1.9c2,2,5.3,2,7.3,0l4.3-4.3 c2-2,2-5.3,0-7.3L532.6,186.7z\"\n    />\n    <circle className=\"st6\" cx={490.5} cy={191.2} r={15.6} />\n    <circle className=\"st6\" cx={479.9} cy={154.4} r={13.4} />\n    <g>\n      <path\n        className=\"st1\"\n        d=\"M535,153.3l-15.9,15.9c-3.3,3.3-8.7,3.3-12,0l-2.3-2.3c-3.3-3.3-3.3-8.7,0-12l15.9-15.9c3.3-3.3,8.7-3.3,12,0 l2.3,2.3C538.3,144.7,538.3,150,535,153.3z\"\n      />\n      <path\n        className=\"st1\"\n        d=\"M520.7,169.2l-15.9-15.9c-3.3-3.3-3.3-8.7,0-12l2.3-2.3c3.3-3.3,8.7-3.3,12,0l15.9,15.9c3.3,3.3,3.3,8.7,0,12 l-2.3,2.3C529.4,172.5,524,172.5,520.7,169.2z\"\n      />\n    </g>\n    <circle className=\"st6\" cx={495.1} cy={137.3} r={9.7} />\n    <circle className=\"st6\" cx={469.7} cy={173.6} r={8.1} />\n    <ellipse className=\"st6\" cx={601.6} cy={128.9} rx={16.2} ry={16.5} />\n    <text transform=\"matrix(0.9897 0 0 1 593.6685 120.7541)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st87\">\n        {\"Avoiding \"}\n      </tspan>\n      <tspan x={1.4} y={4.4} className=\"st27 st3 st87\">\n        {\"military \"}\n      </tspan>\n      <tspan x={-1.1} y={8.8} className=\"st27 st3 st87\">\n        {\"service for \"}\n      </tspan>\n      <tspan x={-1.5} y={13.2} className=\"st27 st3 st87\">\n        {\"children of \"}\n      </tspan>\n      <tspan x={-3.4} y={17.7} className=\"st27 st3 st87\">\n        {\"high rankings\"}\n      </tspan>\n    </text>\n    <path\n      className=\"st0\"\n      d=\"M821.3,195.3l1.5-1.5c1.6-1.6,1.6-4,0-5.6l-3.3-3.3c-1.6-1.6-4-1.6-5.6,0l-1.5,1.5l-1.5-1.5 c-1.6-1.6-4-1.6-5.6,0l-3.3,3.3c-1.6,1.6-1.6,4,0,5.6l1.5,1.5l-1.5,1.5c-1.6,1.6-1.6,4,0,5.6l3.3,3.3c1.6,1.6,4,1.6,5.6,0l1.5-1.5 l1.5,1.5c1.6,1.6,4,1.6,5.6,0l3.3-3.3c1.6-1.6,1.6-4,0-5.6L821.3,195.3z\"\n    />\n    <text transform=\"matrix(1 0 0 1 802.9612 192.6025)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st88\">\n        {\"Difficulty in \"}\n      </tspan>\n      <tspan x={2} y={4.4} className=\"st27 st3 st88\">\n        {\"retaining \"}\n      </tspan>\n      <tspan x={3.8} y={8.9} className=\"st27 st3 st88\">\n        {\"soldiers\"}\n      </tspan>\n    </text>\n    <path\n      className=\"st0\"\n      d=\"M948.8,201.5l1.6-1.6c1.8-1.8,1.8-4.5,0-6.2l-3.6-3.6c-1.8-1.8-4.5-1.8-6.2,0l-1.6,1.6l-1.6-1.6 c-1.8-1.8-4.5-1.8-6.2,0l-3.6,3.6c-1.8,1.8-1.8,4.5,0,6.2l1.6,1.6l-1.6,1.6c-1.8,1.8-1.8,4.5,0,6.2l3.6,3.6c1.8,1.8,4.5,1.8,6.2,0 l1.6-1.6l1.6,1.6c1.8,1.8,4.5,1.8,6.2,0l3.6-3.6c1.8-1.8,1.8-4.5,0-6.2L948.8,201.5z\"\n    />\n    <text transform=\"matrix(1 0 0 1 931.2074 197.5954)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st89\">\n        {\"Lack of \"}\n      </tspan>\n      <tspan x={-1.2} y={5.7} className=\"st27 st3 st89\">\n        {\"sense of \"}\n      </tspan>\n      <tspan x={0.3} y={11.3} className=\"st27 st3 st89\">\n        {\"mission\"}\n      </tspan>\n    </text>\n    <circle className=\"st5\" cx={936.5} cy={131.6} r={12.8} />\n    <text transform=\"matrix(1 0 0 1 927.6092 128.2881)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st90\">\n        {\"Increasing \"}\n      </tspan>\n      <tspan x={2.8} y={4.5} className=\"st27 st3 st90\">\n        {\"Soldier \"}\n      </tspan>\n      <tspan x={0.1} y={8.9} className=\"st27 st3 st90\">\n        {\"Autonomy\"}\n      </tspan>\n    </text>\n    <path\n      className=\"st1\"\n      d=\"M943.6,169l1.2-1.2c1.5-1.5,1.5-3.7,0-5.2l-3-3c-1.5-1.5-3.7-1.5-5.2,0l-1.2,1.2l-1.2-1.2 c-1.5-1.5-3.7-1.5-5.2,0l-3,3c-1.5,1.5-1.5,3.7,0,5.2l1.2,1.2l-1.2,1.2c-1.5,1.5-1.5,3.7,0,5.2l3,3c1.5,1.5,3.7,1.5,5.2,0l1.2-1.2 l1.2,1.2c1.5,1.5,3.7,1.5,5.2,0l3-3c1.5-1.5,1.5-3.7,0-5.2L943.6,169z\"\n    />\n    <text transform=\"matrix(1.0417 0 0 1 927.7395 166.4938)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st91\">\n        {\"Pessimistic \"}\n      </tspan>\n      <tspan x={2.3} y={3.6} className=\"st27 st3 st91\">\n        {\"military \"}\n      </tspan>\n      <tspan x={0.3} y={7.2} className=\"st27 st3 st91\">\n        {\"perception\"}\n      </tspan>\n    </text>\n    <path\n      className=\"st1\"\n      d=\"M1083.5,177.4l2.4-2.4c2.6-2.6,2.6-6.9,0-9.5l-5.6-5.6c-2.6-2.6-6.9-2.6-9.5,0l-2.4,2.4l-2.4-2.4 c-2.6-2.6-6.9-2.6-9.5,0l-5.6,5.6c-2.6,2.6-2.6,6.9,0,9.5l2.4,2.4l-2.4,2.4c-2.6,2.6-2.6,6.9,0,9.5l5.6,5.6c2.6,2.6,6.9,2.6,9.5,0 l2.4-2.4l2.4,2.4c2.6,2.6,6.9,2.6,9.5,0l5.6-5.6c2.6-2.6,2.6-6.9,0-9.5L1083.5,177.4z\"\n    />\n    <text transform=\"matrix(1 0 0 1 1058.015 168.5715)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st92\">\n        {\"Need to \"}\n      </tspan>\n      <tspan x={-0.2} y={7} className=\"st27 st3 st92\">\n        {\"increase \"}\n      </tspan>\n      <tspan x={-0.1} y={14} className=\"st27 st3 st92\">\n        {\"officers' \"}\n      </tspan>\n      <tspan x={1.8} y={21.1} className=\"st27 st3 st92\">\n        {\"salaries\"}\n      </tspan>\n    </text>\n    <circle className=\"st6\" cx={1154.9} cy={183.2} r={10.8} />\n    <text transform=\"matrix(1 0 0 1 1146.0729 180.8527)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st93\">\n        {\"Reorganize \"}\n      </tspan>\n      <tspan x={0.7} y={4} className=\"st27 st3 st93\">\n        {\"the officer \"}\n      </tspan>\n      <tspan x={3.8} y={7.9} className=\"st27 st3 st93\">\n        {\"system\"}\n      </tspan>\n    </text>\n    <path\n      className=\"st0\"\n      d=\"M1174.3,198l1-1c1.1-1.1,1.1-2.9,0-4l-2.4-2.4c-1.1-1.1-2.9-1.1-4,0l-1,1l-1-1c-1.1-1.1-2.9-1.1-4,0l-2.4,2.4 c-1.1,1.1-1.1,2.9,0,4l1,1l-1,1c-1.1,1.1-1.1,2.9,0,4l2.4,2.4c1.1,1.1,2.9,1.1,4,0l1-1l1,1c1.1,1.1,2.9,1.1,4,0l2.4-2.4 c1.1-1.1,1.1-2.9,0-4L1174.3,198z\"\n    />\n    <text transform=\"matrix(1 0 0 1 1162.8848 195.9579)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st94\">\n        {\"Revival of \"}\n      </tspan>\n      <tspan x={-0.5} y={2.6} className=\"st27 st3 st94\">\n        {\"the military\"}\n      </tspan>\n      <tspan x={-1.2} y={5.3} className=\"st27 st3 st94\">\n        {\"merit system\"}\n      </tspan>\n    </text>\n    <path\n      className=\"st1\"\n      d=\"M1286.3,148.1l1.7-1.7c1.9-1.9,1.9-4.9,0-6.7l-3.9-3.9c-1.9-1.9-4.9-1.9-6.7,0l-1.7,1.7l-1.7-1.7 c-1.9-1.9-4.9-1.9-6.7,0l-3.9,3.9c-1.9,1.9-1.9,4.9,0,6.7l1.7,1.7l-1.7,1.7c-1.9,1.9-1.9,4.9,0,6.7l3.9,3.9c1.9,1.9,4.9,1.9,6.7,0 l1.7-1.7l1.7,1.7c1.9,1.9,4.9,1.9,6.7,0l3.9-3.9c1.9-1.9,1.9-4.9,0-6.7L1286.3,148.1z\"\n    />\n    <text transform=\"matrix(1 0 0 1 1264.7042 146.981)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st95\">\n        {\"No unisex \"}\n      </tspan>\n      <tspan x={0} y={5.7} className=\"st27 st3 st95\">\n        {\"enlistment\"}\n      </tspan>\n    </text>\n    <circle className=\"st6\" cx={1376.7} cy={192.1} r={13.7} />\n    <text transform=\"matrix(1 0 0 1 1367.2545 188.0398)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st96\">\n        {\"Sell off \"}\n      </tspan>\n      <tspan x={-0.5} y={6.6} className=\"st27 st3 st96\">\n        {\"military \"}\n      </tspan>\n      <tspan x={4} y={13.1} className=\"st27 st3 st96\">\n        {\"land\"}\n      </tspan>\n    </text>\n    <path\n      className=\"st1\"\n      d=\"M1411.5,202.5l1.3-1.3c1.5-1.5,1.5-3.9,0-5.4l-3.2-3.2c-1.5-1.5-3.9-1.5-5.4,0l-1.3,1.3l-1.3-1.3 c-1.5-1.5-3.9-1.5-5.4,0l-3.2,3.2c-1.5,1.5-1.5,3.9,0,5.4l1.3,1.3l-1.3,1.3c-1.5,1.5-1.5,3.9,0,5.4l3.2,3.2c1.5,1.5,3.9,1.5,5.4,0 l1.3-1.3l1.3,1.3c1.5,1.5,3.9,1.5,5.4,0l3.2-3.2c1.5-1.5,1.5-3.9,0-5.4L1411.5,202.5z\"\n    />\n    <text transform=\"matrix(1 0 0 1 1396.3605 198.3473)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st97\">\n        {\"Maintain \"}\n      </tspan>\n      <tspan x={-1.8} y={3.7} className=\"st27 st3 st97\">\n        {\"a minimum \"}\n      </tspan>\n      <tspan x={0.8} y={7.5} className=\"st27 st3 st97\">\n        {\"number \"}\n      </tspan>\n      <tspan x={0.3} y={11.2} className=\"st27 st3 st97\">\n        {\"of troops\"}\n      </tspan>\n    </text>\n    <path\n      className=\"st0\"\n      d=\"M1414.1,177.3l1.8-1.8c2-2,2-5.1,0-7.1l-4.1-4.1c-2-2-5.1-2-7.1,0l-1.8,1.8l-1.8-1.8c-2-2-5.1-2-7.1,0l-4.1,4.1 c-2,2-2,5.1,0,7.1l1.8,1.8l-1.8,1.8c-2,2-2,5.1,0,7.1l4.1,4.1c2,2,5.1,2,7.1,0l1.8-1.8l1.8,1.8c2,2,5.1,2,7.1,0l4.1-4.1 c2-2,2-5.1,0-7.1L1414.1,177.3z\"\n    />\n    <text transform=\"matrix(1 0 0 1 1393.3649 173.1305)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st98\">\n        {\"Need to \"}\n      </tspan>\n      <tspan x={-1} y={6.1} className=\"st27 st3 st98\">\n        {\"maintain \"}\n      </tspan>\n      <tspan x={2.5} y={12.2} className=\"st27 st3 st98\">\n        {\"troops\"}\n      </tspan>\n    </text>\n    <circle className=\"st5\" cx={1362.1} cy={167.6} r={14.6} />\n    <text transform=\"matrix(1 0 0 1 1348.7604 164.7082)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st99\">\n        {\"Maintain key \"}\n      </tspan>\n      <tspan x={-0.3} y={5.3} className=\"st27 st3 st99\">\n        {\"maneuvering \"}\n      </tspan>\n      <tspan x={2.6} y={10.7} className=\"st27 st3 st99\">\n        {\"equipment\"}\n      </tspan>\n    </text>\n    <path\n      className=\"st0\"\n      d=\"M1510.2,200l2-2c2.2-2.2,2.2-5.8,0-8l-4.7-4.7c-2.2-2.2-5.8-2.2-8,0l-2,2l-2-2c-2.2-2.2-5.8-2.2-8,0l-4.7,4.7 c-2.2,2.2-2.2,5.8,0,8l2,2l-2,2c-2.2,2.2-2.2,5.8,0,8l4.7,4.7c2.2,2.2,5.8,2.2,8,0l2-2l2,2c2.2,2.2,5.8,2.2,8,0l4.7-4.7 c2.2-2.2,2.2-5.8,0-8L1510.2,200z\"\n    />\n    <text transform=\"matrix(1.0025 0 0 1 1486.6365 196.0749)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st100\">\n        {\"Improved \"}\n      </tspan>\n      <tspan x={3.3} y={5.6} className=\"st27 st3 st100\">\n        {\"wages \"}\n      </tspan>\n      <tspan x={-0.8} y={11.2} className=\"st27 st3 st100\">\n        {\"for officers\"}\n      </tspan>\n    </text>\n    <circle className=\"st19\" cx={165.4} cy={165.9} r={49.6} />\n    <circle className=\"st19\" cx={68.9} cy={166.3} r={46.5} />\n    <ellipse\n      transform=\"matrix(0.1602 -0.9871 0.9871 0.1602 78.4967 427.9)\"\n      className=\"st19\"\n      cx={290.7}\n      cy={167.8}\n      rx={43}\n      ry={43}\n    />\n    <circle className=\"st19\" cx={378.5} cy={170.3} r={43.8} />\n    <ellipse\n      transform=\"matrix(0.7071 -0.7071 0.7071 0.7071 56.9544 476.2491)\"\n      className=\"st19\"\n      cx={603.4}\n      cy={169.4}\n      rx={57.7}\n      ry={57.7}\n    />\n    <circle className=\"st19\" cx={503.3} cy={168.5} r={42.1} />\n    <circle className=\"st19\" cx={736.3} cy={171.4} r={41.3} />\n    <circle className=\"st19\" cx={815.6} cy={170.6} r={38} />\n    <circle className=\"st19\" cx={938.7} cy={166.7} r={48.8} />\n    <circle className=\"st19\" cx={1039.8} cy={167.8} r={52.3} />\n    <circle className=\"st19\" cx={1180.7} cy={169} r={41.9} />\n    <circle className=\"st19\" cx={1263.8} cy={170.4} r={40.2} />\n    <circle className=\"st19\" cx={1504.2} cy={164.7} r={54.1} />\n    <circle className=\"st19\" cx={1398.1} cy={163.6} r={51.3} />\n    <g>\n      <path\n        className=\"st0\"\n        d=\"M210.1,176l-10.4,10.4c-2.3,2.3-6,2.3-8.3,0l-1.3-1.3c-2.3-2.3-2.3-6,0-8.3l10.4-10.4c2.3-2.3,6-2.3,8.3,0 l1.3,1.3C212.4,170,212.4,173.7,210.1,176z\"\n      />\n      <path\n        className=\"st0\"\n        d=\"M200.5,186.3L190.2,176c-2.3-2.3-2.3-6,0-8.3l1.3-1.3c2.3-2.3,6-2.3,8.3,0l10.4,10.4c2.3,2.3,2.3,6,0,8.3 l-1.3,1.3C206.5,188.6,202.8,188.6,200.5,186.3z\"\n      />\n    </g>\n    <text transform=\"matrix(1 0 0 1 192.1178 172.8249)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st101\">\n        {\"Maintain \"}\n      </tspan>\n      <tspan x={0.4} y={4.8} className=\"st27 st3 st101\">\n        {\"250,000 \"}\n      </tspan>\n      <tspan x={1.9} y={9.5} className=\"st27 st3 st101\">\n        {\"soldiers\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 478.0061 184.9523)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st31\">\n        {\"Reorganization \"}\n      </tspan>\n      <tspan x={1} y={4.4} className=\"st27 st3 st31\">\n        {\"of the military \"}\n      </tspan>\n      <tspan x={3.2} y={8.8} className=\"st27 st3 st31\">\n        {\"to focus on \"}\n      </tspan>\n      <tspan x={2.6} y={13.2} className=\"st27 st3 st31\">\n        {\"professional \"}\n      </tspan>\n      <tspan x={7} y={17.6} className=\"st27 st3 st31\">\n        {\"soldiers\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 468.2142 152.1539)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st32\">\n        {\"Military elite \"}\n      </tspan>\n      <tspan x={4.3} y={4.7} className=\"st27 st3 st32\">\n        {\"through\"}\n      </tspan>\n      <tspan x={3} y={9.4} className=\"st27 st3 st32\">\n        {\"reduction\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 511.2661 144.5395)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st33\">\n        {\"Introduce\"}\n      </tspan>\n      <tspan x={2.4} y={4.7} className=\"st27 st3 st33\">\n        {\"AVMS \"}\n      </tspan>\n      <tspan x={-2.7} y={9.4} className=\"st27 st3 st33\">\n        {\"after quality \"}\n      </tspan>\n      <tspan x={-4} y={14.1} className=\"st27 st3 st33\">\n        {\"improvement \"}\n      </tspan>\n      <tspan x={-8.5} y={18.8} className=\"st27 st3 st33\">\n        {\"and modernization\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 489.4335 133.7193)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st84\">\n        {\"A small \"}\n      </tspan>\n      <tspan x={2.4} y={4} className=\"st27 st3 st84\">\n        {\"elite \"}\n      </tspan>\n      <tspan x={0.5} y={7.9} className=\"st27 st3 st84\">\n        {\"military\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 462.1852 172.8248)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st85\">\n        {\"Mechanization \"}\n      </tspan>\n      <tspan x={0.8} y={2.7} className=\"st27 st3 st85\">\n        {\"of the military\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 513.2229 181.8764)\" className=\"st11\">\n      <tspan x={0} y={0} className=\"st27 st3 st86\">\n        {\"Smart \"}\n      </tspan>\n      <tspan x={0.7} y={6.7} className=\"st27 st3 st86\">\n        {\"Army \"}\n      </tspan>\n      <tspan x={-0.7} y={13.5} className=\"st27 st3 st86\">\n        {\"System\"}\n      </tspan>\n    </text>\n  </svg>\n);\nexport default BubbleEng;\n","import * as React from \"react\";\nimport \"./SubChart.scss\";\n//@ts-ignore\nconst SubChart = (props) => (\n  <svg\n    id=\"\\uB808\\uC774\\uC5B4_1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 1594 223\"\n    style={{\n      enableBackground: \"new 0 0 1594 223\",\n    }}\n    xmlSpace=\"preserve\"\n    {...props}\n  >\n    <text transform=\"matrix(1 0 0 1 13.5164 139.6523)\" xmlSpace=\"preserve\">\n      <tspan x={5} y={0} className=\"stt0 st11\">\n        {\"LJS   &   JKT\"}\n      </tspan>\n      <tspan x={5} y={22} className=\"stt0 st11\">\n        {\"LJS   &   KJD\"}\n      </tspan>\n      <tspan x={5} y={44} className=\"stt0 st11\">\n        {\"PHR &   JKT\"}\n      </tspan>\n      <tspan x={5} y={66} className=\"stt0 st11\">\n        {\"PHR &   KJD\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 197.3914 139.4609)\">\n      <tspan x={0} y={0} className=\"stt0 stt1\">\n        {\"5 times\"}\n      </tspan>\n      <tspan x={0} y={22} className=\"stt0 stt1\">\n        {\"4 times\"}\n      </tspan>\n      <tspan x={0} y={44} className=\"stt0 stt1\">\n        {\"3 times\"}\n      </tspan>\n      <tspan x={0} y={66} className=\"stt0 stt1\">\n        {\"4 times\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 376.8728 138.9385)\">\n      <tspan x={0} y={0} className=\"stt0 stt1\">\n        {\"4 times\"}\n      </tspan>\n      <tspan x={0} y={22} className=\"stt0 stt1\">\n        {\"8 times\"}\n      </tspan>\n      <tspan x={0} y={44} className=\"stt0 stt1\">\n        {\"2 times\"}\n      </tspan>\n      <tspan x={0} y={66} className=\"stt0 stt1\">\n        {\"5 times\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 518.5291 138.416)\">\n      <tspan x={0} y={0} className=\"stt0 stt1\">\n        {\"7 times\"}\n      </tspan>\n      <tspan x={0} y={22} className=\"stt0 stt1\">\n        {\"9 times\"}\n      </tspan>\n      <tspan x={0} y={44} className=\"stt0 stt1\">\n        {\"4 times\"}\n      </tspan>\n      <tspan x={0} y={66} className=\"stt0 stt1\">\n        {\"7 times\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 726.9255 138.416)\">\n      <tspan x={0} y={0} className=\"stt0 stt1\">\n        {\"6 times\"}\n      </tspan>\n      <tspan x={0} y={22} className=\"stt0 stt1\">\n        {\"1 time\"}\n      </tspan>\n      <tspan x={0} y={44} className=\"stt0 stt1\">\n        {\"7 times\"}\n      </tspan>\n      <tspan x={0} y={66} className=\"stt0 stt1\">\n        {\"2 times\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 890.5398 138.9385)\">\n      <tspan x={0} y={0} className=\"stt0 stt1\">\n        {\"2 times\"}\n      </tspan>\n      <tspan x={0} y={22} className=\"stt0 stt1\">\n        {\"6 times\"}\n      </tspan>\n      <tspan x={0} y={44} className=\"stt0 stt1\">\n        {\"6 times\"}\n      </tspan>\n      <tspan x={0} y={66} className=\"stt0 stt1\">\n        {\"5 times\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1074.9792 138.9385)\">\n      <tspan x={0} y={0} className=\"stt0 stt1\">\n        {\"3 times\"}\n      </tspan>\n      <tspan x={0} y={22} className=\"stt0 stt1\">\n        {\"3 times\"}\n      </tspan>\n      <tspan x={0} y={44} className=\"stt0 stt1\">\n        {\"8 times\"}\n      </tspan>\n      <tspan x={0} y={66} className=\"stt0 stt1\">\n        {\"0 time\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(1 0 0 1 1474.8171 138.416)\">\n      <tspan x={0} y={0} className=\"stt0 stt1\">\n        {\"5 times\"}\n      </tspan>\n      <tspan x={0} y={22} className=\"stt0 stt1\">\n        {\"3 times\"}\n      </tspan>\n      <tspan x={0} y={44} className=\"stt0 stt1\">\n        {\"5 times\"}\n      </tspan>\n      <tspan x={0} y={66} className=\"stt0 stt1\">\n        {\"6 times\"}\n      </tspan>\n    </text>\n    <rect x={18.6} y={10.6} className=\"stt2\" width={1575} height={102} />\n    <g>\n      <rect x={33.3} y={20} className=\"stt3\" width={1542.1} height={5.2} />\n      <rect x={33.3} y={43.1} className=\"stt4\" width={1542.1} height={5.2} />\n      <rect x={33.5} y={66.5} className=\"stt5\" width={1542.1} height={5.2} />\n      <rect x={33.5} y={89.7} className=\"stt6\" width={1542.1} height={5.2} />\n    </g>\n    {/* 차트 안 부분 */}\n    <path\n      className=\"stt7\"\n      d=\"M120.5,103.5H47.8c-5.3,0-9.6-4.3-9.6-9.6V21.2c0-5.3,4.3-9.6,9.6-9.6h72.7c5.3,0,9.6,4.3,9.6,9.6v72.7 C130,99.2,125.8,103.5,120.5,103.5z\"\n    />\n    <path\n      className=\"stt7\"\n      d=\"M266.9,103.5h-96.2c-5.3,0-9.6-4.3-9.6-9.6V21.7c0-5.3,4.3-9.6,9.6-9.6h96.2c5.3,0,9.6,4.3,9.6,9.6v72.2 C276.4,99.2,272.1,103.5,266.9,103.5z\"\n    />\n    <path\n      className=\"stt7\"\n      d=\"M456.7,103.5H300c-5.3,0-9.6-4.3-9.6-9.6V21.2c0-5.3,4.3-9.6,9.6-9.6h156.7c5.3,0,9.6,4.3,9.6,9.6v72.7 C466.3,99.2,462,103.5,456.7,103.5z\"\n    />\n    <path\n      className=\"stt7\"\n      d=\"M590.1,57h-93.6c-5.3,0-9.6-4.3-9.6-9.6V21.2c0-5.3,4.3-9.6,9.6-9.6h93.6c5.3,0,9.6,4.3,9.6,9.6v26.3 C599.7,52.8,595.4,57,590.1,57z\"\n    />\n    <path\n      className=\"stt7\"\n      d=\"M859.9,103.5H687c-5.3,0-9.6-4.3-9.6-9.6V21.2c0-5.3,4.3-9.6,9.6-9.6h172.9c5.3,0,9.6,4.3,9.6,9.6v72.7 C869.5,99.2,865.2,103.5,859.9,103.5z\"\n    />\n    <path\n      className=\"stt7\"\n      d=\"M1068,81H899.3c-5.3,0-9.6-4.3-9.6-9.6V20.7c0-5.3,4.3-9.6,9.6-9.6H1068c5.3,0,9.6,4.3,9.6,9.6v50.8 C1077.5,76.8,1073.3,81,1068,81z\"\n    />\n    <path\n      className=\"stt7\"\n      d=\"M1431.3,104.5h-168.7c-5.3,0-9.6-4.3-9.6-9.6V21.2c0-5.3,4.3-9.6,9.6-9.6h168.7c5.3,0,9.6,4.3,9.6,9.6V95 C1440.9,100.2,1436.6,104.5,1431.3,104.5z\"\n    />\n    <path\n      className=\"stt7\"\n      d=\"M1566.8,104.5h-81.1c-5.3,0-9.6-4.3-9.6-9.6V21.2c0-5.3,4.3-9.6,9.6-9.6h81.1c5.3,0,9.6,4.3,9.6,9.6V95 C1576.4,100.2,1572.1,104.5,1566.8,104.5z\"\n    />\n    <rect x={1267.1} y={86} className=\"stt8\" width={57.5} height={12.8} />\n    <rect x={1354} y={85.9} className=\"stt8\" width={52.6} height={12.8} />\n    <rect x={1529} y={86.2} className=\"stt8\" width={43.9} height={12.8} />\n    <rect x={697.6} y={85.6} className=\"stt8\" width={56.8} height={12.8} />\n    <rect x={760.1} y={85.5} className=\"stt8\" width={93.3} height={12.8} />\n    <rect x={294.6} y={85.9} className=\"stt8\" width={96.6} height={12.8} />\n    <rect x={415.7} y={85.9} className=\"stt8\" width={44.5} height={12.8} />\n    <rect x={187.4} y={85.9} className=\"stt8\" width={53.8} height={12.8} />\n    <rect x={42.2} y={86} className=\"stt8\" width={36.8} height={12.8} />\n    <rect x={86.6} y={15.8} className=\"stt9\" width={40.1} height={12.8} />\n    <rect x={1300.5} y={16.8} className=\"stt9\" width={66.8} height={12.8} />\n    <rect x={1479.8} y={17} className=\"stt9\" width={54.1} height={12.8} />\n    <rect x={973.8} y={16.9} className=\"stt9\" width={100.8} height={12.8} />\n    <rect x={739.3} y={17} className=\"stt9\" width={95.8} height={12.8} />\n    <rect x={489.7} y={17} className=\"stt9\" width={46.4} height={12.8} />\n    <rect x={218} y={17} className=\"stt9\" width={49.9} height={12.8} />\n    <rect x={309.9} y={16.9} className=\"stt9\" width={124.4} height={12.8} />\n    <rect x={168.5} y={16.7} className=\"stt9\" width={46.4} height={12.8} />\n    <text transform=\"matrix(0.9587 0 0 1 88.9567 21.0914)\">\n      <tspan x={0} y={0} className=\"stt10 stt0 stt11\">\n        {\"Underesttimation \"}\n      </tspan>\n      <tspan x={0} y={5.2} className=\"stt10 stt0 stt11\">\n        {\"of security threats\"}\n      </tspan>\n    </text>\n    <rect x={60.6} y={39.1} className=\"stt12\" width={65.9} height={12.8} />\n    <text transform=\"matrix(0.9048 0 0 1 62.1424 43.9254)\">\n      <tspan x={0} y={0} className=\"stt4 stt0 stt13\">\n        {\"500,000 Troops Unsusttainable, \"}\n      </tspan>\n      <tspan x={0} y={5.7} className=\"stt4 stt0 stt13\">\n        {\"Demographic Cliff\"}\n      </tspan>\n    </text>\n    <rect x={1255.6} y={62.9} className=\"stt14\" width={63.3} height={12.8} />\n    <rect x={1329.8} y={39.8} className=\"stt15\" width={106.4} height={12.8} />\n    <rect x={1511.6} y={63.2} className=\"stt14\" width={49} height={12.8} />\n    <rect x={989.2} y={39.4} className=\"stt15\" width={84.9} height={12.8} />\n    <rect x={892.6} y={39.4} className=\"stt15\" width={62.1} height={12.8} />\n    <rect x={905.2} y={63} className=\"stt14\" width={122.5} height={12.8} />\n    <g>\n      <text transform=\"matrix(0.9048 0 0 1 762.6777 90.6489)\">\n        <tspan x={0} y={0} className=\"stt16 stt0 stt17\">\n          {\"Job mixing sttage, transition between special \"}\n        </tspan>\n        <tspan x={0} y={5.8} className=\"stt16 stt0 stt17\">\n          {\"forces and professional soldiers\"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(0.9048 0 0 1 1269.0715 91.1128)\">\n        <tspan x={0} y={0} className=\"stt16 stt0 stt18\">\n          {\"Budget adjusttment through \"}\n        </tspan>\n        <tspan x={0} y={5.6} className=\"stt16 stt0 stt18\">\n          {\"unit consolidation\"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(0.9048 0 0 1 1356.4791 91.1128)\">\n        <tspan x={0} y={0} className=\"stt16 stt0 stt18\">\n          {\"Maintain core \"}\n        </tspan>\n        <tspan x={0} y={5.6} className=\"stt16 stt0 stt18\">\n          {\"maneuvering equipment\"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(0.9048 0 0 1 1532.1721 91.1128)\">\n        <tspan x={0} y={0} className=\"stt16 stt0 stt18\">\n          {\"Transition to  \"}\n        </tspan>\n        <tspan x={0} y={5.6} className=\"stt16 stt0 stt18\">\n          {\"professional soldiers\"}\n        </tspan>\n      </text>\n    </g>\n    <rect x={688.5} y={63} className=\"stt14\" width={54.2} height={12.8} />\n    <rect x={521.5} y={39.5} className=\"stt15\" width={74.5} height={12.8} />\n    <g>\n      <text\n        transform=\"matrix(0.9781 0 0 1 523.1106 46.7104)\"\n        className=\"stt4 stt0 stt19\"\n      >\n        {\"Elite infantry, provide 210,000 jobs\"}\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(0.9781 0 0 1 895.3335 44.5464)\">\n        <tspan x={0} y={0} className=\"stt4 stt0 stt19\">\n          {\"Military reorganization\"}\n        </tspan>\n        <tspan x={0} y={5.2} className=\"stt4 stt0 stt19\">\n          {\"centered on officers \"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(0.9781 0 0 1 991.8525 44.5464)\">\n        <tspan x={0} y={0} className=\"stt4 stt0 stt19\">\n          {\"Female preference recruitment systtem, \"}\n        </tspan>\n        <tspan x={0} y={5.2} className=\"stt4 stt0 stt19\">\n          {\"salary systtem change  \"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(0.9781 0 0 1 1332.6628 44.9459)\">\n        <tspan x={0} y={0} className=\"stt4 stt0 stt20\">\n          {\"Difficulty in reducing the budget, \"}\n        </tspan>\n        <tspan x={0} y={5} className=\"stt4 stt0 stt20\">\n          {\"maintaining conscription Weakening defense power\"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text\n        transform=\"matrix(0.9048 0 0 1 220.0312 24.8564)\"\n        className=\"stt10 stt0 stt21\"\n      >\n        {\"Difficulties in self-defense\"}\n      </text>\n    </g>\n    <g>\n      <text\n        transform=\"matrix(0.9048 0 0 1 491.3352 24.856)\"\n        className=\"stt10 stt0 stt21\"\n      >\n        {\"A certain amount of job\"}\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(0.9048 0 0 1 330.0588 21.5068)\">\n        <tspan x={0} y={0} className=\"stt10 stt0 stt21\">\n          {\"Unpredictable supply and demand of troops, \"}\n        </tspan>\n        <tspan x={0} y={5.2} className=\"stt10 stt0 stt21\">\n          {\"difficulty in recruiting during economic boom\"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text\n        transform=\"matrix(0.9048 0 0 1 743.3804 24.8013)\"\n        className=\"stt10 stt0 stt21\"\n      >\n        {\"Difficulty in retaining soldiers, limited job market\"}\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(0.9048 0 0 1 976.5809 22.1646)\">\n        <tspan x={0} y={0} className=\"stt10 stt0 stt21\">\n          {\"Men entering the workforce two years late, \"}\n        </tspan>\n        <tspan x={0} y={5.2} className=\"stt10 stt0 stt21\">\n          {\"violating equal rights\"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(0.9048 0 0 1 1303.4598 22.1646)\">\n        <tspan x={0} y={0} className=\"stt10 stt0 stt21\">\n          {\"Unable to adjustt defense budget, \"}\n        </tspan>\n        <tspan x={0} y={5.2} className=\"stt10 stt0 stt21\">\n          {\"2 trillion won in personnel costts\"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(0.9048 0 0 1 1482.2146 22.1646)\">\n        <tspan x={0} y={0} className=\"stt10 stt0 stt21\">\n          {\"Need to improve treatment \"}\n        </tspan>\n        <tspan x={0} y={5.2} className=\"stt10 stt0 stt21\">\n          {\"of soldiers\"}\n        </tspan>\n      </text>\n    </g>\n    <rect x={381.1} y={63} className=\"stt14\" width={66} height={12.8} />\n    <rect x={343.4} y={39.2} className=\"stt15\" width={63.8} height={12.8} />\n    <g>\n      <text transform=\"matrix(0.9048 0 0 1 190.0822 90.9879)\">\n        <tspan x={0} y={0} className=\"stt16 stt0 stt22\">\n          {\"Decline in youth population, \"}\n        </tspan>\n        <tspan x={0} y={5} className=\"stt16 stt0 stt22\">\n          {\"increase in military misfits\"}\n        </tspan>\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(0.9048 0 0 1 298.7792 90.9879)\">\n        <tspan x={0} y={0} className=\"stt16 stt0 stt22\">\n          {\"Unable to maintain 500,000 troops, \"}\n        </tspan>\n        <tspan x={0} y={5} className=\"stt16 stt0 stt22\">\n          {\"unmanned warfare\"}\n        </tspan>\n      </text>\n    </g>\n    <rect x={191.1} y={62.9} className=\"stt14\" width={76.8} height={12.8} />\n    <text transform=\"matrix(0.9048 0 0 1 192.7844 67.7929)\">\n      <tspan x={0} y={0} className=\"stt23 stt0 stt24\">\n        {\"Recruitment systtem for general elections, \"}\n      </tspan>\n      <tspan x={0} y={5} className=\"stt23 stt0 stt24\">\n        {\"incomplete military policy review\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(0.9048 0 0 1 384.0538 67.7929)\">\n      <tspan x={0} y={0} className=\"stt23 stt0 stt24\">\n        {\"Need for qualitative improvement \"}\n      </tspan>\n      <tspan x={0} y={5} className=\"stt23 stt0 stt24\">\n        {\"and modernization\"}\n      </tspan>\n    </text>\n    <text\n      transform=\"matrix(0.9048 0 0 1 691.2057 70.8967)\"\n      className=\"stt23 stt0 stt25\"\n    >\n      {\"Limited social sttatus\"}\n    </text>\n    <text\n      transform=\"matrix(0.9048 0 0 1 1258.0261 70.8969)\"\n      className=\"stt23 stt0 stt25\"\n    >\n      {\"Excessive defense budget\"}\n    </text>\n    <text transform=\"matrix(0.9048 0 0 1 1513.6693 68.3844)\">\n      <tspan x={0} y={0} className=\"stt23 stt0 stt26\">\n        {\"Eliminate bad habits, \"}\n      </tspan>\n      <tspan x={0} y={5.5} className=\"stt23 stt0 stt26\">\n        {\"improve military culture\"}\n      </tspan>\n    </text>\n    <text transform=\"matrix(0.9048 0 0 1 906.7999 68.1227)\">\n      <tspan x={0} y={0} className=\"stt23 stt0 stt27\">\n        {\"Attrition of reservistts, insufficient number of \"}\n      </tspan>\n      <tspan x={0} y={5.7} className=\"stt23 stt0 stt27\">\n        {\"noncommissioned officers, rear-guarding of female soldiers\"}\n      </tspan>\n    </text>\n    <g>\n      <text transform=\"matrix(0.9048 0 0 1 171.5255 21.8512)\">\n        <tspan x={0} y={0} className=\"stt10 stt0 stt21\">\n          {\"Inaction in preparing \"}\n        </tspan>\n        <tspan x={0} y={5.2} className=\"stt10 stt0 stt21\">\n          {\"for surveillance\"}\n        </tspan>\n      </text>\n    </g>\n    <rect x={163.2} y={40.2} className=\"stt12\" width={35} height={12.8} />\n    <g>\n      <text\n        transform=\"matrix(0.9048 0 0 1 167.2165 47.8141)\"\n        className=\"stt4 stt0 stt28\"\n      >\n        {\"Smart Army\"}\n      </text>\n    </g>\n    <rect x={47.4} y={63} className=\"stt14\" width={50.6} height={12.8} />\n    <text\n      transform=\"matrix(0.9048 0 0 1 48.7585 70.4)\"\n      className=\"stt23 stt0 stt29\"\n    >\n      {\"North Korean Nuclear Threat\"}\n    </text>\n    <rect x={1504.3} y={39.9} className=\"stt15\" width={56.9} height={12.8} />\n    <g>\n      <text\n        transform=\"matrix(0.9762 0 0 1 8.4871 23.9088)\"\n        className=\"stt30 stt31 stt32\"\n        xmlSpace=\"preserve\"\n      >\n        {\"  LJS\"}\n      </text>\n    </g>\n    <g>\n      <text\n        transform=\"matrix(0.9762 0 0 1 8.7911 70.1899)\"\n        className=\"stt30 stt31 stt32\"\n        xmlSpace=\"preserve\"\n      >\n        {\" PHR\"}\n      </text>\n    </g>\n    <g>\n      <text\n        transform=\"matrix(0.9762 0 0 1 9.1106 93.0067)\"\n        className=\"stt30 stt31 stt32\"\n        xmlSpace=\"preserve\"\n      >\n        {\" KJD\"}\n      </text>\n    </g>\n    <g>\n      <text\n        transform=\"matrix(0.9822 0 0 1 8.7912 46.7106)\"\n        className=\"stt30 stt31 stt32\"\n        xmlSpace=\"preserve\"\n      >\n        {\"  JKT\"}\n      </text>\n    </g>\n    <rect x={9.6} y={177.5} className=\"stt23\" width={6.9} height={6.9} />\n    <rect x={55} y={177.5} className=\"stt34\" width={6.9} height={6.9} />\n    <rect x={9.6} y={199.3} className=\"stt23\" width={6.9} height={6.9} />\n    <rect x={55} y={199.5} className=\"stt35\" width={6.9} height={6.9} />\n    <rect x={9.6} y={133.9} className=\"stt3\" width={6.9} height={6.9} />\n    <rect x={55} y={133.9} className=\"stt34\" width={6.9} height={6.9} />\n    <rect x={9.6} y={155.6} className=\"stt3\" width={6.9} height={6.9} />\n    <rect x={55} y={155.8} className=\"stt35\" width={6.9} height={6.9} />\n    <g>\n      <text\n        transform=\"matrix(0.9048 0 0 1 44.8876 93.2448)\"\n        className=\"stt16 stt0 stt36\"\n      >\n        {\"Demographic Cliff\"}\n      </text>\n    </g>\n    <g>\n      <text\n        transform=\"matrix(0.9048 0 0 1 418.5161 93.4811)\"\n        className=\"stt16 stt0 stt17\"\n      >\n        {\"Provide social value\"}\n      </text>\n    </g>\n    <g>\n      <text transform=\"matrix(0.9048 0 0 1 700.0448 90.9882)\">\n        <tspan x={0} y={0} className=\"stt16 stt0 stt17\">\n          {\"Reduction of bad habits, \"}\n        </tspan>\n        <tspan x={0} y={5.8} className=\"stt16 stt0 stt17\">\n          {\"self-development benefits\"}\n        </tspan>\n      </text>\n    </g>\n    <text transform=\"matrix(0.9781 0 0 1 348.0743 44.5465)\">\n      <tspan x={0} y={0} className=\"stt4 stt0 stt19\">\n        {\"Military qualification, \"}\n      </tspan>\n      <tspan x={0} y={5.2} className=\"stt4 stt0 stt19\">\n        {\"career breaks problem solved\"}\n      </tspan>\n    </text>\n    <g>\n      <text\n        transform=\"matrix(0.9781 0 0 1 1506.838 47.2965)\"\n        className=\"stt4 stt0 stt37\"\n      >\n        {\"Unsusttainable Conscription\"}\n      </text>\n    </g>\n    <rect x={88.9} y={129.6} className=\"stt38\" width={100} height={12.5} />\n    <rect x={88.9} y={152} className=\"stt38\" width={100} height={12.5} />\n    <rect x={88.9} y={174.5} className=\"stt38\" width={100} height={12.5} />\n    <rect x={88.9} y={196.9} className=\"stt38\" width={100} height={12.5} />\n    <rect x={88.7} y={129.6} className=\"stt39\" width={52.2} height={12.5} />\n    <rect x={88.7} y={152} className=\"stt39\" width={42.3} height={12.5} />\n    <rect x={88.7} y={174.5} className=\"stt39\" width={31.3} height={12.5} />\n    <rect x={88.7} y={196.9} className=\"stt39\" width={42.3} height={12.5} />\n    <rect x={268.3} y={129.1} className=\"stt38\" width={100} height={12.5} />\n    <rect x={268.3} y={151.5} className=\"stt38\" width={100} height={12.5} />\n    <rect x={268.3} y={173.9} className=\"stt38\" width={100} height={12.5} />\n    <rect x={268.3} y={196.4} className=\"stt38\" width={100} height={12.5} />\n    <rect x={267.9} y={129.1} className=\"stt39\" width={40} height={12.5} />\n    <rect x={268.4} y={151.5} className=\"stt39\" width={80} height={12.5} />\n    <rect x={268.4} y={173.9} className=\"stt39\" width={20} height={12.5} />\n    <rect x={268.6} y={196.4} className=\"stt39\" width={50} height={12.5} />\n    <rect x={410} y={128.5} className=\"stt38\" width={100} height={12.5} />\n    <rect x={410} y={151} className=\"stt38\" width={100} height={12.5} />\n    <rect x={410} y={173.4} className=\"stt38\" width={100} height={12.5} />\n    <rect x={410} y={195.9} className=\"stt38\" width={100} height={12.5} />\n    <rect x={410.2} y={128.5} className=\"stt39\" width={70} height={12.5} />\n    <rect x={410.1} y={151} className=\"stt39\" width={90} height={12.5} />\n    <rect x={410} y={173.4} className=\"stt39\" width={40} height={12.5} />\n    <rect x={409.9} y={195.9} className=\"stt39\" width={70} height={12.5} />\n    <rect x={618.4} y={128.5} className=\"stt38\" width={100} height={12.5} />\n    <rect x={618.4} y={151} className=\"stt38\" width={100} height={12.5} />\n    <rect x={618.4} y={173.4} className=\"stt38\" width={100} height={12.5} />\n    <rect x={618.4} y={195.9} className=\"stt38\" width={100} height={12.5} />\n    <rect x={618} y={128.5} className=\"stt39\" width={60} height={12.5} />\n    <rect x={617.7} y={195.9} className=\"stt39\" width={20} height={12.5} />\n    <rect x={782} y={129.1} className=\"stt38\" width={100} height={12.5} />\n    <rect x={782} y={151.5} className=\"stt38\" width={100} height={12.5} />\n    <rect x={782} y={173.9} className=\"stt38\" width={100} height={12.5} />\n    <rect x={782} y={196.4} className=\"stt38\" width={100} height={12.5} />\n    <rect x={782.1} y={129.1} className=\"stt39\" width={20} height={12.5} />\n    <rect x={782.1} y={151.5} className=\"stt39\" width={60} height={12.5} />\n    <rect x={782.1} y={173.9} className=\"stt39\" width={60} height={12.5} />\n    <rect x={782.1} y={196.4} className=\"stt39\" width={50} height={12.5} />\n    <rect x={966.5} y={129.1} className=\"stt38\" width={100} height={12.6} />\n    <rect x={966.5} y={151.6} className=\"stt38\" width={100} height={12.6} />\n    <rect x={966.5} y={174.2} className=\"stt38\" width={100} height={12.6} />\n    <rect x={966.5} y={196.7} className=\"stt38\" width={100} height={12.6} />\n    <rect x={966.3} y={129.1} className=\"stt39\" width={30} height={12.5} />\n    <rect x={966.3} y={151.5} className=\"stt39\" width={30} height={12.5} />\n    <rect x={966.3} y={173.9} className=\"stt39\" width={80} height={12.5} />\n    <rect x={1366.3} y={128.5} className=\"stt38\" width={100} height={12.5} />\n    <rect x={1366.3} y={151} className=\"stt38\" width={100} height={12.5} />\n    <rect x={1366.3} y={173.4} className=\"stt38\" width={100} height={12.5} />\n    <rect x={1366.3} y={195.9} className=\"stt38\" width={100} height={12.5} />\n    <rect x={1366.1} y={128.5} className=\"stt39\" width={50} height={12.5} />\n    <rect x={1366.1} y={151} className=\"stt39\" width={30} height={12.5} />\n    <rect x={1366.1} y={173.4} className=\"stt39\" width={50} height={12.5} />\n    <rect x={1366.1} y={195.9} className=\"stt39\" width={60} height={12.5} />\n    <rect x={617.8} y={150.8} className=\"stt39\" width={10} height={12.5} />\n    <rect x={618.1} y={173.5} className=\"stt39\" width={69.6} height={12.5} />\n  </svg>\n);\nexport default SubChart;\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./ConceptualRecurrencePlot.scss\";\r\nimport _ from \"lodash\";\r\nimport { SimilarityBlock, UtteranceObjectForDrawing } from \"./interfaces\";\r\nimport { makeEngagementGroups } from \"./DataStructureMaker/makeEngagementGroups\";\r\nimport { D3Drawer } from \"./Drawers/D3Drawer\";\r\nimport ConceptualMapModal, {\r\n  ConceptualMapModalRef,\r\n} from \"./ConceptualMapModal/ConceptualMapModal\";\r\nimport Controllers from \"./Controllers/Controllers\";\r\nimport store from \"../../redux/store\";\r\nimport { groupEGsMaker } from \"./DataStructureMaker/GroupEGsMaker\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport TranscriptViewer from \"./TranscriptViewer/TranscriptViewer\";\r\nimport { CombinedState } from \"redux\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StandardSimilarityScoreState } from \"../../redux/reducers/standardSimilarityScoreReducer\";\r\nimport {\r\n  DebateDataSet,\r\n  EvaluationDataSet,\r\n} from \"../../interfaces/DebateDataInterface\";\r\nimport { DataStructureManager } from \"./DataStructureMaker/DataStructureManager\";\r\nimport DataImporter, { DebateName, TermType } from \"./DataImporter\";\r\nimport { CHANGE_STANDARD_SIMILARITY_SCORE } from \"../../redux/actionTypes\";\r\nimport CombinedEGsMaker from \"./DataStructureMaker/CombinedEGsMaker\";\r\nimport { extractKeytermsFromEngagementGroup } from \"./DataStructureMaker/extractTermsFromEngagementGroup\";\r\nimport ParticipantTooltip from \"../../components/ParticipantTooltip/ParticipantTooltip\";\r\nimport SimilarityTooltip from \"../../components/SimilarityTooltip/SimilarityTooltip\";\r\nimport Header from \"./../Header/Header\";\r\nimport HeaderTwo from \"./../Header/HeaderTwo\";\r\nimport style from \"./rootStyle.module.scss\";\r\n//import Bubble from \"./Bubble\";\r\nimport BubbleEng from \"./BubbleEng\";\r\nimport * as d3 from \"d3\";\r\nimport Outline from \"./Outline\";\r\nimport SubChart from \"./SubChart\";\r\n\r\nfunction ConceptualRecurrencePlot() {\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const debateNameOfQuery = query.get(\"debate_name\") as DebateName;\r\n  const termTypeOfQuery = query.get(\"term_type\") as TermType;\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [debateDataset, setDebateDataset] = useState<DebateDataSet | null>(\r\n    null\r\n  );\r\n  const [\r\n    dataStructureManager,\r\n    setDataStructureManager,\r\n  ] = useState<DataStructureManager | null>(null);\r\n  const [\r\n    evaluationDataSet,\r\n    setEvaluationDataSet,\r\n  ] = useState<EvaluationDataSet | null>(null);\r\n  const [\r\n    combinedEGsMaker,\r\n    setCombinedEGsMaker,\r\n  ] = useState<CombinedEGsMaker | null>(null);\r\n  const [d3Drawer, setD3Drawer] = useState<D3Drawer | null>(null);\r\n  const conceptualMapModalRef = React.useRef<ConceptualMapModalRef>(null);\r\n  const standardSimilarityScore = useSelector<\r\n    CombinedState<{\r\n      standardSimilarityScoreReducer: StandardSimilarityScoreState;\r\n    }>,\r\n    number\r\n  >((state) => state.standardSimilarityScoreReducer.standardSimilarityScore);\r\n  const dispatch = useDispatch();\r\n  const d3Container = useRef<SVGSVGElement>(null);\r\n  // variables for tooltip\r\n  const [\r\n    mouseoveredUtterance,\r\n    setMouseoveredUtterance,\r\n  ] = useState<UtteranceObjectForDrawing | null>(null);\r\n  const [\r\n    mouseoveredSimilarity,\r\n    setMouseoveredSimilarity,\r\n  ] = useState<SimilarityBlock | null>(null);\r\n  const [transform, setTransform] = useState<d3.ZoomTransform | null>(null);\r\n  const [tooltipVisible, setTooltipVisible] = useState<boolean>(false);\r\n  const [sortOrder, setSortOrder] = React.useState(\"index\");\r\n\r\n  const handleSortOrderChange = (\r\n    event: React.ChangeEvent<HTMLSelectElement>\r\n  ) => {\r\n    const newSortOrder = event.target.value;\r\n    console.log(\"New sortOrder: \", newSortOrder); // 확인 로깅\r\n    setSortOrder(newSortOrder);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"D3Drawer: \", d3Drawer); // 확인 로깅\r\n    if (d3Drawer) {\r\n      if (sortOrder === \"disagreeScale\") {\r\n        d3Drawer.participantBlocksDrawer.sortByFindDis();\r\n      } else if (sortOrder === \"index\") {\r\n        d3Drawer.participantBlocksDrawer.sortByIndex();\r\n      }\r\n\r\n      d3Drawer.participantBlocksDrawer.update();\r\n      d3Drawer.similarityBlocksDrawer.update();\r\n    }\r\n  }, [sortOrder, d3Drawer]);\r\n\r\n  // Import Debate Data\r\n  useEffect(() => {\r\n    if (!dataStructureManager) {\r\n      if (\r\n        debateNameOfQuery === \"sample\" ||\r\n        debateNameOfQuery === \"기본소득\" ||\r\n        debateNameOfQuery === \"정시확대\" ||\r\n        debateNameOfQuery === \"모병제\" ||\r\n        debateNameOfQuery === \"기본소득clipped\" ||\r\n        debateNameOfQuery === \"정시확대clipped\" ||\r\n        debateNameOfQuery === \"모병제clipped\"\r\n      ) {\r\n        // const debateDataset = new DataImporter(\r\n        //   debateNameOfQuery,\r\n        //   termTypeOfQuery\r\n        // ).debateDataSet as DebateDataSet;\r\n        const dataImporter = new DataImporter(\r\n          debateNameOfQuery,\r\n          termTypeOfQuery\r\n        );\r\n\r\n        const dataStructureMaker = new DataStructureManager(\r\n          debateNameOfQuery,\r\n          dataImporter.debateDataSet!\r\n        );\r\n\r\n        console.log(\"dataImporter\", dataImporter);\r\n        console.log(\"dataStructureMaker\", dataStructureMaker);\r\n\r\n        const combinedEGsMaker = new CombinedEGsMaker(\r\n          dataStructureMaker.dataStructureSet.similarityBlockManager.similarityBlockGroup,\r\n          dataImporter.debateDataSet!.utteranceObjects\r\n        );\r\n\r\n        dispatch({\r\n          type: CHANGE_STANDARD_SIMILARITY_SCORE,\r\n          payload: {\r\n            standardSimilarityScore:\r\n              dataStructureMaker.dataStructureSet.maxSimilarityScore,\r\n          },\r\n        });\r\n\r\n        setDebateDataset(dataImporter.debateDataSet);\r\n        setDataStructureManager(dataStructureMaker);\r\n        setCombinedEGsMaker(combinedEGsMaker);\r\n        setEvaluationDataSet(dataImporter.evaluationDataSet);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (dataStructureManager && debateDataset) {\r\n      const dataStructureSet = dataStructureManager.dataStructureSet;\r\n      const datasetOfManualEGs = dataStructureManager.datasetOfManualEGs;\r\n      const manualBigEGs = datasetOfManualEGs.manualBigEGs;\r\n      const manualBigEGTitles = datasetOfManualEGs.manualBigEGTitles;\r\n      const manualMiddleEGs = datasetOfManualEGs.manualMiddleEGs;\r\n      const manualMiddleEGTitles = datasetOfManualEGs.manualMiddleEGTitles;\r\n      const manualSmallEGs = datasetOfManualEGs.manualSmallEGs;\r\n      const manualSmallEGTitles = datasetOfManualEGs.manualSmallEGTitles;\r\n      const maxSimilarityScore = dataStructureSet.maxSimilarityScore;\r\n      const topicGroups = combinedEGsMaker!.makeByNumOfSegments(4);\r\n      const svg = d3.select(d3Container.current);\r\n      // settings of d3Drawer\r\n      const d3Drawer = new D3Drawer(\r\n        debateDataset,\r\n        dataStructureSet,\r\n        termTypeOfQuery\r\n      );\r\n\r\n      d3Drawer.zoomListener = (transform) => {\r\n        setTransform(transform);\r\n      };\r\n      d3Drawer.participantBlocksDrawer.mouseoverListener = (\r\n        mouseEvent,\r\n        utteranceObjectForDrawing\r\n      ) => {\r\n        setMouseoveredUtterance(utteranceObjectForDrawing);\r\n        setTooltipVisible(true);\r\n      };\r\n      d3Drawer.participantBlocksDrawer.mouseoutLisener = () => {};\r\n      d3Drawer.similarityBlocksDrawer.mouseoverListener = (\r\n        mouseEvent,\r\n        similarityBlock\r\n      ) => {\r\n        setMouseoveredSimilarity(similarityBlock);\r\n        setTooltipVisible(true);\r\n      };\r\n      d3Drawer.similarityBlocksDrawer.mouseoutLisener = () => {};\r\n\r\n      // Engagement Group Drawer's Settings\r\n      d3Drawer.topicGroupsDrawer.topicGroups = topicGroups;\r\n      d3Drawer.topicGroupsDrawer.onTitleClicked = (\r\n        mouseEvent: MouseEvent,\r\n        engagementGroup: SimilarityBlock[][],\r\n        engagementGroupIndex: number\r\n      ) => {\r\n        const extractedKeytermObjects = extractKeytermsFromEngagementGroup(\r\n          engagementGroup,\r\n          debateDataset.conceptMatrixTransposed,\r\n          debateDataset.keytermObjects,\r\n          10\r\n        );\r\n        // openModal에 의해 그려지는가??\r\n        conceptualMapModalRef.current?.openModal(\r\n          `${_.map(extractedKeytermObjects, (o) => o.name)}`,\r\n          engagementGroup\r\n        );\r\n      };\r\n      d3Drawer.topicGroupsDrawer.visible = false;\r\n\r\n      // Manual Small Engagement Group Drawer's Settings\r\n      d3Drawer.manualSmallTGsDrawer.topicGroups = manualSmallEGs;\r\n      d3Drawer.manualSmallTGsDrawer.topicGroupTitles = manualSmallEGTitles;\r\n      d3Drawer.manualSmallTGsDrawer.onTitleClicked = (\r\n        mouseEvent: MouseEvent,\r\n        engagementGroup: SimilarityBlock[][],\r\n        engagementGroupIndex: number\r\n      ) => {\r\n        conceptualMapModalRef.current?.openModal(\r\n          `Manual Small Engagement Group ${engagementGroupIndex}`,\r\n          engagementGroup\r\n        );\r\n      };\r\n      d3Drawer.manualSmallTGsDrawer.visible = true;\r\n\r\n      // Manual Middle Engagement Group Drawer's Settings\r\n      d3Drawer.manualMiddleTGsDrawer.topicGroups = manualMiddleEGs;\r\n      d3Drawer.manualMiddleTGsDrawer.topicGroupTitles = manualMiddleEGTitles;\r\n      d3Drawer.manualMiddleTGsDrawer.onTitleClicked = (\r\n        mouseEvent: MouseEvent,\r\n        engagementGroup: SimilarityBlock[][],\r\n        engagementGroupIndex: number\r\n      ) => {\r\n        conceptualMapModalRef.current?.openModal(\r\n          `Manual Middle Engagement Group ${engagementGroupIndex}`,\r\n          engagementGroup\r\n        );\r\n      };\r\n      d3Drawer.manualMiddleTGsDrawer.visible = true;\r\n\r\n      // Manual Big Engagement Group Drawer's Settings\r\n      d3Drawer.manualBigTGsDrawer.topicGroups = manualBigEGs;\r\n      d3Drawer.manualBigTGsDrawer.topicGroupTitles = manualBigEGTitles;\r\n      d3Drawer.manualBigTGsDrawer.onTitleClicked = (\r\n        mouseEvent: MouseEvent,\r\n        engagementGroup: SimilarityBlock[][],\r\n        engagementGroupIndex: number\r\n      ) => {\r\n        conceptualMapModalRef.current?.openModal(\r\n          `Manual Big Engagement Group ${engagementGroupIndex}`,\r\n          engagementGroup\r\n        );\r\n      };\r\n      d3Drawer.manualBigTGsDrawer.visible = false;\r\n\r\n      d3Drawer.manualPeopleTGsDrawer.onTitleClicked = (\r\n        mouseEvent: MouseEvent,\r\n        engagementGroup: SimilarityBlock[][],\r\n        engagementGroupIndex: number\r\n      ) => {\r\n        conceptualMapModalRef.current?.openModal(\r\n          `Manual People Engagement Group ${engagementGroupIndex}`,\r\n          engagementGroup\r\n        );\r\n      };\r\n\r\n      d3Drawer.centerConceptualRecurrentPlot();\r\n      d3Drawer.participantBlocksDrawer.update();\r\n      d3Drawer.insistenceMarkersDrawer.update();\r\n      d3Drawer!.similarityBlocksDrawer.standardHighPointOfSimilarityScore = standardSimilarityScore;\r\n      d3Drawer.similarityBlocksDrawer.update();\r\n      d3Drawer.topicGroupsDrawer.update();\r\n      d3Drawer.manualSmallTGsDrawer.update();\r\n      d3Drawer.manualMiddleTGsDrawer.update();\r\n      d3Drawer.manualBigTGsDrawer.update();\r\n      d3Drawer.manualPeopleTGsDrawer.update();\r\n      //console.log(\"d3Drawer\", d3Drawer);\r\n\r\n      setD3Drawer(d3Drawer);\r\n    }\r\n  }, [dataStructureManager, debateDataset, d3Container.current]);\r\n\r\n  return (\r\n    <div className=\"root-div\" style={{ overflow: \"hidden\" }}>\r\n      <Header isOpen={isOpen} setIsOpen={setIsOpen} />\r\n      <HeaderTwo isOpen={isOpen} setIsOpen={setIsOpen} />\r\n      <div className=\"vis-area\">\r\n        <div className=\"bubble\" style={{ borderBottom: \"1px solid black\" }}>\r\n          <BubbleEng />\r\n        </div>\r\n        <div\r\n          className=\"concept-recurrence-plot\"\r\n          style={{ marginTop: \"15px\", overflow: \"hidden\" }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"fixed\",\r\n              overflow: \"hidden\",\r\n              zIndex: \"1000\",\r\n              fontWeight: \"550\",\r\n              backgroundColor: \"white\",\r\n              marginTop: \"0px\",\r\n              fontSize: \"14px\",\r\n              height: \"25px\",\r\n              textAlign: \"left\",\r\n              marginLeft: \"15px\",\r\n            }}\r\n          >\r\n            Co-Occurrenece Matrix for Exploration Argumentation\r\n          </div>\r\n          <svg\r\n            className=\"fullSvg\"\r\n            ref={d3Container}\r\n            style={{ overflow: \"visible\" }}\r\n          >\r\n            <g\r\n              className=\"zoomable\"\r\n              transform={transform ? transform.toString() : undefined}\r\n            >\r\n              <g className=\"svgG\">\r\n                <g\r\n                  transform={`translate(${-325}, ${290}) scale(1.32 -1.32) rotate(-45)`}\r\n                >\r\n                  <SubChart />\r\n                  <rect\r\n                    style={{\r\n                      fill: \"#ffffff\",\r\n                    }}\r\n                  />\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <TranscriptViewer\r\n        isOpen={isOpen}\r\n        dataStructureMaker={dataStructureManager}\r\n      ></TranscriptViewer>\r\n      <ConceptualMapModal\r\n        ref={conceptualMapModalRef}\r\n        participantDict={\r\n          dataStructureManager\r\n            ? dataStructureManager.dataStructureSet.participantDict\r\n            : {}\r\n        }\r\n        utteranceObjects={debateDataset ? debateDataset.utteranceObjects : []}\r\n        termList={debateDataset ? debateDataset.termList : []}\r\n        termUtteranceBooleanMatrixTransposed={\r\n          debateDataset\r\n            ? debateDataset.termUtteranceBooleanMatrixTransposed\r\n            : []\r\n        }\r\n        termType={termTypeOfQuery}\r\n      ></ConceptualMapModal>\r\n    </div>\r\n  );\r\n}\r\nexport default ConceptualRecurrencePlot;\r\n","// export const ADD_TODO = \"ADD_TODO\";\r\n// export const TOGGLE_TODO = \"TOGGLE_TODO\";\r\n// export const SET_FILTER = \"SET_FILTER\";\r\n\r\nexport const CHANGE_STANDARD_SIMILARITY_SCORE =\r\n  \"CHANGE_STANDARD_SIMILARITY_SCORE\";\r\n","// /* eslint-disable no-unused-vars */\r\n// import { Button, Checkbox } from \"antd\";\r\n// import React, { useState } from \"react\";\r\n// import styles from \"./Home.module.scss\";\r\n// import { Link } from \"react-router-dom\";\r\n// import Axios from \"axios\";\r\n// import {\r\n//   aiopenAccessKey,\r\n//   nodeExpressAddress,\r\n//   pythonFlaskAddress,\r\n// } from \"../../constants/constants\";\r\n// import { TermType } from \"../ConceptualRecurrencePlot/DataImporter\";\r\n// import { style } from \"d3-selection\";\r\n\r\n// interface ComponentProps {}\r\n\r\n// function Home(props: ComponentProps) {\r\n//   const [termType, setTermType] = useState<TermType>(\"compound_term\");\r\n\r\n//   return (\r\n//     <div className={styles.home}>\r\n//       <div className={styles.serviceTitle}>MetaDebateVis</div>\r\n//       <div className={styles.links}>\r\n//         <Button\r\n//           className={styles.button}\r\n//           href={`/coocurence_matrix?debate_name=모병제&term_type=${termType}`}\r\n//         >\r\n//           Recruitment System\r\n//         </Button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Home;\r\n/* eslint-disable no-unused-vars */\r\nimport { Button, Checkbox } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport styles from \"./Home.module.scss\";\r\nimport { Link } from \"react-router-dom\"; // Link 를 사용하기 위해 임포트\r\nimport Axios from \"axios\";\r\nimport {\r\n  aiopenAccessKey,\r\n  nodeExpressAddress,\r\n  pythonFlaskAddress,\r\n} from \"../../constants/constants\";\r\nimport { TermType } from \"../ConceptualRecurrencePlot/DataImporter\";\r\nimport { style } from \"d3-selection\";\r\n\r\n// ... (기타 임포트 내용)\r\ninterface ComponentProps {}\r\n\r\nfunction Home(props: ComponentProps) {\r\n  const [termType, setTermType] = useState<TermType>(\"compound_term\");\r\n\r\n  return (\r\n    <div className={styles.home}>\r\n      <div className={styles.serviceTitle}>MetaDebateVis</div>\r\n      <div className={styles.links}>\r\n        <Link\r\n          to={`/coocurence_matrix?debate_name=모병제&term_type=${termType}`}\r\n          className={`${styles.button} ant-btn ant-btn-primary`}\r\n        >\r\n          Recruitment system(모병제)\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","// /* eslint-disable no-unused-vars */\r\n// import React from \"react\";\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   useLocation,\r\n//   useHistory,\r\n// } from \"react-router-dom\";\r\n// import \"./App.scss\";\r\n// import ConceptualRecurrencePlot from \"./views/ConceptualRecurrencePlot/ConceptualRecurrencePlot\";\r\n// import Home from \"./views/Home/Home\";\r\n\r\n// function App() {\r\n//   return (\r\n//     <Router>\r\n//       <div>\r\n//         <Switch>\r\n//           <Route path=\"/coocurence_matrix\">\r\n//             <ConceptualRecurrencePlot></ConceptualRecurrencePlot>\r\n//           </Route>\r\n//           <Route path=\"/\">\r\n//             <Home />\r\n//           </Route>\r\n//         </Switch>\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\nimport React from \"react\";\r\nimport {\r\n  HashRouter as Router, // 변경: BrowserRouter -> HashRouter\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport \"./App.scss\";\r\nimport ConceptualRecurrencePlot from \"./views/ConceptualRecurrencePlot/ConceptualRecurrencePlot\";\r\nimport Home from \"./views/Home/Home\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/coocurence_matrix\">\r\n            <ConceptualRecurrencePlot />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable no-unused-vars */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { CHANGE_STANDARD_SIMILARITY_SCORE } from \"../actionTypes\";\r\nimport { Reducer } from \"redux\";\r\nimport { ChangeStandardSimilarityScoreAction } from \"../actions\";\r\n// import { maxSimilarityScore } from \"../../views/ConceptualRecurrencePlot/DataStructureMaker\";\r\n\r\nexport interface StandardSimilarityScoreState {\r\n  standardSimilarityScore: number;\r\n}\r\nconst initialState: StandardSimilarityScoreState = {\r\n  // standardSimilarityScore: maxSimilarityScore,\r\n  standardSimilarityScore: 100000,\r\n};\r\n\r\nconst standardSimilarityScoreReducer: Reducer<\r\n  StandardSimilarityScoreState,\r\n  ChangeStandardSimilarityScoreAction\r\n> = (state = initialState, action: ChangeStandardSimilarityScoreAction) => {\r\n  switch (action.type) {\r\n    case CHANGE_STANDARD_SIMILARITY_SCORE: {\r\n      return {\r\n        ...state,\r\n        standardSimilarityScore: action.payload.standardSimilarityScore,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default standardSimilarityScoreReducer;\r\n","import { combineReducers } from \"redux\";\r\n// import visibilityFilter from \"./visibilityFilter\";\r\n// import todos from \"./todos\";\r\nimport standardSimilarityScoreReducer from \"./standardSimilarityScoreReducer\";\r\n\r\n// export default combineReducers({ todos, visibilityFilter });\r\n\r\nconst combinedReducers = combineReducers({\r\n  standardSimilarityScoreReducer,\r\n});\r\nexport default combinedReducers;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}